% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bage_mod-methods.R
\name{components.bage_mod}
\alias{components.bage_mod}
\title{Extract Values for Hyper-Parameters}
\usage{
\method{components}{bage_mod}(object, standardize = TRUE, quiet = FALSE, ...)
}
\arguments{
\item{object}{A \code{bage_mod} object,
typically created with \code{\link[=mod_pois]{mod_pois()}},
\code{\link[=mod_binom]{mod_binom()}}, or \code{\link[=mod_norm]{mod_norm()}}.}

\item{standardize}{Whether to standardize
parameter estimates. See below for details.
Default is \code{TRUE}. Standardization methods are
still under development, and may change in future.
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}.}

\item{quiet}{Whether to suppress messages.
Default is \code{FALSE}.}

\item{...}{Unused. Included for generic consistency only.}
}
\value{
A \link[tibble:tibble-package]{tibble}
with four columns columns:

The return value contains the following columns:
\itemize{
\item \code{term} Model term that the hyper-parameter belongs to.
\item \code{component} Component within term.
\item \code{level} Element within component .
\item \code{.fitted} An \link[rvec:rvec]{rvec} containing
draws from the posterior distribution.
}
}
\description{
Extract values for hyper-parameters
from a model object. Includes values for
main effects and interactions, values
for dispersions or variances terms,
and parameters such as SVD or spline
coefficients.
}
\section{Fitted vs unfitted models}{


\code{components()} is typically called on a \link[=fit]{fitted}
model. In this case, the modelled values are
draws from the joint posterior distribution for the
hyper-parameters in the model.

\code{components()} can, however, be called on an
unfitted model. In this case, the modelled values
are draws from the joint prior distribution.
In other words, the modelled values are informed by
model priors, and by any \code{exposure}, \code{size}, or \code{weights}
argument in the model, but not by the observed outcomes.
}

\section{Standardizing estimates}{


In many models, the sum of the intercept, main effects,
and interactions is well-identified by the data, but
the values of the intercept, main effects,
and interactions are not. For instance, consider a model
containing the lines

\deqn{y_i \sim \text{N}(\mu_i, \sigma^2)}
\deqn{\mu_i = \beta^{(0)} + \beta_i^{(1)}.}

If we add 1 to \eqn{\beta^{(0)}} and subtract 1
from each of the \eqn{\beta_i^{(1)}}, then the \eqn{\mu_i}
are unchanged, and the model's fit to the
\eqn{y_i} is unchanged. This indeterminacy does not
affect our ability to estimate the \eqn{\mu_i},
but does complicate the interpretation of \eqn{\beta^{(0)}}
and the \eqn{\beta_i^{(1)}}.

A common strategy for dealing with poorly-
identified intercepts, main effects, and interactions
is to post-process the estimates, so that all terms
other than the intercept, are constrained to sum to zero.
By default, this is what \strong{bage} does. For a
description of the algorithm used by \strong{bage},
see \code{vignette("vig2_math")}.

For unstandardized
estimates, set \code{standardize} to \code{FALSE}.

Batches of parameters, such as seasonal effects,
that have the same structure as main effects and
interactions have the same problems of indeterminacy.
By default, these parameters are also standardized.
}

\examples{
## specify model
mod <- mod_pois(injuries ~ age + sex + year,
                data = injuries,
                exposure = popn)

## extract prior distribution
## of hyper-parameters
mod |>
  components()

## fit model
mod <- mod |>
  fit()

## extract posterior distribution
## of hyper-parameters
mod |>
  components()
}
\seealso{
\itemize{
\item \code{\link[=augment]{augment()}} Extract data and values for rates,
means, or probabilities
\item \code{\link[=tidy]{tidy()}} Extract a one-line summary of a model
\item \code{\link[=mod_pois]{mod_pois()}} Specify a Poisson model
\item \code{\link[=mod_binom]{mod_binom()}} Specify a binomial model
\item \code{\link[=mod_norm]{mod_norm()}} Specify a normal model
\item \code{\link[=fit]{fit()}} Fit a model
\item \code{\link[=is_fitted]{is_fitted()}} See if a model has been fitted
}
}
