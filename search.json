[{"path":"https://bayesiandemography.github.io/bage/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Bayesian Demography Limited Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1. Overview","text":"bage (= “Bayesian” + “age”) implements Bayesian hierarchical models rates, probabilities, means. rates, probabilities, means cross-classified variables age, sex, region, time. Models bage can used estimation forecasting. bage models built smaller submodels. model mortality rates, instance, might contain submodels describing rates vary age, sex, time. Internally, bage draws package TMB fitting. TMB fast can handle large datasets. vignette introduces main features bage, using data injuries case study.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"packages","dir":"Articles","previous_headings":"2 Preliminaries","what":"Packages","title":"1. Overview","text":"begin loading packages need analysing injuries data. Loading bage automatically loads package rvec, contains functions working draws probability distributions. Package poputils contains functions working demographic data. Packages dplyr tidyr core tidyverse packages manipulating data. use ggplot2 graphics.","code":"suppressPackageStartupMessages({   library(bage)   library(poputils)   library(dplyr)   library(tidyr)   library(ggplot2) })"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"data","dir":"Articles","previous_headings":"2 Preliminaries","what":"Data","title":"1. Overview","text":"analyse dataset called nzl_injuries. dataset included bage. contains counts fatal injuries population New Zealand, classified age, sex, ethnicity, year.","code":"head(nzl_injuries) #> # A tibble: 6 × 6 #>   age   sex    ethnicity  year injuries  popn #>   <fct> <chr>  <chr>     <int>    <int> <int> #> 1 0-4   Female Maori      2000       12 35830 #> 2 5-9   Female Maori      2000        6 35120 #> 3 10-14 Female Maori      2000        3 32830 #> 4 15-19 Female Maori      2000        6 27130 #> 5 20-24 Female Maori      2000        6 24380 #> 6 25-29 Female Maori      2000        6 24160 nzl_injuries |>   filter(year %in% c(2000, 2006, 2012, 2018)) |>   ggplot(aes(x = age_mid(age), y = injuries / popn, color = sex)) +   facet_grid(vars(ethnicity), vars(year)) +   geom_line() +   xlab(\"age\") +   theme(legend.position = \"top\",         legend.title = element_blank())"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"functions-for-specifying-models","dir":"Articles","previous_headings":"3 Specifying a model","what":"Functions for specifying models","title":"1. Overview","text":"specify model counts injuries treated random draws Poisson distributions. expected number injuries varies different combinations age, sex, ethnicity, year. Binomial models specified function mod_binom() normal models function mod_norm().","code":"mod <- mod_pois(injuries ~ age * sex + age * ethnicity + year,                 data = nzl_injuries,                 exposure = popn)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"model-structure","dir":"Articles","previous_headings":"3 Specifying a model","what":"Model structure","title":"1. Overview","text":"resulting model following structure:  number injuries occurring within combination age, sex, ethnicity, time reflects () population risk (ii) underlying rate bage referred .fitted. expected value .fitted obtained summing values intercept, age effect, sex effect, forth. actual value .fitted can diverge .expected: amount divergence governed disp (dispersion) parameter. model terms given “prior distributions”. prior distribution submodel capturing features unknown quantity quantities estimated. Possible features include range within quantity likely fall, amount smoothness expected series values. Priors distributions distinctive feature Bayesian methods.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"printing-the-model-object","dir":"Articles","previous_headings":"3 Specifying a model","what":"Printing the model object","title":"1. Overview","text":"Printing model object provides information structure: table middle printout shows default prior distribution assigned term. return priors Section 6. bottom row printed object shows various model settings. n_draw number random draws produced extractor functions, discuss Section 5. var_time, var_age, var_sexgender names variables nzl_injuries represent time, age, sex gender. bage fails correctly identify variables, can identified using functions set_var_time().","code":"mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age * sex + age * ethnicity + year #>  #>   exposure = popn #>  #>           term  prior along n_par n_par_free #>    (Intercept) NFix()     -     1          1 #>            age   RW()   age    12         12 #>            sex NFix()     -     2          2 #>      ethnicity NFix()     -     2          2 #>           year   RW()  year    19         19 #>        age:sex   RW()   age    24         24 #>  age:ethnicity   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"fit","dir":"Articles","previous_headings":"4 Fitting a model","what":"fit()","title":"1. Overview","text":"Function mod_pois() specifies model, actually estimate unknown quantities model. , need function fit().","code":"mod <- mod |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters..."},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"reprinting-the-model-object","dir":"Articles","previous_headings":"4 Fitting a model","what":"Reprinting the model object","title":"1. Overview","text":"printout fitted model differs unfitted model. Among things, new row appears bottom printout, providing information fitting process. important value piece information whether calculations converged. One thing printout include estimates model parameters. reason excluding many. Statistical models R packages often focus one two key parameters, parameter measuring treatment effect. contrast, models bage often estimate values thousands, tens thousands, parameters. obtain estimates fitted model, need specialised extractor functions, discuss next.","code":"mod #>  #>     ------ Fitted Poisson model ------ #>  #>    injuries ~ age * sex + age * ethnicity + year #>  #>   exposure = popn #>  #>           term  prior along n_par n_par_free std_dev #>    (Intercept) NFix()     -     1          1       - #>            age   RW()   age    12         12    0.71 #>            sex NFix()     -     2          2    0.11 #>      ethnicity NFix()     -     2          2    0.36 #>           year   RW()  year    19         19    0.09 #>        age:sex   RW()   age    24         24    0.43 #>  age:ethnicity   RW()   age    24         24    0.13 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     year     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        0.76     0.32      0.33   13      TRUE   relative convergence (4)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"extractor-functions","dir":"Articles","previous_headings":"5 Extracting outputs","what":"Extractor functions","title":"1. Overview","text":"two important extractor functions bage augment() components(). generic functions work many sorts R objects (see ).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"augment","dir":"Articles","previous_headings":"5 Extracting outputs","what":"augment()","title":"1. Overview","text":"augment() returns original dataset plus additional columns estimated values, additional columns .observed, .fitted, .expected. Poisson model exposures, .observed “direct” estimate rate, obtained dividing outcome variable population risk; .expected model-based estimate rate, based purely model predictors (eg age, sex, time); .fitted model-based estimate rate compromise .observed .expected.","code":"aug <- mod |>   augment() #> Drawing `.expected`... #> Drawing `.fitted`... aug #> # A tibble: 912 × 9 #>    age   sex    ethnicity  year injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <int> <int>     <dbl> #>  1 0-4   Female Maori      2000       12 35830 0.000335  #>  2 5-9   Female Maori      2000        6 35120 0.000171  #>  3 10-14 Female Maori      2000        3 32830 0.0000914 #>  4 15-19 Female Maori      2000        6 27130 0.000221  #>  5 20-24 Female Maori      2000        6 24380 0.000246  #>  6 25-29 Female Maori      2000        6 24160 0.000248  #>  7 30-34 Female Maori      2000       12 22560 0.000532  #>  8 35-39 Female Maori      2000        3 22230 0.000135  #>  9 40-44 Female Maori      2000        6 18130 0.000331  #> 10 45-49 Female Maori      2000        6 13770 0.000436  #> # ℹ 902 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>> aug |>   select(.observed, .fitted, .expected)  #> # A tibble: 912 × 3 #>    .observed                    .fitted                  .expected #>        <dbl>               <rdbl<1000>>               <rdbl<1000>> #>  1 0.000335    3e-04 (0.00023, 0.00039) 0.00029 (0.00026, 0.00034) #>  2 0.000171  7.8e-05 (5.6e-05, 0.00011)   7.5e-05 (6.1e-05, 9e-05) #>  3 0.0000914   1e-04 (7.4e-05, 0.00014)   1e-04 (8.6e-05, 0.00012) #>  4 0.000221  0.00041 (0.00031, 0.00052)   0.00045 (4e-04, 0.00051) #>  5 0.000246    0.00038 (3e-04, 0.00049)   4e-04 (0.00036, 0.00046) #>  6 0.000248  0.00035 (0.00027, 0.00045) 0.00037 (0.00033, 0.00041) #>  7 0.000532  0.00038 (0.00029, 0.00049) 0.00036 (0.00032, 0.00041) #>  8 0.000135  0.00032 (0.00024, 0.00041) 0.00034 (0.00029, 0.00038) #>  9 0.000331  0.00033 (0.00025, 0.00043) 0.00033 (0.00029, 0.00038) #> 10 0.000436    0.00031 (0.00024, 4e-04) 0.00031 (0.00027, 0.00035) #> # ℹ 902 more rows"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"components","dir":"Articles","previous_headings":"5 Extracting outputs","what":"components()","title":"1. Overview","text":"components() used extract values higher-level parameters. returns values parameters. output components() may require bit tidying,","code":"comp <- mod |>   components() comp #> # A tibble: 89 × 4 #>    term        component level                  .fitted #>    <chr>       <chr>     <chr>             <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -1.8 (-3.5, 0.11) #>  2 age         effect    0-4         -1.7 (-3.5, 0.062) #>  3 age         effect    5-9          -2.9 (-4.7, -1.1) #>  4 age         effect    10-14       -2.5 (-4.3, -0.73) #>  5 age         effect    15-19        -0.87 (-2.7, 0.9) #>  6 age         effect    20-24        -0.78 (-2.6, 1.1) #>  7 age         effect    25-29       -0.92 (-2.8, 0.98) #>  8 age         effect    30-34       -0.99 (-2.8, 0.98) #>  9 age         effect    35-39          -1 (-2.8, 0.98) #> 10 age         effect    40-44          -1 (-2.8, 0.98) #> # ℹ 79 more rows age_effect <- comp |>   filter(term == \"age\",          component == \"effect\") |>   select(age = level, .fitted) age_effect #> # A tibble: 12 × 2 #>    age              .fitted #>    <chr>       <rdbl<1000>> #>  1 0-4   -1.7 (-3.5, 0.062) #>  2 5-9    -2.9 (-4.7, -1.1) #>  3 10-14 -2.5 (-4.3, -0.73) #>  4 15-19  -0.87 (-2.7, 0.9) #>  5 20-24  -0.78 (-2.6, 1.1) #>  6 25-29 -0.92 (-2.8, 0.98) #>  7 30-34 -0.99 (-2.8, 0.98) #>  8 35-39    -1 (-2.8, 0.98) #>  9 40-44    -1 (-2.8, 0.98) #> 10 45-49  -1.1 (-2.9, 0.94) #> 11 50-54    -1 (-2.9, 0.96) #> 12 55-59    -1 (-2.9, 0.96)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"posterior-samples","dir":"Articles","previous_headings":"5 Extracting outputs","what":"Posterior samples","title":"1. Overview","text":"output Bayesian model draws “posterior distribution” unknown quantities. posterior distribution probability distribution describes implied unknown quantities model combining model assumptions (including priors) data.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"rvecs","dir":"Articles","previous_headings":"5 Extracting outputs","what":"Rvecs","title":"1. Overview","text":"Draws probability distributions can awkward work , bage uses special type vector called “rvec”, implemented package rvec. rvec contains multiple draws, tries behave much possible like standard vector. printout .fitted .expected aug object shows medians 95% credible intervals.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"graphing-outputs","dir":"Articles","previous_headings":"5 Extracting outputs","what":"Graphing outputs","title":"1. Overview","text":"best way understand output fitted model graph . first need prepare data graph. select values 2018 use draws_ci() function rvec create 95% credible intervals. use ggplot() visualise outputs. good way display bage output use geom_ribbon() plot credible intervals, geom_line() plot model-based point estimates, geom_point() plot direct estimates.","code":"data_plot <- aug |>   filter(year == 2018) |>   mutate(draws_ci(.fitted)) data_plot |>   select(starts_with(\".fitted\")) #> # A tibble: 48 × 4 #>                       .fitted .fitted.lower .fitted.mid .fitted.upper #>                  <rdbl<1000>>         <dbl>       <dbl>         <dbl> #>  1 0.00023 (0.00017, 0.00029)     0.000172    0.000227      0.000291  #>  2 5.8e-05 (4.2e-05, 7.8e-05)     0.0000417   0.0000575     0.0000776 #>  3 8.6e-05 (6.4e-05, 0.00011)     0.0000640   0.0000864     0.000114  #>  4 0.00036 (0.00028, 0.00046)     0.000279    0.000361      0.000456  #>  5 0.00034 (0.00027, 0.00044)     0.000269    0.000345      0.000442  #>  6   0.00032 (0.00025, 4e-04)     0.000247    0.000319      0.000404  #>  7 0.00034 (0.00026, 0.00043)     0.000265    0.000337      0.000427  #>  8 0.00027 (0.00021, 0.00035)     0.000209    0.000272      0.000349  #>  9 0.00028 (0.00022, 0.00036)     0.000219    0.000281      0.000359  #> 10   0.00024 (0.00018, 3e-04)     0.000177    0.000238      0.000305  #> # ℹ 38 more rows ggplot(data_plot, aes(x = age_mid(age))) +   facet_grid(vars(sex), vars(ethnicity)) +   geom_ribbon(aes(ymin = .fitted.lower,                   ymax = .fitted.upper),               fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") +   geom_point(aes(y = .observed),              color = \"red\") +   xlab(\"age\")"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"priors-in-bayesian-models","dir":"Articles","previous_headings":"6 Priors","what":"Priors in Bayesian models","title":"1. Overview","text":"Bayesian model, every parameter needs assigned prior distribution. data provides abundant information parameter, particular choice prior distribution usually little effect ultimate estimates parameter. data provides limited information, different priors can lead different estimates. choice prior particularly important forecasting, since data provides provides indirect information future.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"current-priors-in-bage","dir":"Articles","previous_headings":"6 Priors","what":"Current priors in bage","title":"1. Overview","text":"help(priors) produces list priors implemented bage. examples: NFix(). element term modeled drawn normal distribution mean 0, standard deviation sd. default, sd 1. N(). Like NFix(), sd estimated data. RW(). elements term modeled follow random walk. appropriate terms involving time age, neighboring elements strongly correlated. AR1(). First-order autoregressive process. Suitable time series revert mean value.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"defaults","dir":"Articles","previous_headings":"6 Priors","what":"Defaults","title":"1. Overview","text":"bage uses following rules assign default priors model term: term less 3 elements, use NFix(); otherwise, term involves time, use RW(), time `along’ dimension; otherwise, term involves age, use RW(), age `along’ dimension; otherwise, use N(). Priors can -ridden using set_prior(): Replacing prior deletes existing estimates returns model ‘unfitted’ state. re-fit model.","code":"mod <- mod |>   set_prior(year ~ AR1()) is_fitted(mod) #> [1] FALSE mod <- mod |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters..."},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"svd-based-priors","dir":"Articles","previous_headings":"6 Priors","what":"SVD-based priors","title":"1. Overview","text":"bage implements special type prior based applying singular value decomposition (SVD) data international database. SVD-based priors represent age-sex patterns demographic processes fertility, mortality, labor force participation parsimonious way. model , instance, uses SVD-based priors age effects age-time interactions model regional fertility rates Korea. Note number free parameters (denoted n_par_free) age age:time printout much less total number parameters (denoted n_par) age age:time.","code":"mod_births <- mod_pois(births ~ age * region + age * time,                        data = kor_births,                        exposure = popn) |>   set_prior(age ~ SVD(HFD)) |>   set_prior(age:time ~ SVD_RW(HFD)) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_births #>  #>     ------ Fitted Poisson model ------ #>  #>    births ~ age * region + age * time #>  #>   exposure = popn #>  #>         term       prior along n_par n_par_free std_dev #>  (Intercept)      NFix()     -     1          1       - #>          age    SVD(HFD)     -     9          3    1.66 #>       region         N()     -    16         16    0.03 #>         time        RW()  time    13         13    0.46 #>   age:region        RW()   age   144        144    0.57 #>     age:time SVD_RW(HFD)  time   117         39    1.89 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age optimizer #>    1000     time     age    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        2.10     1.11      0.83   18      TRUE   relative convergence (4)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"covariates","dir":"Articles","previous_headings":"","what":"Covariates","title":"1. Overview","text":"main predictors bage model variables, age sex, used classify outcome. However, bage allow additional variables data used predictors. refer additional variables covariates, add model using function set_covariates():","code":"mod_pois(births ~ age * region + age * time,          data = kor_births,          exposure = popn) |>   set_covariates(~ gdp_pc_2023 + dens_2020) #>  #>     ------ Unfitted Poisson model ------ #>  #>    births ~ age * region + age * time #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age     9          9 #>       region    N()     -    16         16 #>         time   RW()  time    13         13 #>   age:region   RW()   age   144        144 #>     age:time   RW()  time   117        117 #>  #>  covariates: ~gdp_pc_2023 + dens_2020 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age #>    1000     time     age"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"forecasting","dir":"Articles","previous_headings":"","what":"Forecasting","title":"1. Overview","text":"Forecasts can constructed calling function forecast() model object. output argument forecast() \"augment\" (default), forecast() produces values like produced augment(). output argument \"components\", forecast() produces values like produced components(). argument include_estimates TRUE, return value includes historical estimates. useful plotting.","code":"aug_forecast <- mod |>   forecast(labels = 2019:2028) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... names(aug_forecast) #> [1] \"age\"       \"sex\"       \"ethnicity\" \"year\"      \"injuries\"  \"popn\"      #> [7] \".observed\" \".fitted\"   \".expected\" comp_forecast <- mod |>   forecast(labels = 2019:2028,            output = \"components\") #> `components()` for past values... #> `components()` for future values... comp_forecast #> # A tibble: 10 × 4 #>    term  component level              .fitted #>    <chr> <chr>     <chr>         <rdbl<1000>> #>  1 year  effect    2019  -0.089 (-0.35, 0.21) #>  2 year  effect    2020  -0.087 (-0.42, 0.27) #>  3 year  effect    2021  -0.075 (-0.45, 0.29) #>  4 year  effect    2022  -0.065 (-0.47, 0.35) #>  5 year  effect    2023     -0.06 (-0.5, 0.4) #>  6 year  effect    2024  -0.054 (-0.54, 0.41) #>  7 year  effect    2025  -0.049 (-0.56, 0.44) #>  8 year  effect    2026  -0.054 (-0.56, 0.42) #>  9 year  effect    2027   -0.04 (-0.57, 0.46) #> 10 year  effect    2028  -0.032 (-0.55, 0.52) data_forecast <- mod |>   fit() |>   forecast(labels = 2019:2028,            include_estimates = TRUE) |>   filter(sex == \"Female\",          age %in% c(\"10-14\", \"25-29\", \"40-44\")) |>   mutate(draws_ci(.fitted)) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> `augment()` for past values... #> Drawing `.expected`... #> `augment()` for past values...Drawing `.fitted`... #> `augment()` for past values...  ggplot(data_forecast, aes(x = year)) +   facet_grid(vars(age), vars(ethnicity)) +   geom_ribbon(aes(ymin = .fitted.lower,                   ymax = .fitted.upper),               fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") +   geom_point(aes(y = .observed),              color = \"red\")   #> Warning: Removed 60 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"imputation","dir":"Articles","previous_headings":"","what":"Imputation","title":"1. Overview","text":"bage automatically accommodates missing values outcome variables. illustrate version injuries dataset values 2010–2014 set NA. fit exactly model use complete dataset. bage creates new variable, called .injuries containing imputed values missing outcomes. Rates estimates years outcome missing wider credible intervals rates estimates years outcome observed.  value exposure, size, weights missing, associated row data omitted likelihood, imputations row made. Missing values classifying variables skipped way.","code":"years_mis <- 2010:2014  injuries_mis <- nzl_injuries |>   mutate(injuries = if_else(year %in% years_mis, NA, injuries)) mod_mis <- mod_pois(injuries ~ age * sex + age * ethnicity + year,                     data = injuries_mis,                     exposure = popn) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_mis |>   augment() |>   filter(year %in% years_mis) #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.injuries`... #> # A tibble: 240 × 10 #>    age   sex    ethnicity  year injuries    .injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <int> <rdbl<1000>> <int>     <dbl> #>  1 0-4   Female Maori      2010       NA   12 (5, 20) 43440        NA #>  2 5-9   Female Maori      2010       NA     3 (0, 7) 36340        NA #>  3 10-14 Female Maori      2010       NA     3 (0, 8) 35520        NA #>  4 15-19 Female Maori      2010       NA   14 (6, 23) 34960        NA #>  5 20-24 Female Maori      2010       NA   12 (5, 20) 31060        NA #>  6 25-29 Female Maori      2010       NA    8 (3, 14) 24000        NA #>  7 30-34 Female Maori      2010       NA    8 (3, 15) 23180        NA #>  8 35-39 Female Maori      2010       NA  7.5 (3, 14) 24260        NA #>  9 40-44 Female Maori      2010       NA    7 (2, 13) 22660        NA #> 10 45-49 Female Maori      2010       NA    6 (2, 12) 21730        NA #> # ℹ 230 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>> data_plot_mis <- mod_mis |>   augment() |>   filter(age == \"20-24\") |>   mutate(draws_ci(.fitted)) #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.injuries`...  ggplot(data_plot_mis, aes(x = year)) +   facet_grid(vars(sex), vars(ethnicity)) +   geom_ribbon(aes(ymin = .fitted.lower,                   ymax = .fitted.upper),               fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") +   geom_point(aes(y = .observed),              color = \"red\") +   xlab(\"age\") #> Warning: Removed 20 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"data-models","dir":"Articles","previous_headings":"","what":"Data models","title":"1. Overview","text":"far ignored possibility input data models might subject measurement errors. However, injuries variable nzl_injuries dataset subject special sort error: Statistics New Zealand randomly-rounded values base 3 protect confidentiality. deal measurement error, add ‘data model’ model. results calling augment() now include variable called .injuries estimated values true, unrounded injury counts.","code":"mod <- mod |>   set_datamod_outcome_rr3() |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod |>   augment() #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.injuries`... #> # A tibble: 912 × 10 #>    age   sex    ethnicity  year injuries    .injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <int> <rdbl<1000>> <int>     <dbl> #>  1 0-4   Female Maori      2000       12  12 (10, 14) 35830 0.000335  #>  2 5-9   Female Maori      2000        6     5 (4, 8) 35120 0.000171  #>  3 10-14 Female Maori      2000        3     3 (1, 5) 32830 0.0000914 #>  4 15-19 Female Maori      2000        6     7 (5, 8) 27130 0.000221  #>  5 20-24 Female Maori      2000        6     6 (4, 8) 24380 0.000246  #>  6 25-29 Female Maori      2000        6     6 (4, 8) 24160 0.000248  #>  7 30-34 Female Maori      2000       12  12 (10, 14) 22560 0.000532  #>  8 35-39 Female Maori      2000        3     4 (2, 5) 22230 0.000135  #>  9 40-44 Female Maori      2000        6     6 (4, 8) 18130 0.000331  #> 10 45-49 Female Maori      2000        6     6 (4, 8) 13770 0.000436  #> # ℹ 902 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"replicate-data","dir":"Articles","previous_headings":"11 Model checking","what":"Replicate data","title":"1. Overview","text":"standard Bayesian approach checking model use model generate simulate data see simulated data looks like actual data. Function replicate_data() creates multiple sets simulated data. Comparing full datasets difficult, usual strategy calculate summary measures capture important feature data, compare instead. see model properly capturing male-female differences injury rates. graph results see original data looks like drawn underlying distribution simulated data.","code":"rep_data <- mod |>   replicate_data() #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.injuries`... rep_data #> # A tibble: 18,240 × 7 #>    .replicate age   sex    ethnicity  year injuries  popn #>    <fct>      <fct> <chr>  <chr>     <int>    <dbl> <int> #>  1 Original   0-4   Female Maori      2000       12 35830 #>  2 Original   5-9   Female Maori      2000        6 35120 #>  3 Original   10-14 Female Maori      2000        3 32830 #>  4 Original   15-19 Female Maori      2000        6 27130 #>  5 Original   20-24 Female Maori      2000        6 24380 #>  6 Original   25-29 Female Maori      2000        6 24160 #>  7 Original   30-34 Female Maori      2000       12 22560 #>  8 Original   35-39 Female Maori      2000        3 22230 #>  9 Original   40-44 Female Maori      2000        6 18130 #> 10 Original   45-49 Female Maori      2000        6 13770 #> # ℹ 18,230 more rows sex_ratio <- rep_data |>   count(.replicate, year, sex, wt = injuries) |>   pivot_wider(names_from = sex, values_from = n) |>   mutate(ratio = Male / Female) sex_ratio #> # A tibble: 380 × 5 #>    .replicate  year Female  Male ratio #>    <fct>      <int>  <dbl> <dbl> <dbl> #>  1 Original    2000    279   873  3.13 #>  2 Original    2001    276   846  3.07 #>  3 Original    2002    303   855  2.82 #>  4 Original    2003    330   873  2.65 #>  5 Original    2004    306   840  2.75 #>  6 Original    2005    300   876  2.92 #>  7 Original    2006    291   828  2.85 #>  8 Original    2007    321   843  2.63 #>  9 Original    2008    339   864  2.55 #> 10 Original    2009    303   900  2.97 #> # ℹ 370 more rows ggplot(sex_ratio, aes(x = year, y = ratio)) +   facet_wrap(vars(.replicate)) +   geom_line()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"simulation-studies","dir":"Articles","previous_headings":"11 Model checking","what":"Simulation studies","title":"1. Overview","text":"simulation study, create data hence know true values parameters, can useful way assessing model performance. example , use function report_sim() perform simple simulation study true population generated using first-order random walk, estimation model assumes population generated using second-order random walk.","code":"set.seed(0)  ## Create simulated data fake_data <- data.frame(year = 2001:2010,                          population = NA)  ## Define the true data-generating model mod_rw <- mod_pois(population ~ year,                    data = fake_data,                    exposure = 1) |>   set_prior(`(Intercept)` ~ NFix(sd = 0.1)) |>   set_prior(year ~ RW(s = 0.1, sd = 0.1))  ## Define the estimation model mod_rw2 <- mod_pois(population ~ year,                     data = fake_data,                     exposure = 1) |>   set_prior(year ~ RW2())  ## Run the simulation report_sim(mod_est = mod_rw2, mod_sim = mod_rw) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> $components #> # A tibble: 3 × 7 #>   term        component  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>       <chr>       <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 (Intercept) effect    -0.0672     0.92       1          1.11       3.22 #> 2 year        effect    -0.218      0.754      1          1.56       4.50 #> 3 disp        disp      -0.130      0.41       0.91       1.09       4.60 #>  #> $augment #> # A tibble: 2 × 7 #>   .var      .observed  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>         <dbl>   <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 .fitted        1.03 -0.171      0.487     0.961      0.865       2.92 #> 2 .expected      1.03 -0.0311     0.581     0.984      1.01       29.5"},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"prior-predictive-checks","dir":"Articles","previous_headings":"11 Model checking","what":"Prior predictive checks","title":"1. Overview","text":"Another way gaining insights model look estimates based purely priors, without using data outcome variable. bage, can done calling augment(), components() forecast() unfitted version model.","code":"mod |>   unfit() |>   components() #> ℹ Model not fitted, so values drawn straight from prior distribution. #> # A tibble: 90 × 4 #>    term        component level                  .fitted #>    <chr>       <chr>     <chr>             <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -0.07 (-1.9, 1.9) #>  2 age         effect    0-4            0.059 (-1.8, 2) #>  3 age         effect    5-9          0.052 (-2.4, 2.8) #>  4 age         effect    10-14        0.035 (-3.1, 3.6) #>  5 age         effect    15-19        0.055 (-3.8, 3.9) #>  6 age         effect    20-24        0.033 (-4.5, 4.4) #>  7 age         effect    25-29        -0.0078 (-5, 5.2) #>  8 age         effect    30-34       -0.018 (-5.5, 5.7) #>  9 age         effect    35-39       -0.042 (-5.8, 6.2) #> 10 age         effect    40-44        0.068 (-5.9, 6.5) #> # ℹ 80 more rows"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"future-features","dir":"Articles","previous_headings":"12 Future development of bage","what":"Future features","title":"1. Overview","text":"bage new package, still active development. features next list : Data models Additional data models, eg models allow -reporting events, errors exposure variable. Priors options priors, eg damped linear trend. Sets priors Pre-specified collections priors specific purposes modelling fertility rates Documentation vignettes examples. Model choice Tools model comparison model choice","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"experimental-status","dir":"Articles","previous_headings":"12 Future development of bage","what":"Experimental status","title":"1. Overview","text":"bage currently  life cycle badge, warn users features bage interface, function arguments, still evolving. hope graduate experimental status 2025.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig1_intro.html","id":"bug-reports-and-feature-requests","dir":"Articles","previous_headings":"12 Future development of bage","what":"Bug reports and feature requests","title":"1. Overview","text":"grateful bug reports suggestions features. best way raise issue bage GitHub repository.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2. Mathematical Details","text":"Specification document - mathematical description models used bage. Note: features described implemented yet.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:data","dir":"Articles","previous_headings":"","what":"Input data","title":"2. Mathematical Details","text":"outcome variable: events, numbers people, sort measure continuous variable income expenditure exposure/size/weights disagg one variables. Almost always includes age, sex/gender, time. May include variables eg region, ethnicity, education. combinations variables present; may missing values","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:pois","dir":"Articles","previous_headings":"3 Models","what":"Poisson likelihood","title":"2. Mathematical Details","text":"Let \\(y_i\\) count events cell \\(= 1, \\cdots, n\\) let \\(w_i\\) corresponding exposure measure, possibility \\(w_i \\equiv 1\\). likelihood Poisson model \\[\\begin{align}   y_i & \\sim \\text{Poisson}(\\gamma_i w_i) \\tag{3.1} \\\\   \\gamma_i & \\sim \\text{Gamma}\\left(\\xi^{-1}, (\\mu_i \\xi)^{-1}\\right),  \\tag{3.2} \\end{align}\\] using shape-rates parameterisation Gamma distribution. Parameter \\(\\xi\\) governs dispersion, \\[\\begin{equation}   \\text{var}(\\gamma_i \\mid \\mu_i, \\xi) = \\xi \\mu_i^2 \\end{equation}\\] \\[\\begin{equation}   \\text{var}(y_i \\mid \\mu_i, \\xi, w_i) = (1 + \\xi \\mu_i w_i ) \\times \\mu_i w_i. \\end{equation}\\] allow \\(\\xi\\) equal 0, case model reduces \\[\\begin{equation}   y_i \\sim \\text{Poisson}(\\mu_i w_i). \\end{equation}\\] \\(\\xi > 0\\), Equations (3.1) (3.2) equivalent \\[\\begin{equation}   y_i \\sim \\text{NegBinom}\\left(\\xi^{-1}, (1 + \\mu_i w_i \\xi)^{-1}\\right) \\end{equation}\\] (Norton, Christen, Fox 2018; Simpson 2022). format use internally estimation. values \\(\\gamma_i\\) needed, generate fly, using fact \\[\\begin{equation}   \\gamma_i \\mid y_i, w_i, \\mu_i, \\xi \\sim \\text{Gamma}\\left(y_i + \\xi^{-1}, w_i + (\\xi \\mu_i)^{-1}\\right). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:binom","dir":"Articles","previous_headings":"3 Models","what":"Binomial likelihood","title":"2. Mathematical Details","text":"likelihood binomial model \\[\\begin{align}   y_i  & \\sim \\text{Binomial}(w_i, \\gamma_i) \\tag{3.3} \\\\   \\gamma_i & \\sim \\text{Beta}\\left(\\xi^{-1} \\mu_i, \\xi^{-1}(1 - \\mu_i)\\right). \\tag{3.4} \\end{align}\\] Parameter \\(\\xi\\) governs dispersion, \\[\\begin{equation}   \\text{var}(\\gamma_i \\mid \\mu_i, \\xi) =  \\frac{\\xi}{1 + \\xi} \\times \\mu_i (1 -\\mu_i) \\end{equation}\\] \\[\\begin{equation}   \\text{var}(y_i \\mid w_i, \\mu_i, \\xi) =  \\frac{\\xi w_i + 1}{\\xi + 1} \\times w_i \\mu_i (1 - \\mu_i). \\end{equation}\\] allow \\(\\xi\\) equal 0, case model reduces \\[\\begin{equation}   y_i \\sim  \\text{Binom}(w_i, \\mu_i). \\end{equation}\\] Equations (3.3) (3.4) equivalent \\[\\begin{equation}   y_i  \\sim \\text{BetaBinom}\\left(w_i, \\xi^{-1} \\mu_i, \\xi^{-1} (1 - \\mu_i) \\right), \\end{equation}\\] use internally. Values \\(\\gamma_i\\) can generated using \\[\\begin{equation}   \\gamma_i \\mid y_i, w_i, \\mu_i, \\xi \\sim \\text{Beta}\\left(y_i + \\xi^{-1} \\mu_i, w_i - y_i + \\xi^{-1}(1-\\mu_i) \\right). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:norm","dir":"Articles","previous_headings":"3 Models","what":"Normal likelihood","title":"2. Mathematical Details","text":"normal model \\[\\begin{align}   y_i & \\sim \\text{N}(\\gamma_i, w_i^{-1} \\sigma^2) \\\\   \\gamma_i & = \\bar{y} + s \\mu_i \\\\   \\sigma^2 & = \\bar{w} s^2 \\xi^2 \\end{align}\\] \\[\\begin{align}   \\bar{y} & = \\frac{\\sum_{=1}^n y_i}{n} \\\\   s & = \\sqrt{\\frac{\\sum_{=1}^n (y_i - \\bar{y})^2}{n-1}} \\\\   \\bar{w} & = \\frac{\\sum_{=1}^n w_i}{n}. \\end{align}\\] Mean \\(\\mu_i\\) stanard deviation \\(\\xi\\) defined scale used standardized versinos \\(y\\) \\(w\\). Standardizing allows us apply priors use Poisson binomial models.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:means","dir":"Articles","previous_headings":"","what":"Model for prior means","title":"2. Mathematical Details","text":"Let \\(\\pmb{\\mu} = (\\mu_1, \\cdots, \\mu_n)^{\\top}\\). model \\(\\pmb{\\mu}\\) \\[\\begin{equation}   \\pmb{\\mu} = \\sum_{m=0}^{M} \\pmb{X}^{(m)} \\pmb{\\beta}^{(m)} + \\pmb{Z} \\pmb{\\zeta} \\tag{4.1} \\end{equation}\\] \\(\\beta^{(0)}\\) intercept; \\(\\pmb{\\beta}^{(m)}\\), \\(m=1,\\cdots,M\\) vector \\(J_m\\) elements describing main effect interaction formed dimensions data \\(\\pmb{y}\\); \\(\\pmb{X}^{(m)}\\) \\(n \\times J_m\\) matrix 1s 0s, \\(\\)th row picks element \\(\\pmb{\\beta}^{(m)}\\) used cell \\(\\); \\(\\pmb{Z}\\) \\(n \\times P\\) matrix covariates; \\(\\pmb{\\zeta}\\) coefficient vector \\(P\\) elements.","code":""},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"along-and-by-dimensions","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.1 General features","what":"‘Along’ and ‘by’ dimensions","title":"2. Mathematical Details","text":"\\(\\pmb{\\beta}^{(m)}\\), \\(m > 0\\), can main effect, involving single dimension, interaction, involving two dimensions. priors, applied interaction, treat one dimension, referred ‘along’ dimension, differently remaining dimensions, referred ‘’ dimensions. random walk prior (Section 5.4), instance, consists independent random walk along ‘along’ dimension, within combination ‘’ dimensions. use \\(v = 1, \\cdots, V_m\\) denote position within ‘along’ dimension, \\(u = 1, \\cdots, V_m\\) denote position within classification formed ‘’ dimensions. sum--zero constraints (see ), \\(U_m = \\prod_k d_k\\) \\(d_k\\) number elements \\(k\\)th ‘’ variable. sum--zero constraints, \\(U_m = \\prod_k (d_k - 1)\\). prior involves ‘along’ dimension user specify one, procedure choosing dimension follows: term involves time, use time dimension; otherwise, term involves age, use age dimension; otherwise, raise error asking user explicitly specify dimension.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:constraints","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.1 General features","what":"Constraints","title":"2. Mathematical Details","text":"combinations terms priors, \\(\\pmb{\\beta}^{(m)}\\) weakly identified, diffuse prior distributions. Even happens, however, quantity \\(\\mu_i = \\sum_{m=0}^M \\beta_{j_i^m}^{(m)}\\) still well identified, weak identification may matter aims analysis. , however, stronger identification required, can achieved imposing constraints elements \\(\\pmb{\\beta}^{(m)}\\). done via con argument. present two choices con implemented. first \"none\", constraints applied. default. second \"\". \"\" option can used \\(\\pmb{\\beta}^{(m)}\\) ‘along’ dimension. con \"\", within element \\(v\\) ‘along’ dimension, sum \\(\\beta_j^{(m)}\\) across ‘’ dimension zero. instance, \\(\\pmb{\\beta}^{(m)}\\) interaction time, region, sex, time ‘along’ variable, within combination time region, values females males sum zero, within combination time sex, values regions sum zero. Except case dynamic SVD-based priors (eg Sections 5.16), \"\" constraints implemented internally drawing values within unrestricted lower-dimensional space, transforming restricted higher-dimensional space. instance, random walk prior time-region interaction \\(R\\) regions consists \\(R-1\\) unrestricted random walks along time, converted \\(R\\) random walks sum zero across region. Matrices transforming unrestricted restricted spaces constructed using QR decomposition, described Section 1.8.1 Wood (2017). dynamic SVD-based priors, draw values SVD coefficients constraints, convert unconstrained values \\(\\pmb{\\beta}^{(m)}\\), subtract means.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"algorithm-for-assigning-default-priors","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.1 General features","what":"Algorithm for assigning default priors","title":"2. Mathematical Details","text":"\\(\\pmb{\\beta}^{(m)}\\) one two elements, assign \\(\\pmb{\\beta}^{(m)}\\) fixed-normal prior (Section 5.3); otherwise, \\(\\pmb{\\beta}^{(m)}\\) involves time, assign \\(\\pmb{\\beta}^{(m)}\\) random walk prior (Section 5.4) along time dimension; otherwise, \\(\\pmb{\\beta}^{(m)}\\) involves age, assign \\(\\pmb{\\beta}^{(m)}\\) random walk prior (Section 5.4) along age dimension; otherwise, assign \\(\\pmb{\\beta}^{(m)}\\) normal prior (Section 5.2) intercept term \\(\\pmb{\\beta}^{(0)}\\) can given fixed-normal prior (Section 5.3) Known prior (Section 5.18).","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.2 N()","what":"Model","title":"2. Mathematical Details","text":"Exchangeable normal \\[\\begin{align}   \\beta_j^{(m)} & \\sim \\text{N}\\left(0, \\tau_m^2 \\right) \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, A_{\\tau}^{(m)2}\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.2 N()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{j=1}^{J_m} \\text{N}(\\beta_j^{(m)} \\mid 0, \\tau_m^2) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.2 N()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}     \\beta_{J_m+h+1}^{(m)} \\sim \\text{N}(0, \\tau_m^2) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.2 N()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\). Defaults 1.","code":"N(s = 1)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-1","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.3 NFix()","what":"Model","title":"2. Mathematical Details","text":"Exchangeable normal, fixed standard deviation \\[\\begin{equation}   \\beta_j^{(m)} \\sim \\text{N}\\left(0, A_{\\beta}^{(m)2}\\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-1","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.3 NFix()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\prod_{j=1}^{J_m} \\text{N}(\\beta_j^{(m)} \\mid 0, A_{\\beta}^{(m)2}) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-1","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.3 NFix()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}     \\beta_{J_m+h+1}^{(m)} \\sim \\text{N}(0, A_{\\beta}^{(m)2}) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-1","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.3 NFix()","what":"Code","title":"2. Mathematical Details","text":"sd \\(A_{\\tau}^{(m)}\\). Defaults 1.","code":"NFix(sd = 1)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-2","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.4 RW()","what":"Model","title":"2. Mathematical Details","text":"Random walk \\[\\begin{align}   \\beta_{u,1}^{(m)} & \\sim \\text{N}\\left(0, (A_0^{(m)})^2\\right) \\\\   \\beta_{u,v}^{(m)} & \\sim \\text{N}(\\beta_{u,v-1}^{(m)}, \\tau_m^2), \\quad v = 2, \\cdots, V_m \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, (A_{\\tau}^{(m)})^2\\right) \\end{align}\\] \\(A_0^{(m)}\\) can 0, implying \\(\\beta_{u,1}^{(m)}\\) fixed 0. \\(U_m > 1\\), constraints (Section 5.1.2) can applied.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-2","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.4 RW()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\text{N}\\left(\\beta_{u,1}^{(m)} \\mid 0, (A_0^{(m)})^2\\right) \\prod_{v=2}^{V_m} \\text{N}\\left(\\beta_{u,v}^{(m)} \\mid \\beta_{u,v-1}^{(m)}, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-2","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.4 RW()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{u,V_m+h}^{(m)} \\sim \\text{N}(\\beta_{u,V_m+h-1}^{(m)}, \\tau_m^2) \\end{equation}\\] prior includes sum--zero constraints, means subtracted forecasted values within combination ‘along’ ‘’ variables.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-2","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.4 RW()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\). Defaults 1. sd \\(A_0^{(m)}\\). Defaults 1. along used identify ‘along’ ‘’ dimensions. con \"\", sum--zero constraints applied.","code":"RW(s = 1,    along = NULL,    con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-3","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.5 RW2()","what":"Model","title":"2. Mathematical Details","text":"Second-order random walk \\[\\begin{align}   \\beta_{u,1}^{(m)} & \\sim \\text{N}\\left(0, (A_0^{(m)})^2\\right) \\\\   \\beta_{u,2}^{(m)} & \\sim \\text{N}\\left(\\beta_{u,1}, (A_{\\eta}^{(m)})^2\\right) \\\\   \\beta_{u,v}^{(m)} & \\sim \\text{N}\\left(2 \\beta_{u,v-1}^{(m)} - \\beta_{u,v-2}^{(m)}, \\tau_m^2\\right), \\quad v = 3, \\cdots, V_m \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, (A_{\\tau}^{(m)})^2\\right) \\end{align}\\] \\(A_0^{(m)}\\) can 0, implying \\(\\beta_{u,1}^{(m)}\\) fixed 0. \\(U_m > 1\\), constraints (Section 5.1.2) can applied.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-3","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.5 RW2()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\text{N}(\\beta_{u,1}^{(m)} \\mid 0, (A_0^{(m)})^2) \\text{N}(\\beta_{u,2}^{(m)} \\mid \\beta_{u,1}^{(m)}, (A_{\\eta}^{(m)})^2) \\prod_{v=3}^{V_m} \\text{N}\\left(\\beta_{u,v}^{(m)} \\mid 2 \\beta_{u,v-1}^{(m)} - \\beta_{u,v-2}^{(m)}, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-3","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.5 RW2()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{u,V_m+h}^{(m)} \\sim \\text{N}(2 \\beta_{u,V_m+h-1}^{(m)} - \\beta_{u,V_m+h-2}^{(m)}, \\tau_m^2) \\end{equation}\\] prior includes sum--zero constraints, means subtracted forecasted values within combination ‘along’ ‘’ variables.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-3","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.5 RW2()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\) sd \\(A_0^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) along used identify ‘along’ ‘’ dimensions con \"\", sum--zero constraints applied","code":"RW2(s = 1,     sd = 1,     sd_slope = 1,     along = NULL,     con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-4","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.6 RW2_Infant()","what":"Model","title":"2. Mathematical Details","text":"Second-order random walk infant indicator. Designed age profiles mortality rates. Along dimension must age. \\[\\begin{align}   \\beta_{u,1}^{(m)} & \\sim \\text{N}(0, 1) \\\\   \\beta_{u,2}^{(m)} & \\sim \\text{N}\\left(0, (A_{\\eta}^{(m)})^2\\right) \\\\   \\beta_{u,3}^{(m)} & \\sim \\text{N}\\left(2 \\beta_{u,2}^{(m)}, \\tau_m^2\\right) \\\\   \\beta_{u,v}^{(m)} & \\sim \\text{N}\\left(2 \\beta_{u,v-1}^{(m)} - \\beta_{u,v-2}^{(m)}, \\tau_m^2\\right), \\quad v = 4, \\cdots, V_m \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, (A_{\\tau}^{(m)})^2\\right) \\end{align}\\] \\(U_m > 1\\), constraints (Section 5.1.2) can applied.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-4","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.6 RW2_Infant()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\text{N}(\\beta_{u,1}^{(m)} \\mid 0, 1) \\text{N}(\\beta_{u,2}^{(m)} \\mid 0, (A_{\\eta}^{(m)})^2) \\text{N}\\left(\\beta_{u,3}^{(m)} \\mid 2 \\beta_{u,2}^{(m)}, \\tau_m^2 \\right) \\prod_{v=4}^{V_m} \\text{N}\\left(\\beta_{u,v}^{(m)} \\mid 2 \\beta_{u,v-1}^{(m)} - \\beta_{u,v-2}^{(m)}, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-4","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.6 RW2_Infant()","what":"Forecasting","title":"2. Mathematical Details","text":"Terms RW2_Infant() prior forecasted.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-4","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.6 RW2_Infant()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) con \"\", sum--zero constraints applied","code":"RW2_Infant(s = 1,            sd_slope = 1,        con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-5","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.7 RW_Seas()","what":"Model","title":"2. Mathematical Details","text":"Random walk seasonal effect \\[\\begin{align}   \\beta_{u,v}^{(m)} & = \\alpha_{u,v} + \\lambda_{u,v}, \\quad v = 1, \\cdots, V_m \\\\   \\alpha_{u,1}^{(m)} & \\sim \\text{N}\\left(0, (A_0^{(m)})^2 \\right) \\\\   \\alpha_{u,v}^{(m)} & \\sim \\text{N}(\\alpha_{u,v-1}^{(m)}, \\tau_m^2), \\quad v = 2, \\cdots, V_m \\\\   \\lambda_{u,v}^{(m)} & \\sim \\text{N}(0, A_{\\lambda}^{(m)}), \\quad v = 1, \\cdots, S_m - 1 \\\\   \\lambda_{u,v}^{(m)} & = -\\sum_{s=1}^{S_m-1} \\lambda_{u,v-s}^{(m)}, \\quad v = S_m,\\; 2S_m,  \\cdots \\\\   \\lambda_{u,v}^{(m)} & \\sim \\text{N}(\\lambda_{u,v-S_m}^{(m)}, \\omega_m^2), \\quad \\text{otherwise} \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, A_{\\tau}^{(m)2}\\right) \\\\   \\omega_m & \\sim \\text{N}^+\\left(0, A_{\\omega}^{(m)2}\\right) \\end{align}\\] \\(A_0^{(m)}\\) can 0, implying \\(\\alpha_{u,1}^{(m)}\\) fixed 0. \\(A_{\\omega}^{(m)2}\\) can set zero, implying seasonal effects fixed time. \\(U_m > 1\\), constraints (Section 5.1.2) can applied.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-5","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.7 RW_Seas()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{align}   & \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\text{N}(\\omega_m \\mid 0, A_{\\omega}^{(m)2}) \\notag \\\\   & \\quad \\times \\prod_{u=1}^{U_m} \\bigg( \\text{N}\\left(\\alpha_{u,1}^{(m)} \\mid 0, (A_0^{(m)})^2 \\right)     \\prod_{v=2}^{V_m} \\text{N}\\left(\\alpha_{u,v}^{(m)} \\mid \\alpha_{u,v-1}^{(m)}, \\tau_m^2 \\right) \\notag \\\\   & \\quad \\times \\prod_{v=1}^{S_m-1}  \\text{N}\\left(\\lambda_{u,v}^{(m)} \\mid 0, (A_{\\lambda}^{(m)})^2\\right)     \\prod_{\\substack{v > S_m \\\\ (v-1) \\bmod S_m \\neq 0}}^{V_m} \\text{N}\\left(\\lambda_{u,v}^{(m)} \\mid \\lambda_{u,v-S_m}^{(m)}, \\omega_m^2\\right) \\bigg) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-5","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.7 RW_Seas()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\alpha_{J_m+h}^{(m)} & \\sim \\text{N}(\\alpha_{J_m+h-1}^{(m)}, \\tau_m^2) \\\\   \\lambda_{J_m+h}^{(m)} & \\sim \\text{N}(\\lambda_{J_m+h-S_m}^{(m)}, \\omega_m^2) \\\\   \\beta_{J_m+h}^{(m)} & = \\alpha_{J_m+h}^{(m)} + \\lambda_{J_m+h}^{(m)} \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-5","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.7 RW_Seas()","what":"Code","title":"2. Mathematical Details","text":"n_seas \\(S_m\\) s \\(A_{\\tau}^{(m)}\\) sd \\(A_0^{(m)}\\) s_seas \\(A_{\\omega}^{(m)}\\) sd_seas \\(A_{\\lambda}^{(m)}\\) along used identify ‘along’ ‘’ dimensions con \"\", sum--zero constraints applied","code":"RW_Seas(n_seas,         s = 1,     sd = 1,     s_seas = 0,     sd_seas = 1,     along = NULL,     con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-6","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.8 RW2_Seas()","what":"Model","title":"2. Mathematical Details","text":"Second-order random work, seasonal effect \\[\\begin{align}   \\beta_{u,v}^{(m)} & = \\alpha_{u,v} + \\lambda_{u,v}, \\quad v = 1, \\cdots, V_m \\\\   \\alpha_{u,1}^{(m)} & \\sim \\text{N}\\left(0, (A_0^{(m)})^2 \\right) \\\\   \\alpha_{u,2}^{(m)} & \\sim \\text{N}\\left(\\alpha_{u,1}^{(m)}, (A_{\\eta}^{(m)})^2\\right) \\\\   \\alpha_{u,v}^{(m)} & \\sim \\text{N}(2 \\alpha_{u,v-1}^{(m)} - \\alpha_{u,v-2}^{(m)}, \\tau_m^2), \\quad v = 3, \\cdots, V_m \\\\   \\lambda_{u,v}^{(m)} & \\sim \\text{N}(0, A_{\\lambda}^{(m)}), \\quad v = 1, \\cdots, S_m - 1 \\\\   \\lambda_{u,v}^{(m)} & = -\\sum_{s=1}^{S_m-1} \\lambda_{u,v}^{(m)}, \\quad v = S_m,\\; 2S_m,  \\cdots \\\\   \\lambda_{u,v}^{(m)} & \\sim \\text{N}(\\lambda_{u,v-S_m}^{(m)}, \\omega_m^2), \\quad \\text{otherwise} \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, A_{\\tau}^{(m)2}\\right) \\\\   \\omega_m & \\sim \\text{N}^+\\left(0, A_{\\omega}^{(m)2}\\right) \\end{align}\\] \\(A_0^{(m)}\\) can 0, implying \\(\\alpha_{u,1}^{(m)}\\) fixed 0. \\(A_{\\omega}^{(m)2}\\) can set zero, implying seasonal effects fixed time. \\(U_m > 1\\), constraints (Section 5.1.2) can applied.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-6","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.8 RW2_Seas()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{align} & \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\text{N}(\\omega_m \\mid 0, A_{\\omega}^{(m)2})  \\notag \\\\ & \\times \\prod_{u=1}^{U_m} \\bigg( \\text{N}(\\alpha_{u,1}^{(m)} \\mid 0, (A_0^{(m)})^2 )   \\text{N}(\\alpha_{u,2}^{(m)} \\mid \\alpha_{u,1}^{(m)}, (A_{\\eta}^{(m)})^2 )  \\notag \\\\ & \\quad \\times \\prod_{v=3}^{V_m} \\text{N}(\\alpha_{u,v}^{(m)} \\mid 2 \\alpha_{u,v-1}^{(m)} - \\alpha_{u,v-2}^{(m)}, \\tau_m^2 ) \\notag \\\\ & \\quad \\times \\prod_{v=1}^{S_m-1}  \\text{N}(\\lambda_{u,v}^{(m)} \\mid 0, (A_{\\lambda}^{(m)})^2) \\notag \\\\ & \\quad \\times \\prod_{\\substack{v > S_m \\\\ (v-1) \\bmod S_m \\neq 0}}^{V_m} \\text{N}(\\lambda_{u,v}^{(m)} \\mid \\lambda_{u,v-S_m}^{(m)}, \\omega_m^2) \\bigg) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-6","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.8 RW2_Seas()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\alpha_{J_m+h}^{(m)} & \\sim \\text{N}(2 \\alpha_{J_m+h-1}^{(m)} - \\alpha_{J_m+h-2}^{(m)}, \\tau_m^2) \\\\   \\lambda_{J_m+h}^{(m)} & \\sim \\text{N}(\\lambda_{J_m+h-S_m}^{(m)}, \\omega_m^2) \\\\   \\beta_{J_m+h}^{(m)} & = \\alpha_{J_m+h}^{(m)} + \\lambda_{J_m+h}^{(m)} \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-6","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.8 RW2_Seas()","what":"Code","title":"2. Mathematical Details","text":"n_seas \\(S_m\\) s \\(A_{\\tau}^{(m)}\\) sd \\(A_0^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) s_seas \\(A_{\\omega}^{(m)}\\) sd_seas \\(A_{\\lambda}^{(m)}\\) along used identify ‘along’ ‘’ dimensions con \"\", sum--zero constraints applied","code":"RW2_Seas(n_seas,          s = 1,      sd = 1,      sd_slope = 1,      s_seas = 0,      sd_seas = 1,      along = NULL,      con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-7","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.9 AR()","what":"Model","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{u,v}^{(m)} \\sim \\text{N}\\left(\\phi_1^{(m)} \\beta_{u,v-1}^{(m)} + \\cdots + \\phi_{K_m}^{(m)} \\beta_{u,v-{K_m}}^{(m)},  \\omega_m^2\\right), \\quad v = K_m + 1, \\cdots, V_m. \\end{equation}\\] Internally, TMB derives values \\(\\beta_{u,v}^{(m)}, v = 1, \\cdots, K_m\\), \\(\\omega_m\\), imply stationary distribution, give every term \\(\\beta_{u,v}^{(m)}\\) marginal variance. denote marginal variance \\(\\tau_m^2\\), assign prior \\[\\begin{equation}   \\tau_m  \\sim \\text{N}^+(0, A_{\\tau}^{(m)2}). \\end{equation}\\] \\(\\phi_k^{(m)}\\) prior \\[\\begin{equation}   \\frac{\\phi_k^{(m)} + 1}{2} \\sim \\text{Beta}(S_1^{(m)}, S_2^{(m)}). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-7","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.9 AR()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}^+\\left(\\tau_m \\mid 0, A_{\\tau}^{(m)2} \\right) \\prod_{k=1}^{K_m} \\text{Beta}\\left(\\tfrac{1}{2} \\phi_k^{(m)} + \\tfrac{1}{2} \\mid 2, 2 \\right) \\prod_{u=1}^{U_m} p\\left( \\beta_{u,1}^{(m)}, \\cdots, \\beta_{u,V_m}^{(m)} \\mid \\phi_1^{(m)}, \\cdots, \\phi_{K_m}^{(m)}, \\tau_m \\right) \\end{equation}\\] \\(p\\left( \\beta_{u,1}^{(m)}, \\cdots, \\beta_{u,V_m}^{(m)} \\mid \\phi_1^{(m)}, \\cdots, \\phi_{K_m}^{(m)}, \\tau_m \\right)\\) calculated internally TMB.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-7","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.9 AR()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{u,V_m + h}^{(m)} \\sim \\text{N}\\left(\\phi_1^{(m)} \\beta_{u,V_m + h - 1}^{(m)} + \\cdots + \\phi_{K_m}^{(m)} \\beta_{u,V_m+h-K_m}^{(m)}, \\tau_m^2\\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-7","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.9 AR()","what":"Code","title":"2. Mathematical Details","text":"n_coef \\(K_m\\) s \\(A_{\\tau}^{(m)}\\) shape1 \\(S_1^{(m)}\\) shape2 \\(S_2^{(m)}\\) along used indentify ‘along’ ‘’ dimensions","code":"AR(n_coef = 2,    s = 1,    shape1 = 5,    shape2 = 5,    along = NULL,    con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:pr-ar1","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions","what":"AR1()","title":"2. Mathematical Details","text":"Special case AR(), extra options autocorrelation coefficient.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-8","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.10 AR1()","what":"Model","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u,1}^{(m)} & \\sim \\text{N}(0, \\tau_m^2) \\\\   \\beta_{u,v}^{(m)} & \\sim \\text{N}(\\phi_m \\beta_{u,v-1}^{(m)}, (1 - \\phi_m^2) \\tau_m^2) \\quad v = 2, \\cdots, V_m \\\\   \\phi_m & = a_{0,m} + (a_{1,m} - a_{0,m}) \\phi_m^{\\prime} \\\\   \\phi_m^{\\prime} & \\sim \\text{Beta}(S_1^{(m)}, S_2^{(m)}) \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, A_{\\tau}^{(m)2}\\right). \\end{align}\\] adapted specification used AR1 densities TMB. implies marginal variance \\(\\beta_{u,v}^{(m)}\\) \\(\\tau_m^2\\). require \\(-1 < a_{0m} < a_{1m} < 1\\).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-8","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.10 AR1()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\text{Beta}( \\phi_m^{\\prime} \\mid S_1^{(m)}, S_2^{(m)}) \\prod_{u=1}^{U_m} \\text{N}\\left(\\beta_{u,1}^{(m)} \\mid 0, \\tau_m^2 \\right)  \\prod_{u=1}^{U_m} \\prod_{j=2}^{V_m} \\text{N}\\left(\\beta_{u,v}^{(m)} \\mid \\phi_m \\beta_{u,v-1}^{(m)}, (1 - \\phi_m^2) \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-8","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.10 AR1()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{J_m + h}^{(m)} \\sim \\text{N}\\left(\\phi_m \\beta_{J_m + h - 1}^{(m)}, (1 - \\phi_m^2) \\tau_m^2\\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-8","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.10 AR1()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\) shape1 \\(S_1^{(m)}\\) shape2 \\(S_2^{(m)}\\) min \\(a_{0m}\\) max \\(a_{1m}\\) along used identify ‘along’ ‘’ dimensions defaults min max based defaults function ets() R package forecast (Hyndman Khandakar 2008).","code":"AR1(s = 1,     shape1 = 5,     shape2 = 5,     min = 0.8,     max = 0.98,     along = NULL,     con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-9","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.11 Lin()","what":"Model","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u,v}^{(m)} & = \\alpha_{u,v}^{(m)} + \\epsilon_{u,v}^{(m)} \\\\   \\alpha_{u,v}^{(m)} & = \\left(v - \\frac{V_m + 1}{2}\\right) \\eta_u^{(m)} \\\\   \\eta_u^{(m)} & \\sim \\text{N}\\left(B_{\\eta}^{(m)}, (A_{\\eta}^{(m)})^2\\right)\\\\   \\epsilon_{u,v}^{(m)} & \\sim \\text{N}(0, \\tau_m^2) \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, (A_{\\tau}^{(m)})^2\\right) \\end{align}\\] Note \\(\\sum_{v=1}^{V_m} \\alpha_{u,v}^{(m)} = 0\\).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-9","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.11 Lin()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\text{N}(\\eta_u^{(m)} \\mid B_{\\eta}^{(m)}, A_{\\eta}^{(m)2}) \\prod_{u=1}^{U_m} \\prod_{v=1}^{V_m} \\text{N}\\left(\\beta_{u,v}^{(m)} \\mid v - \\frac{V_m + 1}{2}, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-9","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.11 Lin()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\beta_{u,V_m + h}^{(m)} \\sim \\text{N}\\left(\\left(\\frac{V_m - 1}{2}+ h\\right) \\eta_u^{(m)}, \\tau_m^2\\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-9","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.11 Lin()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\) mean_slope \\(B_{\\eta}^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) along used indentify ‘along’ ‘’ dimensions con \"\", sum--zero constraints applied","code":"Lin(s = 1,     mean_slope = 0,     sd_slope = 1,     along = NULL,     con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-10","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.12 Lin_AR()","what":"Model","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u,v}^{(m)} & = \\alpha_{u,v}^{(m)} + \\epsilon_{u,v}^{(m)} \\\\   \\alpha_{u,v}^{(m)} & = \\left(v - \\frac{V_m + 1}{2}\\right) \\eta_u^{(m)} \\\\   \\eta_u^{(m)} & \\sim \\text{N}\\left(B_{\\eta}^{(m)}, (A_{\\eta}^{(m)})^2\\right)\\\\   \\epsilon_{u,v}^{(m)} & \\sim \\text{N}\\left(\\phi_1^{(m)} \\epsilon_{u,v-1}^{(m)} + \\cdots + \\phi_{K_m}^{(m)} \\epsilon_{u,v-{K_m}}^{(m)},  \\omega_m^2\\right), \\quad v = K_m + 1, \\cdots, V_m \\end{align}\\] Note \\(\\sum_{v=1}^{V_m} \\alpha_{u,v}^{(m)} = 0\\). Internally, TMB derives values \\(\\epsilon_{u,v}^{(m)}, v = 1, \\cdots, K_m\\), \\(\\omega_m\\), provide \\(\\epsilon_{u,v}^{(m)}\\) stationary distribution term marginal variance. denote marginal variance \\(\\tau_m^2\\), assign prior \\[\\begin{equation}   \\tau_m  \\sim \\text{N}^+(0, A_{\\tau}^{(m)2}). \\end{equation}\\] individual \\(\\phi_k^{(m)}\\) prior \\[\\begin{equation}   \\frac{\\phi_k^{(m)} + 1}{2} \\sim \\text{Beta}(S_1^{(m)}, S_2^{(m)}). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-10","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.12 Lin_AR()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{align}   & \\text{N}^+\\left(\\tau_m \\mid 0, A_{\\tau}^{(m)2} \\right)  \\prod_{k=1}^{K_m} \\text{Beta}\\left( \\tfrac{1}{2} \\phi_k^{(m)} + \\tfrac{1}{2} \\mid S_1^{(m)}, S_2^{(m)} \\right) \\notag \\\\   & \\quad \\times \\prod_{u=1}^{U_m} \\text{N}(\\eta_u^{(m)} \\mid 0, A_{\\eta}^{(m)2}) p\\left( \\epsilon_{u,1}^{(m)}, \\cdots, \\epsilon_{u,V_m}^{(m)} \\mid \\phi_1^{(m)}, \\cdots, \\phi_{K_m}^{(m)}, \\tau_m \\right) \\end{align}\\] \\(p\\left( \\epsilon_{u,1}^{(m)}, \\cdots, \\epsilon_{u,V_m}^{(m)} \\mid \\phi_1^{(m)}, \\cdots, \\phi_{K_m}^{(m)}, \\tau_m \\right)\\) calculated internally TMB.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-10","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.12 Lin_AR()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u, V_m + h}^{(m)} & = \\left(\\frac{V_m - 1}{2}+ h\\right) \\eta_u^{(m)} + \\epsilon_{u,V_m+h}^{(m)} \\\\   \\epsilon_{u,V_m+h}^{(m)} & \\sim \\text{N}\\left(\\phi_1^{(m)} \\epsilon_{u,V_m + h - 1}^{(m)} + \\cdots + \\phi_{K_m}^{(m)} \\epsilon_{u,V_m+h-K_m}^{(m)}, \\omega_m^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-10","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.12 Lin_AR()","what":"Code","title":"2. Mathematical Details","text":"n_coef \\(K_m\\) s \\(A_{\\tau}^{(m)}\\) shape1 \\(S_1^{(m)}\\) shape2 \\(S_2^{(m)}\\) mean_slope \\(B_{\\eta}^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) along used indentify ‘along’ ‘’ variables con \"\", sum--zero constraints applied","code":"Lin_AR(n_coef = 2,        s = 1,        shape1 = 5,        shape2 = 5,        mean_slope = 0,        sd_slope = 1,        along = NULL,        con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-11","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.13 Lin_AR1()","what":"Model","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u,v}^{(m)} & = \\alpha_{u,v}^{(m)} + \\epsilon_{u,v}^{(m)} \\\\   \\alpha_{u,v}^{(m)} & = \\left(v - \\frac{V_m + 1}{2}\\right) \\eta_u^{(m)} \\\\   \\eta_u^{(m)} & \\sim \\text{N}\\left(B_{\\eta}^{(m)}, (A_{\\eta}^{(m)})^2\\right)\\\\   \\epsilon_{u,1}^{(m)} & \\sim \\text{N}\\left(0, \\tau_m^2 \\right) \\\\   \\epsilon_{u,v}^{(m)} & \\sim \\text{N}\\left(\\phi_m \\epsilon_{u,v-1}^{(m)},  (1 - \\phi_m^2) \\tau_m^2 \\right), \\quad v = 2, \\cdots, V_m \\\\   \\phi_m & = a_{0,m} + (a_{1,m} - a_{0,m}) \\phi_m^{\\prime} \\\\   \\phi_m^{\\prime} & \\sim \\text{Beta}(S_1^{(m)}, S_2^{(m)}) \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, A_{\\tau}^{(m)2}\\right). \\end{align}\\] Note \\(\\sum_{v=1}^{V_m} \\alpha_{u,v}^{(m)} = 0\\).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-11","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.13 Lin_AR1()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{align}   & \\text{N}^+\\left(\\tau_m \\mid 0, A_{\\tau}^{(m)2} \\right)  \\text{Beta}( \\phi_m^{\\prime} \\mid S_1^{(m)}, S_2^{(m)}) \\notag \\\\   & \\quad \\times \\prod_{u=1}^{U_m} \\text{N}(\\eta_u^{(m)} \\mid 0, A_{\\eta}^{(m)2}) \\text{N}\\left(\\epsilon_{u,1}^{(m)} \\mid 0, \\tau_m^2 \\right)  \\prod_{v=2}^{V_m} \\text{N}\\left(\\epsilon_{u,v}^{(m)} \\mid \\phi_m \\epsilon_{u,v-1}^{(m)}, (1 - \\phi_m^2) \\tau_m^2 \\right)   \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-11","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.13 Lin_AR1()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\beta_{u, V_m + h}^{(m)} & = \\left(\\frac{V_m - 1}{2}+ h\\right) \\eta_u^{(m)} + \\epsilon_{u,V_m+h}^{(m)} \\\\   \\epsilon_{u,V_m+h}^{(m)} & \\sim \\text{N}\\left(\\phi_m \\epsilon_{u,V_m + h - 1}^{(m)}, (1 - \\phi_m^2) \\tau_m^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-11","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.13 Lin_AR1()","what":"Code","title":"2. Mathematical Details","text":"s \\(A_{\\tau}^{(m)}\\) shape1 \\(S_1^{(m)}\\) shape2 \\(S_2^{(m)}\\) min \\(a_{0m}\\) max \\(a_{1m}\\) mean_slope \\(B_{\\eta}^{(m)}\\) sd_slope \\(A_{\\eta}^{(m)}\\) along used indentify ‘along’ ‘’ variables con \"\", sum--zero constraints applied","code":"Lin_AR1(s = 1,         shape1 = 5,         shape2 = 5,     min = 0.8,     max = 0.98,         mean_slope = 0,         sd_slope = 1,         along = NULL,     con = c(\"none\", \"by\"))"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-12","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.14 Sp()","what":"Model","title":"2. Mathematical Details","text":"Penalised spline (P-spline) \\[\\begin{equation}   \\pmb{\\beta}_u^{(m)} = \\pmb{B}^{(m)} \\pmb{\\alpha}_u^{(m)}, \\quad u = 1, \\cdots, U_m \\end{equation}\\] \\(\\pmb{\\beta}_u^{(m)}\\) subvector \\(\\pmb{\\beta}^{(m)}\\) composed elements \\(u\\)th combination ‘’ variables, \\(\\pmb{B}^{(m)}\\) \\(V_m \\times K_m\\) matrix B-splines, \\(\\pmb{\\alpha}_u^{(m)}\\) second-order random walk prior (Section 5.5). \\(\\pmb{B}^{(m)} = (\\pmb{b}_1^{(m)}(\\pmb{v}), \\cdots, \\pmb{b}_{K_m}^{(m)}(\\pmb{v}))\\), \\(\\pmb{v} = (1, \\cdots, V_m)^{\\top}\\). B-splines centered, \\(\\pmb{1}^{\\top} \\pmb{b}_k^{(m)}(\\pmb{v}) = 0\\), \\(k = 1, \\cdots, K_m\\).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-12","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.14 Sp()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\prod_{k=1}^2 \\text{N}(\\alpha_{u,k}^{(m)} \\mid 0, 1) \\prod_{u=1}^{U_m}\\prod_{k=3}^{K_m} \\text{N}\\left(\\alpha_{u,k}^{(m)} - 2 \\alpha_{u,k-1}^{(m)} + \\alpha_{u,k-2}^{(m)} \\mid 0, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-12","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.14 Sp()","what":"Forecasting","title":"2. Mathematical Details","text":"Terms Sp() prior forecasted.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-12","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.14 Sp()","what":"Code","title":"2. Mathematical Details","text":"n \\(K_m\\). Defaults \\(\\max(0.7 J_m, 4)\\). s \\(A_{\\tau}^{(m)}\\) second-order random walk prior. Defaults 1. along used identify ‘along’ ‘’ variables","code":"Sp(n = NULL,    s = 1)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-13","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.15 SVD()","what":"Model","title":"2. Mathematical Details","text":"Age sex gender Let \\(\\pmb{\\beta}_u\\) age effect \\(u\\)th combination ‘’ variables. SVD prior, \\[\\begin{equation}   \\pmb{\\beta}_u^{(m)} = \\pmb{F}^{(m)} \\pmb{\\alpha}_u^{(m)} + \\pmb{g}^{(m)}, \\quad u = 1, \\cdots, U_m \\end{equation}\\] \\(\\pmb{F}^{(m)}\\) \\(V_m \\times K_m\\) matrix, \\(\\pmb{g}^{(m)}\\) vector \\(V_m\\) elements, derived singular value decomposition (SVD) external dataset age-specific values sexes/genders combined. construction \\(\\pmb{F}^{(m)}\\) \\(\\pmb{g}^{(m)}\\) described Appendix 13.2. centering scaling used construction allow use simple prior \\[\\begin{equation}   \\alpha_{u,k}^{(m)} \\sim \\text{N}(0, 1), \\quad u = 1, \\cdots, U_m, k = 1, \\cdots, K_m. \\end{equation}\\] Joint model age sex/gender joint model, vector \\(\\pmb{\\beta}_u\\) represents interaction age sex/gender \\(u\\)th combination ‘’ variables. Matrix \\(\\pmb{F}^{(m)}\\) vector \\(\\pmb{g}^{(m)}\\) calculated data separate sexes/genders. model otherwise unchanged. Independent models sex/gender independent model, vector \\(\\pmb{\\beta}_{s,u}\\) represents age effects sex/gender \\(s\\) \\(u\\)th combination ‘’ variables, \\[\\begin{equation}   \\pmb{\\beta}_{s,u}^{(m)} = \\pmb{F}_s^{(m)} \\pmb{\\alpha}_{s,u}^{(m)} + \\pmb{g}_s^{(m)}, \\quad s = 1, \\cdots, S; \\quad u = 1, \\cdots, U_m \\end{equation}\\] Matrix \\(\\pmb{F}_s^{(m)}\\) vector \\(\\pmb{g}_s^{(m)}\\) calculated data separate sexes/genders. prior \\[\\begin{equation}   \\alpha_{s,u,k}^{(m)} \\sim \\text{N}(0, 1), \\quad s = 1, \\cdots, S; \\quad u = 1, \\cdots, U_m; \\quad k = 1, \\cdots, K_m. \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-13","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.15 SVD()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\prod_{u=1}^{U_m}\\prod_{k=1}^{K_m} \\text{N}\\left(\\alpha_{uk}^{(m)} \\mid 0, 1 \\right) \\end{equation}\\] age-joint models, \\[\\begin{equation}   \\prod_{s=1}^S \\prod_{u=1}^{U_m}\\prod_{k=1}^{K_m} \\text{N}\\left(\\alpha_{s,u,k}^{(m)} \\mid 0, 1 \\right) \\end{equation}\\] independent model","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-13","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.15 SVD()","what":"Forecasting","title":"2. Mathematical Details","text":"Terms SVD prior forecasted.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-13","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.15 SVD()","what":"Code","title":"2. Mathematical Details","text":"- ssvd object containing \\(\\pmb{F}\\) \\(\\pmb{g}\\) - n_comp number components used (defaults ceiling(n/2), n number components ssvd - indep determines whether independent joint model used term modelled contains sex gender variable.","code":"SVD(ssvd,     n_comp = NULL,     indep = TRUE)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-14","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.16 SVD_RW()","what":"Model","title":"2. Mathematical Details","text":"SVD_RW() prior identical SVD() prior except coefficients evolve time, following independent random walks. instance, combined-sex/gender joint models \\(K_m\\) SVD components, \\[\\begin{align}   \\pmb{\\beta}_{u,t}^{(m)} & = \\pmb{F}^{(m)} \\pmb{\\alpha}_{u,t}^{(m)} + \\pmb{g}^{(m)} \\\\   \\alpha_{u,k,1}^{(m)} & \\sim \\text{N}(0, (A_0^{(m)})^2),  \\\\   \\alpha_{u,k,t}^{(m)} & \\sim \\text{N}(\\alpha_{u,k,t-1}^{(m)}, \\tau_m^2), \\quad t = 2, \\cdots, T \\\\   \\tau_m & \\sim \\text{N}^+\\left(0, (A_{\\tau}^{(m)})^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-14","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.16 SVD_RW()","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"combined-sex/gender joint models, \\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\prod_{k=1}^{K_m} \\text{N}(\\alpha_{u,k,1}^{(m)} \\mid 0, (A_0^{(m)})^2)  \\prod_{t=2}^{T} \\text{N}\\left(\\alpha_{u,k,t}^{(m)} \\mid \\alpha_{u,k,t-1}^{(m)}, \\tau_m^2 \\right), \\end{equation}\\] independent model, \\[\\begin{equation}   \\text{N}(\\tau_m \\mid 0, A_{\\tau}^{(m)2}) \\prod_{u=1}^{U_m} \\prod_{s=1}^{S} \\prod_{k=1}^{K_m} \\text{N}(\\alpha_{u,s,k,1}^{(m)} \\mid 0, (A_0^{(m)})^2)  \\prod_{t=2}^{T} \\text{N}\\left(\\alpha_{u,s,k,t}^{(m)} \\mid \\alpha_{u,s,k,t-1}^{(m)}, \\tau_m^2 \\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-14","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.16 SVD_RW()","what":"Forecasting","title":"2. Mathematical Details","text":"\\[\\begin{align}   \\alpha_{u,k,T+h}^{(m)} & \\sim \\text{N}(\\alpha_{u,k,T+h-1}^{(m)}, \\tau_m^2) \\\\   \\pmb{\\beta}_{u,T+h}^{(m)} & = \\pmb{F}^{(m)} \\pmb{\\alpha}_{u,T+h}^{(m)} + \\pmb{g}^{(m)} \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-14","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.16 SVD_RW()","what":"Code","title":"2. Mathematical Details","text":"ssvd object containing \\(\\pmb{F}\\) \\(\\pmb{g}\\) n_comp \\(K_m\\) indep determines whether independent joint model used term modelled contains sex gender variable. s \\(A_{\\tau}^{(m)}\\) sd \\(A_0^{(m)}\\)","code":"SVD_RW(ssvd,        n_comp = NULL,        indep = TRUE,        s = 1,        sd = 1,        con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:pr-svd-oth","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions","what":"SVD_RW2(), SVD_AR(), SVD_AR1()","title":"2. Mathematical Details","text":"SVD_RW2(), SVD_AR() SVD_AR1() priors structure SVD_RW() prior, RW2(), AR(), AR1() priors along dimension taking place RW() prior.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-15","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.18 Known","what":"Model","title":"2. Mathematical Details","text":"Elements \\(\\pmb{\\beta}^{(m)}\\) treated known certainty.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-15","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.18 Known","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"Known priors make contribution posterior density.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-15","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.18 Known","what":"Forecasting","title":"2. Mathematical Details","text":"Main effects known prior forecasted.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-15","dir":"Articles","previous_headings":"5 Priors for Intercept, Main Effects, and Interactions > 5.18 Known","what":"Code","title":"2. Mathematical Details","text":"values vector containing \\(\\beta_j^{(m)}\\).","code":"Known(values)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-16","dir":"Articles","previous_headings":"6 Covariates","what":"Model","title":"2. Mathematical Details","text":"Matrix \\(\\pmb{Z}\\) standardized version original covariate data supplied user. standardize every numeric variable mean 0 standard deviation one. convert categorical variables sets indicator variables using R’s ‘treatment’ contrast. variable original data categorical \\(C\\) categories, converted \\(C-1\\) indicator variables, first category omitted variable. elements \\(\\pmb{\\zeta}\\) prior \\[\\begin{equation}   \\zeta_p \\sim \\text{N}(0, 1) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-posterior-density-16","dir":"Articles","previous_headings":"6 Covariates","what":"Contribution to posterior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   \\prod_{p=1}^P \\text{N}(\\zeta_p | 0, 1) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"forecasting-16","dir":"Articles","previous_headings":"6 Covariates","what":"Forecasting","title":"2. Mathematical Details","text":"model covariates can used forecasting provided coefficients (\\(\\zeta_p\\)) non-time-varying, future values covariates (columns \\(\\pmb{Z}\\)) can inferred classifying variables (time), supplied user.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-16","dir":"Articles","previous_headings":"6 Covariates","what":"Code","title":"2. Mathematical Details","text":"mod Object class \"bage_mod\" formula One-sided R formula describing covariates used","code":"set_covariates(mod, formula)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"model-17","dir":"Articles","previous_headings":"7 Prior for dispersion terms","what":"Model","title":"2. Mathematical Details","text":"Use exponential distribution, parameterised using mean, \\[\\begin{equation}   \\xi \\sim \\text{Exp}(\\mu_{\\xi}) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"contribution-to-prior-density","dir":"Articles","previous_headings":"7 Prior for dispersion terms","what":"Contribution to prior density","title":"2. Mathematical Details","text":"\\[\\begin{equation}   p(\\xi) = \\frac{1}{\\mu_{\\xi}} \\exp\\left(\\frac{-\\xi}{\\mu_{\\xi}}\\right) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-17","dir":"Articles","previous_headings":"7 Prior for dispersion terms","what":"Code","title":"2. Mathematical Details","text":"mean \\(\\mu_{\\xi}\\)","code":"set_disp(mean = 1)"},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"random-rounding-to-base-3","dir":"Articles","previous_headings":"8 Data models > 8.1 Data models for outcome","what":"Random Rounding to Base 3","title":"2. Mathematical Details","text":"Random rounding base 3 (RR3) confidentialization method used statistical agencies. applied counts data. count \\(x\\) rounded randomly follows: \\(x \\mod 3 = 0\\), \\(x\\) left unchanged; \\(x \\mod 3 = 1\\) \\(x\\) changed \\(x-1\\) probability 2/3, changed \\(x + 2\\) probability 1/3; \\(x \\mod 3 = 2\\) \\(x\\) changed \\(x-2\\) probability 1/3, changed \\(x + 1\\) probability 2/3. RR3 data models can used Poisson binomial likelihoods. Let \\(y_i\\) denote observed value outcome, \\(y_i^*\\) true value. likelihood RR3 data model \\[\\begin{align}   p(y_i | \\gamma_i, w_i) & = \\sum_{y_i^*} p(y_i | y_i^*) p(y_i^* | \\gamma_i, w_i) \\\\    & =  \\sum_{k = -2, -1, 0, 1, 2} p(y_i | y_i + k) p(y_i + k | \\gamma_i, w_i) \\\\    & = \\tfrac{1}{3} p(y_i - 2 | \\gamma_i, w_i) + \\tfrac{2}{3} p(y_i - 1 | \\gamma_i, w_i) + p(y_i | \\gamma_i, w_i) + \\tfrac{2}{3} p(y_i + 1 | \\gamma_i, w_i) + \\tfrac{1}{3} p(y_i + 2 | \\gamma_i, w_i) \\end{align}\\]","code":""},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"sec:filter-ag","dir":"Articles","previous_headings":"9 Estimation","what":"Filtering and Aggregation","title":"2. Mathematical Details","text":"data supply TMB filtered aggregated version data user provides data argument. filtering stage, remove rows () offset 0 NA, (ii) outcome variable NA. aggregation stage, identify rows data duplicated combinations classification variables. instance, classification variables age sex, two rows age \"20-24\" sex \"Female\", rows count duplicated combinations. aggregate offset outcome variables across duplicates. Poisson binomial models, aggregation formula outcomes \\[\\begin{equation}   y^{\\text{new}} = \\sum_{=1}^D y_i^{\\text{old}}, \\end{equation}\\] aggregation formula exposure/size \\[\\begin{equation}   w^{\\text{new}} = \\sum_{=1}^D w_i^{\\text{old}}, \\end{equation}\\] \\(D\\) number times particular combination duplicated. normal models, aggregation formula outcomes \\[\\begin{equation}   y^{\\text{new}} = \\frac{\\sum_{=1}^D y_i^{\\text{old}}}{D}, \\end{equation}\\] aggregation formuala weights \\[\\begin{equation}   w^{\\text{new}} = \\frac{1}{\\sum_{=1}^D \\frac{1}{w_i^{\\text{old}}}}. \\end{equation}\\]","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"step-0-select-inner-and-outer-variables","dir":"Articles","previous_headings":"9 Estimation > 9.2 Inner-Outer Approximation","what":"Step 0: Select ‘inner’ and ‘outer’ variables","title":"2. Mathematical Details","text":"Select variables used inner model. default, age, sex, time variables model. remaining variables ‘outer’ variables.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"step-1-fit-inner-model","dir":"Articles","previous_headings":"9 Estimation > 9.2 Inner-Outer Approximation","what":"Step 1: Fit inner model","title":"2. Mathematical Details","text":"Aggregate data using classification formed inner variables. (See Section 9.1 aggregation procedures.) Remove terms involving ‘inner’ variables, intercept term, model. Set dispersion 0. Fit resulting model.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"step-2-fit-outer-model","dir":"Articles","previous_headings":"9 Estimation > 9.2 Inner-Outer Approximation","what":"Step 2: Fit outer model","title":"2. Mathematical Details","text":"Let \\(\\hat{\\mu}_i^{\\text{}}\\) point estimates linear predictor \\(\\mu_i\\) obtained inner model. Poisson model Aggregate data using classification formed outer variables. Remove terms involving ‘inner’ variables, plus intercept, model. Set dispersion 0. Set exposure \\(w_i^{\\text{}} = \\hat{\\mu}^{\\text{}} w_i\\). Fit model. Binomial model Fit original model, set dispersion 0, terms ‘inner’ model, use Known priors using point estimates inner model. Normal model Aggregate data using classification formed outer variables. Remove terms involving ‘inner’ variables, plus intercept, model. Set outcome variable $y_i^{} = y_i - ^{}. Fit model.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"step-4-concatenate-estimates","dir":"Articles","previous_headings":"9 Estimation > 9.2 Inner-Outer Approximation","what":"Step 4: Concatenate estimates","title":"2. Mathematical Details","text":"Concatenate posterior distributions inner terms inner model posterior distributions outer terms outer model.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"step-5-calculate-dispersion","dir":"Articles","previous_headings":"9 Estimation > 9.2 Inner-Outer Approximation","what":"Step 5: Calculate dispersion","title":"2. Mathematical Details","text":"original model includes dispersion term, estimate dispersion. Let \\(\\hat{\\mu}_i^{\\text{comb}}\\) point estimates linear predictor obtained concatenated estimates. Poisson model Use original disaggregated data, , original data contains 10,000 rows, select 10,000 rows random original data. Remove terms original model except intercept. Set exposure \\(w_i^{\\text{}} = \\hat{\\mu}^{\\text{comb}} w_i\\). Binomial model Fit original model, terms except intercept Known priors, values obtained point estimates concatenated estimates. Normal model Use original disaggregated data, , original data contains 10,000 rows, select 10,000 rows random original data. Remove terms original model except intercept. Set outcome \\(y_i^{\\text{}} = y_i - \\hat{\\mu}^{\\text{comb}}\\).","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"deriving-outputs","dir":"Articles","previous_headings":"","what":"Deriving outputs","title":"2. Mathematical Details","text":"Running TMB yields set means \\(\\pmb{m}\\), precision matrix \\(\\pmb{Q}^{-1}\\), together define approximate joint posterior distribution intercept, main effects, internactions \\(\\pmb{\\beta}^{(m)}\\), \\(m = 0, \\cdots, M\\), typically, hyper-parameters \\(\\pmb{\\beta}^{(m)}\\), many cases transformed another scale, log scale, optionally, dispersion term \\(\\xi\\), optionally, covariate cofficients vector \\(\\pmb{zeta}\\). Let \\(\\tilde{\\pmb{\\theta}}\\) denote vector containing quantities. draw values \\(\\tilde{\\pmb{\\theta}} \\mid \\pmb{m}, \\pmb{Q}^{-1}\\), typically using sparse matrix methods (implemented package sparseMVN. Next convert transformed hyper-parameters back original units, insert values \\(\\pmb{\\beta}^{(m)}\\) terms Known priors. denote resulting vector \\(\\pmb{\\theta}\\). draw distribution \\(\\pmb{\\gamma} \\mid \\pmb{y}, \\pmb{\\theta}\\) using methods described Sections 3.1-3.3. Output Normal model receives special treatment. described section 3.3 4, Normal model \\[\\begin{align}   \\frac{y_i - \\bar{y}}{s} & \\sim \\text{N}\\left(\\mu_i, \\frac{\\bar{w}}{w_i} \\xi^2\\right) \\\\   \\mu_i & = \\sum_{m=0}^{M} \\beta_{j_i^m}^{(m)} + (\\pmb{Z} \\pmb{\\zeta})_i \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"2. Mathematical Details","text":"generate one set simulated values, start values exposure, trials, weights, \\(\\pmb{w}\\), possibly covariates \\(\\pmb{Z}\\), go following steps: Draw values parameters priors \\(\\pmb{\\beta}^{(m)}\\), \\(m = 1, \\cdots, M\\). Conditional values drawn Step 1, draw values \\(\\pmb{\\beta}^{(m)}\\), \\(m = 0, \\cdots, M\\). model contains seasonal effects, draw standard deviation \\(\\kappa_m\\), effects \\(\\pmb{\\lambda}^{(m)}\\). model contains covariates, draw \\(\\varphi\\) \\(\\vartheta_p\\) necessary, draw coefficient vector \\(\\pmb{\\zeta}\\). Use values steps 2–4 form linear predictor \\(\\sum_{m=0}^{M} \\pmb{X}^{(m)} (\\pmb{\\beta}^{(m)} + \\pmb{\\lambda}^{(m)}) + \\pmb{Z} \\pmb{\\zeta}\\). Back-transform linear predictor, obtain vector cell-specific parameters \\(\\pmb{\\mu}\\). model contains dispersion parameter \\(\\xi\\), draw values prior \\(\\xi\\). Poisson binomial models, use \\(\\pmb{\\mu}\\) , present, \\(\\xi\\) draw \\(\\pmb{\\gamma}\\). Poisson binomial models, use \\(\\pmb{\\gamma}\\) \\(\\pmb{w}\\) draw \\(\\pmb{y}\\); normal models, use \\(\\pmb{\\mu}\\), \\(\\xi\\), \\(\\pmb{w}\\) draw \\(\\pmb{y}\\).","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"condition-on-pmbgamma","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model > 12.1.1 Poisson likelihood","what":"Condition on \\(\\pmb{\\gamma}\\)","title":"2. Mathematical Details","text":"\\[\\begin{equation}   y_i^{\\text{rep}} \\sim \\text{Poisson}(\\gamma_i w_i) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"condition-on-pmbmu-xi","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model > 12.1.1 Poisson likelihood","what":"Condition on \\((\\pmb{\\mu}, \\xi)\\)","title":"2. Mathematical Details","text":"\\[\\begin{align}   y_i^{\\text{rep}} & \\sim \\text{Poisson}(\\gamma_i^{\\text{rep}} w_i) \\\\   \\gamma_i^{\\text{rep}} & \\sim \\text{Gamma}(\\xi^{-1}, (\\xi \\mu_i)^{-1}) \\end{align}\\] equivalent \\[\\begin{equation}   y_i^{\\text{rep}} \\sim \\text{NegBinom}\\left(\\xi^{-1}, (1 + \\mu_i w_i \\xi)^{-1}\\right) \\end{equation}\\]","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"condition-on-pmbgamma-1","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model > 12.1.2 Binomial likelihood","what":"Condition on \\(\\pmb{\\gamma}\\)","title":"2. Mathematical Details","text":"\\[\\begin{equation}   y_i^{\\text{rep}} \\sim \\text{Binomial}(w_i, \\gamma_i) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"condition-on-pmbmu-xi-1","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model > 12.1.2 Binomial likelihood","what":"Condition on \\((\\pmb{\\mu}, \\xi)\\)","title":"2. Mathematical Details","text":"\\[\\begin{align}   y_i^{\\text{rep}} & \\sim \\text{Binomial}(w_im \\gamma_i^{\\text{rep}}) \\\\   \\gamma_i^{\\text{rep}} & \\sim \\text{Beta}\\left(\\xi^{-1} \\mu_i, \\xi^{-1}(1 - \\mu_i)\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"normal-likelihood","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model","what":"Normal likelihood","title":"2. Mathematical Details","text":"\\[\\begin{equation}   y_i^{\\text{rep}} \\sim \\text{N}(\\gamma_i, \\xi^2 / w_i) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"data-models-for-outcomes","dir":"Articles","previous_headings":"12 Replicate data > 12.1 Model","what":"Data models for outcomes","title":"2. Mathematical Details","text":"overall model includes data model outcome, set draws made, deriving values observed outcomes, given values true outcomes.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"code-18","dir":"Articles","previous_headings":"12 Replicate data","what":"Code","title":"2. Mathematical Details","text":"","code":"replicate_data(x, condition_on = c(\"fitted\", \"expected\"), n = 20)"},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig2_math.html","id":"app:svd","dir":"Articles","previous_headings":"13 Appendices","what":"SVD prior for age","title":"2. Mathematical Details","text":"Let \\(\\pmb{}\\) matrix age-specific estimates international database, transformed take values range \\((-\\infty, \\infty)\\). column \\(\\pmb{}\\) represents one set age-specific estimates, log mortality rates Japan 2010, logit labour participation rates Germany 1980. Let \\(\\pmb{U}\\), \\(\\pmb{D}\\), \\(\\pmb{V}\\) matrices singular value decomposition \\(\\pmb{}\\), retained first \\(K\\) components. \\[\\begin{equation}   \\pmb{} \\approx \\pmb{U} \\pmb{D} \\pmb{V}. \\tag{13.1} \\end{equation}\\] Let \\(m_k\\) \\(s_k\\) mean sample standard deviation elements \\(k\\)th row \\(\\pmb{V}\\), \\(\\pmb{m} = (m_1, \\cdots, m_k)^{\\top}\\) \\(\\pmb{s} = (s_1, \\cdots, s_k)^{\\top}\\). \\[\\begin{equation}   \\tilde{\\pmb{V}} = (\\text{diag}(\\pmb{s}))^{-1} (\\pmb{V} - \\pmb{m} \\pmb{1}^{\\top}) \\end{equation}\\] standardized version \\(\\pmb{V}\\). can rewrite (13.1) \\[\\begin{align}   \\pmb{} & \\approx \\pmb{U} \\pmb{D} (\\text{diag}(\\pmb{s}) \\tilde{\\pmb{V}} + \\pmb{m} \\pmb{1}^{\\top}) \\\\   & = \\pmb{F} \\tilde{\\pmb{V}} + \\pmb{g} \\pmb{1}^{\\top}, \\tag{13.2} \\end{align}\\] \\(\\pmb{F} = \\pmb{U} \\pmb{D} \\text{diag}(\\pmb{s})\\) \\(\\pmb{g} = \\pmb{U} \\pmb{D} \\pmb{m}\\). Let \\(\\tilde{\\pmb{v}}_l\\) randomly-selected column \\(\\tilde{\\pmb{V}}\\). construction \\(\\tilde{\\pmb{V}}\\) \\(\\text{E}[\\tilde{v}_{kl}] = 0\\) \\(\\text{var}[\\tilde{v}_{kl}] = 1\\). \\(\\pmb{z}\\) vector standard normal variables, \\[\\begin{equation}   \\pmb{F} \\pmb{z} + \\pmb{g} \\end{equation}\\] look approximately like randomly-selected column original data matrix \\(\\pmb{}\\).","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set-up","title":"3. Priors","text":"","code":"suppressPackageStartupMessages({   library(bage)   library(poputils)   library(ggplot2)   library(dplyr) }) plot_exch <- function(draws) {   ggplot(draws, aes(x = element, y = value)) +     facet_wrap(vars(draw), nrow = 1) +     geom_hline(yintercept = 0, col = \"grey\") +     geom_point(col = \"darkblue\", size = 0.7) +     scale_x_continuous(n.breaks = max(draws$element)) +     xlab(\"Unit\") +     ylab(\"\") +     theme(text = element_text(size = 8)) } plot_cor_one <- function(draws) {   ggplot(draws, aes(x = along, y = value)) +     facet_wrap(vars(draw), nrow = 1) +     geom_hline(yintercept = 0, col = \"grey\") +     geom_line(col = \"darkblue\") +     xlab(\"Unit\") +     ylab(\"\") +     theme(text = element_text(size = 8)) } plot_cor_many <- function(draws) {   ggplot(draws, aes(x = along, y = value)) +     facet_grid(vars(by), vars(draw)) +     geom_hline(yintercept = 0, col = \"grey\") +     geom_line(col = \"darkblue\") +     xlab(\"Unit\") +     ylab(\"\") +     theme(text = element_text(size = 8)) } plot_svd_one <- function(draws) {   ggplot(draws, aes(x = age_mid(age), y = value, color = sexgender)) +     facet_wrap(vars(draw), nrow = 1) +     geom_line() +     scale_color_manual(values = c(\"darkgreen\", \"darkorange\")) +     xlab(\"Age\") +     ylab(\"\") +     theme(text = element_text(size = 8),           legend.position = \"top\",           legend.title = element_blank()) } plot_svd_many <- function(draws) {   draws |>     mutate(element = paste(\"Unit\", element)) |>     ggplot(aes(x = age_mid(age), y = value, color = sexgender)) +     facet_grid(vars(element), vars(draw)) +     geom_line() +     scale_color_manual(values = c(\"darkgreen\", \"darkorange\")) +     xlab(\"Age\") +     ylab(\"\") +     theme(text = element_text(size = 8),           legend.position = \"top\",           legend.title = element_blank()) }"},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.1 Fixed Normal NFix()","what":"Model","title":"3. Priors","text":"\\[\\begin{equation}   \\beta_j  \\sim \\text{N}(0, \\mathtt{sd}^2) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.1 Fixed Normal NFix()","what":"All defaults","title":"3. Priors","text":"sd = 1","code":"set.seed(0)  NFix() |>   generate(n_element = 10, n_draw = 8) |>   plot_exch()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-sd","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.1 Fixed Normal NFix()","what":"Reduce sd","title":"3. Priors","text":"sd = 0.01","code":"set.seed(0)  NFix(sd = 0.01) |>   generate(n_element = 10, n_draw = 8) |>   plot_exch()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-1","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.2 Normal N()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & \\sim \\text{N}(0, \\tau^2) \\\\   \\tau & \\sim \\text{N}^+(0, \\mathtt{s}) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-1","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.2 Normal N()","what":"All defaults","title":"3. Priors","text":"s = 1","code":"set.seed(0)  N() |>   generate(n_element = 10, n_draw = 8) |>   plot_exch()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s","dir":"Articles","previous_headings":"2 Exchangeable Units > 2.2 Normal N()","what":"Reduce s","title":"3. Priors","text":"s = 0.01","code":"set.seed(0)  N(s = 0.01) |>   generate(n_element = 10, n_draw = 8) |>   plot_exch()"},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-2","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.1 Random Walk RW()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_1 & \\sim \\text{N}(0, \\mathtt{sd}^2) \\\\   \\beta_j & \\sim \\text{N}(\\beta_{j-1}, \\tau^2), \\quad j = 2, \\cdots, J \\\\   \\tau & \\sim \\text{N}^+(0, \\mathtt{s}^2) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-2","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.1 Random Walk RW()","what":"All defaults","title":"3. Priors","text":"s = 1, sd = 1","code":"set.seed(0)  RW() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-1","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.1 Random Walk RW()","what":"Reduce s","title":"3. Priors","text":"s = 0.01, sd = 1","code":"set.seed(0)  RW(s = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-and-sd","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.1 Random Walk RW()","what":"Reduce s and sd","title":"3. Priors","text":"s = 0.01, sd = 0","code":"set.seed(0)  RW(s = 0.01, sd = 0) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-3","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.2 Second-Order Random Walk RW2()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_1 & \\sim \\text{N}(0, \\mathtt{sd}^2) \\\\   \\beta_2 & \\sim \\text{N}(\\beta_1, \\mathtt{sd\\_slope}^2) \\\\   \\beta_j & \\sim \\text{N}(2\\beta_{j-1} - \\beta_{j-2}, \\tau^2), \\quad j = 3, \\cdots, J \\\\   \\tau & \\sim \\text{N}^+(0, \\mathtt{s}^2) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-3","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.2 Second-Order Random Walk RW2()","what":"All defaults","title":"3. Priors","text":"s = 1, sd = 1, sd_slope = 1","code":"set.seed(0)  RW2() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-2","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.2 Second-Order Random Walk RW2()","what":"Reduce s","title":"3. Priors","text":"s = 0.01, sd = 1, sd_slope = 1","code":"set.seed(0)  RW2(s = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-and-sd_slope","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.2 Second-Order Random Walk RW2()","what":"Reduce s and sd_slope","title":"3. Priors","text":"s = 0.01, sd = 1, sd_slope = 0.01","code":"set.seed(0)  RW2(s = 0.01, sd_slope = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd-and-sd_slope","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.2 Second-Order Random Walk RW2()","what":"Reduce s, sd, and sd_slope","title":"3. Priors","text":"s = 0.01, sd = 0, sd_slope = 0.01","code":"set.seed(0)  RW2(s = 0.01, sd = 0, sd_slope = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-4","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"Model","title":"3. Priors","text":"\\[\\begin{equation}   \\beta_j \\sim \\text{N}\\left(\\phi_1 \\beta_{j-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\beta_{j-\\mathtt{n\\_coef}},  \\omega^2\\right) \\end{equation}\\] TMB derives value \\(\\omega\\) gives \\(\\beta_j\\) variance \\(\\tau^2\\). prior \\(\\tau\\) \\[\\begin{equation}   \\tau  \\sim \\text{N}^+(0, \\mathtt{s}^2). \\end{equation}\\] prior \\(\\phi_k\\) \\[\\begin{equation}   \\frac{\\phi_k + 1}{2} \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-4","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"All defaults","title":"3. Priors","text":"n_coef = 2, s = 1","code":"set.seed(0)  AR() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"increase-n_coef","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"Increase n_coef","title":"3. Priors","text":"","code":"set.seed(0)  AR(n_coef = 3) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-3","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"Reduce s","title":"3. Priors","text":"","code":"set.seed(0)  AR(s = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"specify-along-and-by-dimensions","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"Specify ‘along’ and ‘by’ dimensions","title":"3. Priors","text":"","code":"set.seed(0)  AR() |>   generate(n_along = 20, n_by = 3, n_draw = 8) |>   plot_cor_many()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"specify-along-and-by-dimensions-set-con-by","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.3 Autoregressive AR()","what":"Specify ‘along’ and ‘by’ dimensions, set con = \"by\"","title":"3. Priors","text":"","code":"set.seed(0)  AR(con = \"by\") |>   generate(n_along = 20, n_by = 3, n_draw = 8) |>   plot_cor_many()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-5","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.4 First-Order Autoregressive AR1()","what":"Model","title":"3. Priors","text":"\\[\\begin{equation}   \\beta_j \\sim \\text{N}\\left(\\phi \\beta_{j-1},  \\omega^2\\right) \\end{equation}\\] TMB derives value \\(\\omega\\) gives \\(\\beta_j\\) variance \\(\\tau^2\\). prior \\(\\tau\\) \\[\\begin{equation}   \\tau  \\sim \\text{N}^+(0, \\mathtt{s}^2). \\end{equation}\\] prior \\(\\phi\\) \\[\\begin{equation}   \\frac{\\phi - \\mathtt{min}}{\\mathtt{max} - \\mathtt{min}} \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}). \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-5","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.4 First-Order Autoregressive AR1()","what":"All defaults","title":"3. Priors","text":"s = 1, min = 0.8, max = 0.98","code":"set.seed(0)  AR1() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-4","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.4 First-Order Autoregressive AR1()","what":"Reduce s","title":"3. Priors","text":"","code":"set.seed(0)  AR1(s = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-and-modify-min-max","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.4 First-Order Autoregressive AR1()","what":"Reduce s and modify min, max","title":"3. Priors","text":"","code":"set.seed(0)  AR1(s = 0.01, min = -1, max = 1) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-6","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.5 Random Walk with Seasonal Effects RW_Seas()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & = \\alpha_j + \\lambda_j \\\\   \\alpha_1 & \\sim \\text{N}(0, \\mathtt{sd}^2) \\\\   \\alpha_j & \\sim \\text{N}(\\alpha_{j-1}, \\tau^2), \\quad j = 2, \\cdots, J \\\\   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\\\   \\lambda_j & \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad j = 1, \\cdots, \\mathtt{n\\_seas} - 1 \\\\   \\lambda_j & = -\\sum_{s=1}^{j-1} \\lambda_{j-s}, \\quad j = \\mathtt{n\\_seas},\\; 2 \\mathtt{n\\_seas},  \\cdots \\\\   \\lambda_j & \\sim \\text{N}(\\lambda_{j-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise} \\\\   \\omega & \\sim \\text{N}^+\\left(0, \\mathtt{s\\_seas}^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-6","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.5 Random Walk with Seasonal Effects RW_Seas()","what":"All defaults","title":"3. Priors","text":"s = 1, sd = 1, s_seas = 0, sd_seas = 1","code":"set.seed(0)  RW_Seas(n_seas = 4) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.5 Random Walk with Seasonal Effects RW_Seas()","what":"Reduce s, sd","title":"3. Priors","text":"s = 0.01, sd = 0, s_seas = 0, sd_seas = 1","code":"set.seed(0)  RW_Seas(n_seas = 4, s = 0.01, sd = 0) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"increase-s_seas","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.5 Random Walk with Seasonal Effects RW_Seas()","what":"Increase s_seas","title":"3. Priors","text":"s = 0.01, sd = 0, s_seas = 1, sd_seas = 1","code":"set.seed(0)  RW_Seas(n_seas = 4, s = 0.01, sd = 0, s_seas = 1) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-sd_seas","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.5 Random Walk with Seasonal Effects RW_Seas()","what":"Reduce sd_seas","title":"3. Priors","text":"s = 0.01, sd = 0, s_seas = 1, s_seas = 0, sd_seas = 0.01","code":"set.seed(0)  RW_Seas(n_seas = 4, s = 0.01, sd = 0, sd_seas = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-7","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.6 Second-Order Random Walk with Seasonal Effects RW2_Seas()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & = \\alpha_j + \\lambda_j \\\\   \\alpha_1 & \\sim \\text{N}(0, \\mathtt{sd}^2) \\\\   \\alpha_2 & \\sim \\text{N}(\\alpha_1, \\mathtt{sd\\_slope}^2) \\\\   \\alpha_j & \\sim \\text{N}(2\\alpha_{j-1} - \\alpha_{j-2}, \\tau^2), \\quad j = 3, \\cdots, J \\\\   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\\\   \\lambda_j & \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad j = 1, \\cdots, \\mathtt{n\\_seas} - 1 \\\\   \\lambda_j & = -\\sum_{s=1}^{j-1} \\lambda_{j-s}, \\quad j = \\mathtt{n\\_seas},\\; 2 \\mathtt{n\\_seas},  \\cdots \\\\   \\lambda_j & \\sim \\text{N}(\\lambda_{j-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise} \\\\   \\omega & \\sim \\text{N}^+\\left(0, \\mathtt{s\\_seas}^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-7","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.6 Second-Order Random Walk with Seasonal Effects RW2_Seas()","what":"All defaults","title":"3. Priors","text":"s = 1, sd = 1, sd_slope = 1, s_seas = 0, sd_seas = 1","code":"set.seed(0)  RW2_Seas(n_seas = 4) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd-sd_slope-sd_seas","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.6 Second-Order Random Walk with Seasonal Effects RW2_Seas()","what":"Reduce s, sd, sd_slope, sd_seas","title":"3. Priors","text":"s = 0.01, sd = 0, sd_slope = 0.01, s_seas = 0, sd_seas = 0.01","code":"set.seed(0)  RW2_Seas(n_seas = 4, s = 0.01, sd = 0, sd_slope = 0.01, sd_seas = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-8","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & = \\alpha_j + \\epsilon_j \\\\   \\alpha_j & = \\left(j - \\frac{J + 1}{2}\\right) \\eta \\\\   \\eta & \\sim \\text{N}\\left(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2 \\right) \\\\   \\epsilon & \\sim \\text{N}(0, \\tau^2) \\\\   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-8","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"All defaults","title":"3. Priors","text":"s = 1, mean_slope = 0, sd_slope = 1","code":"set.seed(0)  Lin() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-5","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"Reduce s","title":"3. Priors","text":"s = 0, mean_slope = 0, sd_slope = 1","code":"set.seed(0)  Lin(s = 0) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"modify-mean_slope-sd_slope","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"Modify mean_slope, sd_slope","title":"3. Priors","text":"s = 1, mean_slope = 0.2, sd_slope = 0.1","code":"set.seed(0)  Lin(mean_slope = 0.2, sd_slope = 0.1) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"specify-along-and-by-dimensions-1","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"Specify ‘along’ and ‘by’ dimensions","title":"3. Priors","text":"","code":"set.seed(0)  Lin() |>   generate(n_along = 20, n_by = 3, n_draw = 8) |>   plot_cor_many()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"specify-along-and-by-dimensions-set-con-by-1","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.7 Linear Lin()","what":"Specify ‘along’ and ‘by’ dimensions, set con = \"by\"","title":"3. Priors","text":"","code":"set.seed(0)  Lin(con = \"by\") |>   generate(n_along = 20, n_by = 3, n_draw = 8) |>   plot_cor_many()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-9","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.8 Linear with AR Errors Lin_AR()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & = \\alpha_j + \\epsilon_j \\\\   \\alpha_j & = \\left(j - \\frac{J + 1}{2}\\right) \\eta \\\\   \\eta & \\sim \\text{N}\\left(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2 \\right) \\\\   \\epsilon_j & \\sim \\text{N}\\left(\\phi_1 \\epsilon_{j-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\epsilon_{j-\\mathtt{n\\_coef}},  \\omega^2\\right)   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\\\   \\frac{\\phi_k + 1}{2} & \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-9","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.8 Linear with AR Errors Lin_AR()","what":"All defaults","title":"3. Priors","text":"n_coef = 2, s = 1, mean_slope = 0, sd_slope = 1","code":"set.seed(0)  Lin_AR() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd_slope","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.8 Linear with AR Errors Lin_AR()","what":"Reduce s, sd_slope","title":"3. Priors","text":"s = 0.1, mean_slope = 0, sd_slope = 0.01","code":"set.seed(0)  Lin_AR(s = 0.1, sd_slope = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-10","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.9 Linear with AR1 Errors Lin_AR1()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\beta_j & = \\alpha_j + \\epsilon_j \\\\   \\alpha_j & = \\left(j - \\frac{J + 1}{2}\\right) \\eta \\\\   \\eta & \\sim \\text{N}\\left(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2 \\right) \\\\   \\epsilon_j & \\sim \\text{N}\\left(\\phi \\epsilon_{j-1},  \\omega^2\\right)   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\\\   \\frac{\\phi - \\mathtt{min}}{\\mathtt{max} - \\mathtt{min}} \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}) \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-10","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.9 Linear with AR1 Errors Lin_AR1()","what":"All defaults","title":"3. Priors","text":"s = 1, min = 0.8, max = 0.98, mean_slope = 0, sd_slope = 1","code":"set.seed(0)  Lin_AR1() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"modify-min-max","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.9 Linear with AR1 Errors Lin_AR1()","what":"Modify min, max","title":"3. Priors","text":"s = 1, min = -1, max = 1, mean_slope = 0, sd_slope = 1","code":"set.seed(0)  Lin_AR1(min = -1, max = 1) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd_slope-1","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.9 Linear with AR1 Errors Lin_AR1()","what":"Reduce s, sd_slope","title":"3. Priors","text":"s = 0.1, min = 0.8, max = 0.98, mean_slope = 0, sd_slope = 0.02","code":"set.seed(0)  Lin_AR1(s = 0.1, sd_slope = 0.02) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-11","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.10 Penalised Spline Sp()","what":"Model","title":"3. Priors","text":"\\[\\begin{align}   \\pmb{\\beta} & = \\bm{X} \\pmb{\\alpha} \\\\   \\alpha_1 & \\sim \\text{N}(0, \\mathtt{sd}^2) \\\\   \\alpha_2 & \\sim \\text{N}(\\alpha_1, \\mathtt{sd\\_slope}^2) \\\\   \\alpha_j & \\sim \\text{N}(2\\alpha_{j-1} - \\alpha_{j-2}, \\tau^2), \\quad j = 3, \\cdots, J \\\\   \\tau & \\sim \\text{N}^+\\left(0, \\mathtt{s}^2\\right) \\\\ \\end{align}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-11","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.10 Penalised Spline Sp()","what":"All defaults","title":"3. Priors","text":"n_comp = NULL, s = 1, sd = 1, sd_slope = 1","code":"set.seed(0)  Sp() |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"specify-n_comp","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.10 Penalised Spline Sp()","what":"Specify n_comp","title":"3. Priors","text":"n_comp = 15, s = 1, sd = 1, sd_slope = 1","code":"set.seed(0)  Sp(n_comp = 5) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"reduce-s-sd-sd_slope","dir":"Articles","previous_headings":"3 Units Correlated With Neighbours > 3.10 Penalised Spline Sp()","what":"Reduce s, sd, sd_slope","title":"3. Priors","text":"n_comp = NULL, s = 0.01, sd = 0.01, sd_slope = 0.01","code":"set.seed(0)  Sp(s = 0.01, sd = 0.01, sd_slope = 0.01) |>   generate(n_draw = 8) |>   plot_cor_one()"},{"path":[]},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"model-12","dir":"Articles","previous_headings":"4 SVD-Based Priors > 4.1 Exchangeable SVD()","what":"Model","title":"3. Priors","text":"\\[\\begin{equation}   \\pmb{\\beta} = \\pmb{F} \\pmb{\\alpha} + \\pmb{g} \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"all-defaults-12","dir":"Articles","previous_headings":"4 SVD-Based Priors > 4.1 Exchangeable SVD()","what":"All defaults","title":"3. Priors","text":"n_comp = NULL, indep = TRUE","code":"set.seed(0)  SVD(HMD) |>   generate(n_draw = 8) |>   plot_svd_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"increase-n_comp","dir":"Articles","previous_headings":"4 SVD-Based Priors > 4.1 Exchangeable SVD()","what":"Increase n_comp","title":"3. Priors","text":"n_comp = 5, indep = TRUE","code":"SVD(HMD, n_comp = 5) |>   generate(n_draw = 8) |>   plot_svd_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"set-indep-to-false","dir":"Articles","previous_headings":"4 SVD-Based Priors > 4.1 Exchangeable SVD()","what":"Set indep to FALSE","title":"3. Priors","text":"","code":"SVD(HMD, indep = FALSE) |>   generate(n_draw = 8) |>   plot_svd_one()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"multiple-units","dir":"Articles","previous_headings":"4 SVD-Based Priors > 4.1 Exchangeable SVD()","what":"Multiple units","title":"3. Priors","text":"","code":"SVD(HMD, indep = FALSE) |>   generate(n_draw = 8, n_element = 3) |>   plot_svd_many()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig3_priors.html","id":"dynamic-svd-prior-svd_ar","dir":"Articles","previous_headings":"4 SVD-Based Priors","what":"Dynamic SVD Prior: SVD_AR()","title":"3. Priors","text":"","code":"SVD_AR(HMD, indep = FALSE, s = 0.1) |>   generate(n_draw = 6, n_along = 5) |>     ggplot(aes(x = age_mid(age),                        y = value,                        color = sexgender)) +       facet_grid(vars(draw), vars(along)) +       geom_line() +       scale_color_manual(values = c(\"darkgreen\", \"darkorange\")) +       xlab(\"Age\") +       ylab(\"\") +       theme(text = element_text(size = 8),             legend.position = \"top\",             legend.title = element_blank())"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"5. Examples from BDEF Book","text":"vignette uses bage replicate (differences) case studies book Bayesian Demographic Estimation Forecasting (BDEF). BDEF uses R package demest. However, strongly recommend using bage instead. bage faster, stable, nicer interface. longer developing demest, focusing bage. addition bage, vignette uses tidyverse packages dplyr, tidyr, ggplot2.","code":"library(bage, warn.conflicts = FALSE) #> Loading required package: rvec #>  #> Attaching package: 'rvec' #> The following objects are masked from 'package:stats': #>  #>     sd, var #> The following object is masked from 'package:base': #>  #>     rank library(dplyr, warn.conflicts = FALSE) library(tidyr) library(ggplot2)"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"aims-and-data","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Aims and data","title":"5. Examples from BDEF Book","text":"estimate forecast infant mortality Swedish counties. Following standard demographic practice define infant mortality rate probability dying first year life, calculated using year’s infant deaths year’s births. (See Chapter 11 BDEF definition slightly odd.) Data analysis swe_infant dataset bage: figure shows direct estimates infant mortality rates. panels ordered size county, measured number births.","code":"swe_infant #> # A tibble: 441 × 4 #>    county     time births deaths #>    <fct>     <int>  <int>  <int> #>  1 Stockholm  1995  22626     96 #>  2 Stockholm  1996  21354     74 #>  3 Stockholm  1997  20646     62 #>  4 Stockholm  1998  20815     81 #>  5 Stockholm  1999  20863     68 #>  6 Stockholm  2000  21837     75 #>  7 Stockholm  2001  22622     68 #>  8 Stockholm  2002  24084     70 #>  9 Stockholm  2003  25028     67 #> 10 Stockholm  2004  25779     64 #> # ℹ 431 more rows ggplot(swe_infant, aes(x = time, y = deaths / births)) +   facet_wrap(vars(county)) +   geom_line()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"initial-model","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Initial model","title":"5. Examples from BDEF Book","text":"model uses default settings priors parameters. model slightly different infant mortality model BDEF. intercept \\(\\text{N}(0,1)\\) prior rather \\(\\text{N}(0,10^2)\\), time effect random walk prior rather local level prior. (Local level priors yet implemented bage.) fit model. Fitting bage lot faster fitting demest.","code":"mod <- mod_binom(deaths ~ county + time,                  data = swe_infant,                  size = births) mod #>  #>     ------ Unfitted binomial model ------ #>  #>    deaths ~ county + time #>  #>       size = births #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>       county    N()     -    21         21 #>         time   RW()  time    21         21 #>  #>  disp: mean = 1 #>  #>  n_draw var_time #>    1000     time mod <- mod |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod #>  #>     ------ Fitted binomial model ------ #>  #>    deaths ~ county + time #>  #>       size = births #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>       county    N()     -    21         21    0.11 #>         time   RW()  time    21         21    0.18 #>  #>  disp: mean = 1 #>  #>  n_draw var_time optimizer #>    1000     time    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        0.61     0.34      0.20   15      TRUE   relative convergence (4)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"extracting-parameter-estimates","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Extracting parameter estimates","title":"5. Examples from BDEF Book","text":"extract rates estimates. use function draws_ci() package rvec calculate 95% credible intervals. graph results.  components() returns values hyper-parameters. help tidyverse functions can extract graph intercept,  county effect,  time effect.  county effect time effect sd parameters, also extract.","code":"aug_init <- mod |>   augment() #> Drawing `.expected`... #> Drawing `.fitted`... aug_init #> # A tibble: 441 × 7 #>    county     time births deaths .observed                 .fitted #>    <fct>     <int>  <int>  <int>     <dbl>            <rdbl<1000>> #>  1 Stockholm  1995  22626     96   0.00424 0.0038 (0.0033, 0.0044) #>  2 Stockholm  1996  21354     74   0.00347   0.0035 (0.003, 0.004) #>  3 Stockholm  1997  20646     62   0.00300 0.0032 (0.0027, 0.0037) #>  4 Stockholm  1998  20815     81   0.00389 0.0034 (0.0029, 0.0039) #>  5 Stockholm  1999  20863     68   0.00326 0.0032 (0.0027, 0.0036) #>  6 Stockholm  2000  21837     75   0.00343 0.0032 (0.0028, 0.0037) #>  7 Stockholm  2001  22622     68   0.00301 0.0031 (0.0026, 0.0036) #>  8 Stockholm  2002  24084     70   0.00291 0.0029 (0.0025, 0.0034) #>  9 Stockholm  2003  25028     67   0.00268 0.0028 (0.0024, 0.0032) #> 10 Stockholm  2004  25779     64   0.00248  0.0026 (0.0022, 0.003) #> # ℹ 431 more rows #> # ℹ 1 more variable: .expected <rdbl<1000>> aug_init <- aug_init |>   mutate(draws_ci(.fitted)) aug_init #> # A tibble: 441 × 10 #>    county     time births deaths .observed                 .fitted #>    <fct>     <int>  <int>  <int>     <dbl>            <rdbl<1000>> #>  1 Stockholm  1995  22626     96   0.00424 0.0038 (0.0033, 0.0044) #>  2 Stockholm  1996  21354     74   0.00347   0.0035 (0.003, 0.004) #>  3 Stockholm  1997  20646     62   0.00300 0.0032 (0.0027, 0.0037) #>  4 Stockholm  1998  20815     81   0.00389 0.0034 (0.0029, 0.0039) #>  5 Stockholm  1999  20863     68   0.00326 0.0032 (0.0027, 0.0036) #>  6 Stockholm  2000  21837     75   0.00343 0.0032 (0.0028, 0.0037) #>  7 Stockholm  2001  22622     68   0.00301 0.0031 (0.0026, 0.0036) #>  8 Stockholm  2002  24084     70   0.00291 0.0029 (0.0025, 0.0034) #>  9 Stockholm  2003  25028     67   0.00268 0.0028 (0.0024, 0.0032) #> 10 Stockholm  2004  25779     64   0.00248  0.0026 (0.0022, 0.003) #> # ℹ 431 more rows #> # ℹ 4 more variables: .expected <rdbl<1000>>, .fitted.lower <dbl>, #> #   .fitted.mid <dbl>, .fitted.upper <dbl> ggplot(aug_init, aes(x = time)) +   facet_wrap(vars(county)) +   geom_ribbon(aes(ymin = .fitted.lower,                   ymax = .fitted.upper),               fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") +   geom_point(aes(y = .observed),              color = \"red\",          size = 0.1) +   xlab(\"\") +   ylab(\"\") comp_init <- mod |>   components() comp_init   #> # A tibble: 46 × 4 #>    term        component level                          .fitted #>    <chr>       <chr>     <chr>                     <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)          -2.7 (-4.1, -1.3) #>  2 county      effect    Stockholm        -0.16 (-0.25, -0.072) #>  3 county      effect    Vastra Gotaland -0.095 (-0.19, 0.0016) #>  4 county      effect    Skane            -0.1 (-0.19, -0.0025) #>  5 county      effect    Ostergotland      -0.0098 (-0.13, 0.1) #>  6 county      effect    Jonkoping           0.01 (-0.12, 0.14) #>  7 county      effect    Uppsala           0.0031 (-0.13, 0.14) #>  8 county      effect    Orebro            0.071 (-0.064, 0.22) #>  9 county      effect    Dalarna            0.04 (-0.098, 0.18) #> 10 county      effect    Norrbotten           0.17 (0.044, 0.3) #> # ℹ 36 more rows intercept <- comp_init |>   filter(term == \"(Intercept)\") |>   mutate(draws_ci(.fitted))  ggplot(intercept, aes(y = level)) +   geom_pointrange(aes(xmin = .fitted.lower,                       x = .fitted.mid,                       xmax = .fitted.upper)) county_effect <- comp_init |>   filter(term == \"county\",          component == \"effect\") |>   rename(county = level) |>   mutate(draws_ci(.fitted))    ggplot(county_effect, aes(y = county)) +   geom_pointrange(aes(xmin = .fitted.lower,                       x = .fitted.mid,               xmax = .fitted.upper)) time_effect <- comp_init |>   filter(term == \"time\",          component == \"effect\") |>   rename(time = level) |>   mutate(time = as.integer(time)) |>   mutate(draws_ci(.fitted))  ggplot(time_effect, aes(x = time)) +   geom_ribbon(aes(ymin = .fitted.lower,                  ymax = .fitted.upper),           fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") comp_init |>   filter(component == \"hyper\") #> # A tibble: 2 × 4 #>   term   component level             .fitted #>   <chr>  <chr>     <chr>        <rdbl<1000>> #> 1 county hyper     sd     0.14 (0.086, 0.21) #> 2 time   hyper     sd    0.066 (0.037, 0.12)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"an-aside-on-weakly-identified-effects","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"An aside on weakly-identified effects","title":"5. Examples from BDEF Book","text":"intercept time effects model wide credible intervals. reflects fact weakly identified model data. Adding small quantity element time effect, subtracting quantity intercept, make difference predictions model, make tiny difference posterior probabilities. demest deal weak identification standardizing estimates. Standardization can, however, introduce new complications, implemented bage. analysis focused lowest-level rates, probabilities, means, higher-level parameters time effects just means end, weak identification rarely causes problems. , however, higher-level parameters interest, may helpful experiment non-default values parameters. model , instance, setting sd parameter RW() prior 0 fixes first value time effect 0, leading strongly-identified time effect.","code":"mod_ident <- mod_binom(deaths ~ county + time,                        data = swe_infant,                size = births) |>   set_prior(time ~ RW(sd = 0)) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  time_effect_ident <- mod_ident |>   components() |>   filter(term == \"time\",          component == \"effect\") |>   rename(time = level) |>   mutate(time = as.integer(time)) |>   mutate(draws_ci(.fitted))  ggplot(time_effect_ident, aes(x = time)) +   geom_ribbon(aes(ymin = .fitted.lower,                  ymax = .fitted.upper),           fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\")"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"replicate-data-check","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Replicate data check","title":"5. Examples from BDEF Book","text":"use replicate data check see , without county-time interaction, model adequately representing cross-county variation downward trend mortality. Function replicate_data() generates replicate datasets. replicate, calculate direct estimates infant mortality rates, fit line estimates, collect slope.  slopes original data (far left) aboout level variability slopes replicate data. implication , even without county-time interaction, model satisfactory job representing cross-county variability pace decline.","code":"rep_data <- replicate_data(mod) #> Drawing `.expected`... #> Drawing `.fitted`... rep_data #> # A tibble: 8,820 × 5 #>    .replicate county     time births deaths #>    <fct>      <fct>     <int>  <int>  <dbl> #>  1 Original   Stockholm  1995  22626     96 #>  2 Original   Stockholm  1996  21354     74 #>  3 Original   Stockholm  1997  20646     62 #>  4 Original   Stockholm  1998  20815     81 #>  5 Original   Stockholm  1999  20863     68 #>  6 Original   Stockholm  2000  21837     75 #>  7 Original   Stockholm  2001  22622     68 #>  8 Original   Stockholm  2002  24084     70 #>  9 Original   Stockholm  2003  25028     67 #> 10 Original   Stockholm  2004  25779     64 #> # ℹ 8,810 more rows calculate_slope <- function(df) coef(lm(rate ~ time, data = df))[[\"time\"]] slopes <- rep_data |>   mutate(rate = deaths / births) |>   group_by(.replicate, county) |>   nest() |>   mutate(slope = sapply(data, calculate_slope))  ggplot(slopes, aes(x = .replicate, y = slope)) +   geom_point(position = position_jitter(width = 0.1)) +   xlab(\"\") +   theme(axis.text.x = element_text(angle = 90))"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"summarizing-results-through-probabilities","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Summarizing results through probabilities","title":"5. Examples from BDEF Book","text":"like calculate, combination county time, probability underlying (super-population) infant mortality rate less 2.5 per 1000. draws_mean() function rvec makes easy.","code":"prob_25 <- aug_init |>   mutate(prob = draws_mean(.fitted < 0.0025))  ggplot(prob_25, aes(x = time, y = prob)) +   facet_wrap(vars(county)) +   geom_line()"},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"forecast","dir":"Articles","previous_headings":"2 Infant Mortality in Sweden","what":"Forecast","title":"5. Examples from BDEF Book","text":"forecast mortality rates 2025. default, forecast() function returns output looks like return value augment(). include_estimates `TRUE, output includes historical values. contrast -defaults model Chapter 11 BDEF, -defaults model yield exploding prediction intervals.","code":"vals_forecast <- mod |>   forecast(labels = 2016:2025,            include_estimates = TRUE) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> `augment()` for past values... #> Drawing `.expected`... #> `augment()` for past values...Drawing `.fitted`... #> `augment()` for past values... vals_forecast #> # A tibble: 651 × 7 #>    county     time births deaths .observed                 .fitted #>    <fct>     <int>  <int>  <dbl>     <dbl>            <rdbl<1000>> #>  1 Stockholm  1995  22626     96   0.00424 0.0038 (0.0033, 0.0044) #>  2 Stockholm  1996  21354     74   0.00347   0.0035 (0.003, 0.004) #>  3 Stockholm  1997  20646     62   0.00300 0.0032 (0.0027, 0.0037) #>  4 Stockholm  1998  20815     81   0.00389 0.0034 (0.0029, 0.0039) #>  5 Stockholm  1999  20863     68   0.00326 0.0032 (0.0027, 0.0036) #>  6 Stockholm  2000  21837     75   0.00343 0.0032 (0.0028, 0.0037) #>  7 Stockholm  2001  22622     68   0.00301 0.0031 (0.0026, 0.0036) #>  8 Stockholm  2002  24084     70   0.00291 0.0029 (0.0025, 0.0034) #>  9 Stockholm  2003  25028     67   0.00268 0.0028 (0.0024, 0.0032) #> 10 Stockholm  2004  25779     64   0.00248  0.0026 (0.0022, 0.003) #> # ℹ 641 more rows #> # ℹ 1 more variable: .expected <rdbl<1000>> vals_forecast <- vals_forecast |>   mutate(draws_ci(.fitted))    ggplot(vals_forecast, aes(x = time)) +   facet_wrap(vars(county)) +   geom_ribbon(aes(ymin = .fitted.lower,                   ymax = .fitted.upper),              fill = \"lightblue\") +   geom_line(aes(y = .fitted.mid),             color = \"darkblue\") +   geom_point(aes(y = .observed),              color = \"red\",          size = 0.1) +   xlab(\"\") +   ylab(\"\") #> Warning: Removed 210 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"life-expectancy-in-portugal","dir":"Articles","previous_headings":"","what":"Life expectancy in Portugal","title":"5. Examples from BDEF Book","text":"TODO - write !","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"health-expenditure-in-the-netherlands","dir":"Articles","previous_headings":"","what":"Health expenditure in the Netherlands","title":"5. Examples from BDEF Book","text":"TODO - write !","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig5_bdef.html","id":"internal-migration-in-iceland","dir":"Articles","previous_headings":"","what":"Internal migration in Iceland","title":"5. Examples from BDEF Book","text":"TODO - write !","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"6. Modelling Mortality","text":"vignette, estimate mortality rates, summary indicators life expectancy. work data Iceland. try several methods representing age patterns, including one uses typically patterns Human Mortality Database. model-based estimates come measures uncertainty. addition bage , need package poputils, contains functions calculating life expectancy, rvec, contains data structures functions working random draws. use standard tidyverse tools data manipulation graphing.","code":"library(bage) #> Loading required package: rvec #>  #> Attaching package: 'rvec' #> The following objects are masked from 'package:stats': #>  #>     sd, var #> The following object is masked from 'package:base': #>  #>     rank library(poputils) library(rvec) library(dplyr, warn.conflicts = FALSE) library(tidyr) library(ggplot2)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"the-data","dir":"Articles","previous_headings":"","what":"The data","title":"6. Modelling Mortality","text":"Iceland deaths data included bage package. contains counts deaths, estimates mid-year population, disaggregated age sex, years 1998–2022. oldest age group 105 years older. data sparse. Twenty-two percent death counts 0, half 3 less. plot ‘direct’ estimates death rates first least years data. Direct estimates calculated dividing number deaths corresponding population risk, independently combination age, sex, time. results shown , log scale. dots bottom graph represent log-rates negative infinity, occur cells deaths observed. Random variation obscures patterns age 50. age 50, rates increase less linearly.","code":"dth <- bage::isl_deaths dth #> # A tibble: 5,300 × 5 #>    age   sex     time deaths  popn #>    <fct> <fct>  <int>  <int> <dbl> #>  1 0     Female  1998      7 2051  #>  2 1     Female  1998      1 2082. #>  3 2     Female  1998      1 2088  #>  4 3     Female  1998      3 2112. #>  5 4     Female  1998      1 2204  #>  6 5     Female  1998      0 2232. #>  7 6     Female  1998      1 2175  #>  8 7     Female  1998      0 2240  #>  9 8     Female  1998      0 2261  #> 10 9     Female  1998      0 2182. #> # ℹ 5,290 more rows tail(dth, n = 3) #> # A tibble: 3 × 5 #>   age   sex    time deaths  popn #>   <fct> <fct> <int>  <int> <dbl> #> 1 103   Male   2022      0   1.5 #> 2 104   Male   2022      1   1   #> 3 105+  Male   2022      0   0 dth |>   count(deaths) |>   mutate(percent = round(100 * n / sum(n)),          cumulative_percent = cumsum(percent)) |>   head() #> # A tibble: 6 × 4 #>   deaths     n percent cumulative_percent #>    <int> <int>   <dbl>              <dbl> #> 1      0  1180      22                 22 #> 2      1   701      13                 35 #> 3      2   424       8                 43 #> 4      3   333       6                 49 #> 5      4   239       5                 54 #> 6      5   194       4                 58 dth |>   filter(time %in% c(1998, 2010, 2022)) |>   mutate(rate = deaths / popn) |>   ggplot(aes(x = age_mid(age), y = rate)) + ## 'age_mid()' returns the mid point   facet_grid(vars(sex), vars(time)) +       ## of the age group, which is useful   geom_point(alpha = 0.5) +                 ## for plotting   scale_y_log10() +   ggtitle(\"Direct estimates of mortality rates\") #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values. #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"specifying-the-model","dir":"Articles","previous_headings":"3 Initial model","what":"Specifying the model","title":"6. Modelling Mortality","text":"fit initial simple model. prior model, allow interaction age sex, allow interactions involving time. assume, words, mortality rates rise fall rate across age-sex groups. assumption unlikely met exactly practice, revisit later. accept default priors main effects interactions. can seen bottom printout, mod_pois() guessed variables represent age, sex, time. (bases guesses variable names.) Age time main effects, default, get “random walk” priors, terms get “normal” priors. running model annoying, common, problem data . turns 5 cases non-zero deaths zero population. edit data directly, removing modify cases. However, dealing cases modelling decision, like include model . make use fact exposure can specified via formula modify cases deaths population. model model ","code":"dth |>   filter(deaths > 0 & popn == 0) #> # A tibble: 5 × 5 #>   age   sex     time deaths  popn #>   <fct> <fct>  <int>  <int> <dbl> #> 1 104   Male    2001      1     0 #> 2 104   Male    2007      1     0 #> 3 104   Male    2012      1     0 #> 4 104   Female  2019      2     0 #> 5 105+  Male    2020      1     0 mod_base <- mod_pois(deaths ~ age * sex + time,                  data = dth,                  exposure = ~ ifelse(deaths > 0 & popn == 0, 0.5, popn)) mod_base #>  #>     ------ Unfitted Poisson model ------ #>  #>    deaths ~ age * sex + time #>  #>   exposure = ~ifelse(deaths > 0 & popn == 0, 0.5, popn) #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age   106        106 #>          sex NFix()     -     2          2 #>         time   RW()  time    25         25 #>      age:sex   RW()   age   212        212 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     time     age           sex"},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"mathematical-description-of-the-model","dir":"Articles","previous_headings":"3 Initial model","what":"Mathematical description of the model","title":"6. Modelling Mortality","text":"model implemented mod_base assumes \\[\\begin{equation}   y_i \\sim \\text{Poisson}(\\gamma_i w_i) \\end{equation}\\] \\(y_i\\) deaths age-sex-time cell \\(\\), \\(w_i\\) population risk, \\(\\gamma_i\\) underlying death rate. modelling deaths draws Poisson distribution, model recognizes contribution individual-level randomness observed death counts. Recognizing individual-level randomness important analyzing data cell counts small. Death rates \\(\\gamma_i\\) treated draws Gamma distribution, \\[\\begin{equation}   \\gamma_i \\sim \\text{Gamma}(\\xi^{-1}, (\\xi \\mu_i)^{-1}). \\end{equation}\\] expected value \\(\\gamma_i\\) \\(\\mu_i\\), variance \\(\\xi \\mu_i^2\\). modelling \\(\\gamma_i\\) draw distribution, recognizing model able explain variation \\(\\gamma_i\\). Larger values \\(\\xi\\) imply unexplained variation. model \\(\\mu_i\\), log scale, sum factors formed dimensions data, \\[\\begin{equation}   \\log \\mu_i = \\sum_{m=0}^4 \\beta_{j_i^m}^{(m)} \\end{equation}\\] \\(\\pmb{\\beta}^{(0)}\\) intercept, \\(\\pmb{\\beta}^{(m)}\\), \\(m = 1, \\cdots, 4\\), main effect interaction, \\(j_i^m\\) element \\(\\pmb{\\beta}^{(m)}\\) associated cell \\(\\). \\(\\beta^{(m)}\\) model \\(\\mu_i\\) receives prior. default prior intercept \\[\\begin{equation}   \\beta^{(0)} \\sim \\text{N}(0, 10^2) \\end{equation}\\] prior allows much broader range values expect see practice. rarely expect see values \\(\\gamma_i\\) lower 0.001 (-7 log scale) higher 1 (0). default prior age first-order random walk, \\[\\begin{equation}   \\beta_j^{(1)} \\sim \\text{N}(\\beta_{j-1}^{(1)}, \\tau_1^2), \\quad j = 2, \\dots, J_1 \\end{equation}\\] random walk prior embodies idea expect changes one age group next relatively small, neighboring age groups strongly correlated distant age groups. value standard deviation parameter \\(\\tau_1\\) estimated part model, prior, \\[\\begin{equation}     \\tau_1^2 \\sim \\text{N}^+(0, 1) \\end{equation}\\] \\(\\text{N}^+(0, 1)\\) denotes half-normal distribution, , normal distribution restricted non-negative values. prior properly identified, need place constraint overall level. use soft constraint mean, \\[\\begin{equation}   \\frac{1}{J_1}\\sum_{j=1}^{J_1} \\beta_j^{(1)} \\sim \\text{N}(0, 1) \\end{equation}\\] sex main effect prior \\[\\begin{align}   \\beta_j^{(2)} & \\sim \\text{N}(0, \\tau_2^2), \\quad j = 1, 2 \\\\   \\tau_2^2 & \\sim \\text{N}^+(0, 1) \\end{align}\\] time term \\(\\beta^{(3)}\\) random-walk prior age effect. age-sex interaction \\(\\beta^{(4)}\\) prior sex effect. Finally, dispersion term \\(\\xi\\) penalized-complexity prior [@simpson2022priors], \\[\\begin{equation}     p(\\xi) = \\frac{1}{2 \\sqrt{\\xi}}e^{-\\sqrt{\\xi}}. \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"fitting-the-model","dir":"Articles","previous_headings":"3 Initial model","what":"Fitting the model","title":"6. Modelling Mortality","text":"fit model calling function fit():","code":"mod_base <- fit(mod_base) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_base #>  #>     ------ Fitted Poisson model ------ #>  #>    deaths ~ age * sex + time #>  #>   exposure = ~ifelse(deaths > 0 & popn == 0, 0.5, popn) #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age   106        106    2.68 #>          sex NFix()     -     2          2    0.08 #>         time   RW()  time    25         25    0.10 #>      age:sex   RW()   age   212        212    0.21 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     time     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        2.67     1.32      1.09   16      TRUE   relative convergence (4)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"extracting-rates","dir":"Articles","previous_headings":"3 Initial model","what":"Extracting rates","title":"6. Modelling Mortality","text":"extract estimated rates fitted model object, use function augment(). Function augment() starts original data, adds column called .observed containing direct estimates (\\(y_i/w_i\\)), column called .fitted containing estimates rates (\\(\\gamma_i\\)), column called .expected containing expected values rates (\\(\\mu_i\\)). .fitted .expected columns consist rvecs. rvec vector-like object holds multiple draws, case draws posterior distributions. Next extract rates estimates selected years, summarize posterior distributions. plot point estimates 95% credible intervals modelled estimates, together original direct estimates,","code":"aug_base <- augment(mod_base) #> Drawing `.expected`... #> Drawing `.fitted`... aug_base #> # A tibble: 5,300 × 8 #>    age   sex     time deaths  popn .observed                    .fitted #>    <fct> <fct>  <int>  <int> <dbl>     <dbl>               <rdbl<1000>> #>  1 0     Female  1998      7 2051   0.00341     0.0021 (0.0016, 0.0025) #>  2 1     Female  1998      1 2082.  0.000480   5e-04 (0.00038, 0.00066) #>  3 2     Female  1998      1 2088   0.000479 0.00026 (0.00018, 0.00037) #>  4 3     Female  1998      3 2112.  0.00142  0.00017 (0.00011, 0.00023) #>  5 4     Female  1998      1 2204   0.000454 0.00012 (8.2e-05, 0.00018) #>  6 5     Female  1998      0 2232.  0        0.00011 (7.4e-05, 0.00016) #>  7 6     Female  1998      1 2175   0.000460 9.5e-05 (6.4e-05, 0.00014) #>  8 7     Female  1998      0 2240   0        7.6e-05 (4.9e-05, 0.00011) #>  9 8     Female  1998      0 2261   0        7.7e-05 (5.1e-05, 0.00012) #> 10 9     Female  1998      0 2182.  0        8.2e-05 (5.4e-05, 0.00012) #> # ℹ 5,290 more rows #> # ℹ 1 more variable: .expected <rdbl<1000>> rates_base <- aug_base |>   filter(time %in% c(1998, 2010, 2022)) |>   select(age, sex, time, .observed, .fitted) |>   mutate(draws_ci(.fitted)) rates_base #> # A tibble: 636 × 8 #>    age   sex     time .observed                    .fitted .fitted.lower #>    <fct> <fct>  <int>     <dbl>               <rdbl<1000>>         <dbl> #>  1 0     Female  1998  0.00341     0.0021 (0.0016, 0.0025)     0.00162   #>  2 1     Female  1998  0.000480   5e-04 (0.00038, 0.00066)     0.000380  #>  3 2     Female  1998  0.000479 0.00026 (0.00018, 0.00037)     0.000184  #>  4 3     Female  1998  0.00142  0.00017 (0.00011, 0.00023)     0.000111  #>  5 4     Female  1998  0.000454 0.00012 (8.2e-05, 0.00018)     0.0000822 #>  6 5     Female  1998  0        0.00011 (7.4e-05, 0.00016)     0.0000744 #>  7 6     Female  1998  0.000460 9.5e-05 (6.4e-05, 0.00014)     0.0000638 #>  8 7     Female  1998  0        7.6e-05 (4.9e-05, 0.00011)     0.0000488 #>  9 8     Female  1998  0        7.7e-05 (5.1e-05, 0.00012)     0.0000508 #> 10 9     Female  1998  0        8.2e-05 (5.4e-05, 0.00012)     0.0000542 #> # ℹ 626 more rows #> # ℹ 2 more variables: .fitted.mid <dbl>, .fitted.upper <dbl> ggplot(rates_base, aes(x = age_mid(age),               ymin = .fitted.lower,              y = .fitted.mid,              ymax = .fitted.upper)) +   facet_grid(vars(sex), vars(time)) +   geom_ribbon(fill = \"lightblue\") +   geom_line(col= \"darkblue\") +   geom_point(aes(y = .observed),              size = 0.2) +   scale_y_log10() +   ggtitle(\"Modelled and direct estimates of mortality rates - base model\") #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values. #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"extracting-higher-level-terms","dir":"Articles","previous_headings":"3 Initial model","what":"Extracting higher-level terms","title":"6. Modelling Mortality","text":"can gain insights model extracting graphing estimates main effects interactions, \\(\\pmb{\\beta}^{(m)}\\). Estimates main effects interactions, higher-level parameters, can obtained function components(). components() returns tibble contain estimates higher-level parameters. extract age effect, prepare graphing, use graph age effect reveals typical profile mortality rates,","code":"comp_base <- components(mod_base) comp_base #> # A tibble: 350 × 4 #>    term        component level                 .fitted #>    <chr>       <chr>     <chr>            <rdbl<1000>> #>  1 (Intercept) effect    (Intercept) -1.5 (-3.3, 0.13) #>  2 age         effect    0           -1.5 (-3.1, 0.23) #>  3 age         effect    1           -2.9 (-4.4, -1.1) #>  4 age         effect    2           -3.5 (-5.2, -1.7) #>  5 age         effect    3             -4 (-5.7, -2.2) #>  6 age         effect    4           -4.3 (-5.9, -2.5) #>  7 age         effect    5           -4.3 (-6.1, -2.6) #>  8 age         effect    6           -4.5 (-6.2, -2.7) #>  9 age         effect    7           -4.7 (-6.4, -2.9) #> 10 age         effect    8           -4.7 (-6.4, -2.9) #> # ℹ 340 more rows age_effect <- comp_base |>   filter(component == \"effect\",          term == \"age\") |>   mutate(draws_ci(.fitted)) ggplot(age_effect,        aes(x = age_mid(level),            y = .fitted.mid,            ymin = .fitted.lower,            ymax = .fitted.upper)) +   geom_ribbon(fill = \"lightblue\") +   geom_line() +   ggtitle(\"Age effect\")"},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"mathematical-structure","dir":"Articles","previous_headings":"4 Revised model","what":"Mathematical structure","title":"6. Modelling Mortality","text":"Human Mortality Database provides estimates mortality rates many countries. Let \\(\\pmb{M}\\) denote matrix holding estimates, log scale. applying Singlar Value Decomposition \\(\\pmb{M}\\), rescaling, can construct matrix \\(\\pmb{F}\\) column vector \\(\\pmb{g}\\), parsimoniously summarize age-profiles, age-sex profiles, observed \\(\\pmb{M}\\). \\(z\\) vector independent draws \\(\\text{N}(0,1)\\) distribution, resulting vector \\[\\begin{equation}   \\pmb{m} = \\pmb{F} \\pmb{z} + \\pmb{g} \\end{equation}\\] looks like randomly-selected column \\(\\pmb{M}\\). use \\(\\pmb{F}\\) \\(\\pmb{g}\\) build priors age effects age-sex interactions. prior age effects \\[\\begin{align}   \\pmb{\\beta}^{(1)} & = \\pmb{F} \\pmb{\\alpha} + \\pmb{g} \\\\   \\alpha_k & \\sim \\text{N}(0, 1), \\quad k = 1, \\cdots, K \\end{align}\\] \\(K\\) chosen user. prior age-sex interactions looks except , default, calculations done separately sex.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"specifying-the-new-model","dir":"Articles","previous_headings":"4 Revised model","what":"Specifying the new model","title":"6. Modelling Mortality","text":"","code":"mod_hmd <- mod_pois(deaths ~ age:sex + time,                     data = dth,                     exposure = ~ ifelse(deaths > 0 & popn == 0, 0.5, popn)) |>   set_prior(age:sex ~ SVD(HMD)) mod_hmd #>  #>     ------ Unfitted Poisson model ------ #>  #>    deaths ~ age:sex + time #>  #>   exposure = ~ifelse(deaths > 0 & popn == 0, 0.5, popn) #>  #>         term    prior along n_par n_par_free #>  (Intercept)   NFix()     -     1          1 #>         time     RW()  time    25         25 #>      age:sex SVD(HMD)     -   212          6 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     time     age           sex mod_hmd <- fit(mod_hmd) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_hmd #>  #>     ------ Fitted Poisson model ------ #>  #>    deaths ~ age:sex + time #>  #>   exposure = ~ifelse(deaths > 0 & popn == 0, 0.5, popn) #>  #>         term    prior along n_par n_par_free std_dev #>  (Intercept)   NFix()     -     1          1       - #>         time     RW()  time    25         25    0.10 #>      age:sex SVD(HMD)     -   212          6    2.80 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     time     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        2.38     1.18      0.99   10      TRUE   relative convergence (4) aug_hmd <- augment(mod_hmd) #> Drawing `.expected`... #> Drawing `.fitted`...  rates_hmd <- aug_hmd |>   filter(time %in% c(1998, 2010, 2022)) |>   select(age, sex, time, .observed, .fitted) |>   mutate(draws_ci(.fitted))  ggplot(rates_hmd, aes(x = age_mid(age),               ymin = .fitted.lower,              y = .fitted.mid,              ymax = .fitted.upper)) +   facet_grid(vars(sex), vars(time)) +   geom_ribbon(fill = \"lightblue\") +   geom_line(col= \"darkblue\") +   geom_point(aes(y = .observed),              size = 0.2) +   scale_y_log10() +   ggtitle(\"Modelled and direct estimates of mortality rates - HMD model\") #> Warning in scale_y_log10(): log-10 transformation introduced #> infinite values. #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`). comp_hmd <- components(mod_hmd)  age_sex_interact <- comp_hmd |>   filter(component == \"effect\",          term == \"age:sex\") |>   separate_wider_delim(level, delim = \".\", names = c(\"age\", \"sex\")) |>   mutate(draws_ci(.fitted))  ggplot(age_sex_interact,        aes(x = age_mid(age),            y = .fitted.mid,            ymin = .fitted.lower,            ymax = .fitted.upper)) +   geom_ribbon(aes(fill = sex),               alpha = 0.3) +   geom_line(aes(col = sex)) +   ggtitle(\"Age-sex interaction\")"},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"model-testing","dir":"Articles","previous_headings":"","what":"Model testing","title":"6. Modelling Mortality","text":"","code":"rep_data_base <- replicate_data(mod_base, condition_on = \"expected\") #> Drawing `.expected`... #> Drawing `.fitted`...  data <- rep_data_base |>   filter(time == 2022) |>   select(-popn) |>   pivot_wider(names_from = sex, values_from = deaths) |>   mutate(diff = Female - Male) ggplot(data, aes(x = age_mid(age), y = diff)) +   facet_wrap(vars(.replicate)) +   geom_point(size = 0.2) rep_data_hmd <- replicate_data(mod_hmd, condition_on = \"expected\") #> Drawing `.expected`... #> Drawing `.fitted`...  data <- rep_data_hmd |>   filter(time == 2022) |>   select(-popn) |>   pivot_wider(names_from = sex, values_from = deaths) |>   mutate(diff = Female - Male) ggplot(data, aes(x = age_mid(age), y = diff)) +   facet_wrap(vars(.replicate)) +   geom_point(size = 0.2)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig6_mortality.html","id":"life-expectancy-and-life-tables","dir":"Articles","previous_headings":"","what":"Life expectancy and life tables","title":"6. Modelling Mortality","text":"","code":"lifeexp_hmd <- mod_hmd |>   augment() |>   lifeexp(mx = .fitted,           by = c(time, sex)) #> Drawing `.expected`... #> Drawing `.fitted`... lifeexp_hmd #> # A tibble: 50 × 3 #>     time sex              ex #>    <int> <fct>  <rdbl<1000>> #>  1  1998 Female  82 (81, 82) #>  2  1998 Male    78 (77, 78) #>  3  1999 Female  82 (81, 82) #>  4  1999 Male    78 (77, 78) #>  5  2000 Female  82 (82, 82) #>  6  2000 Male    78 (78, 79) #>  7  2001 Female  82 (82, 83) #>  8  2001 Male    79 (78, 79) #>  9  2002 Female  82 (82, 83) #> 10  2002 Male    79 (78, 79) #> # ℹ 40 more rows lifeexp_hmd <- mod_hmd |>   augment() |>   lifeexp(mx = .fitted,           by = c(time, sex)) #> Drawing `.expected`... #> Drawing `.fitted`... lifeexp_hmd #> # A tibble: 50 × 3 #>     time sex              ex #>    <int> <fct>  <rdbl<1000>> #>  1  1998 Female  82 (81, 82) #>  2  1998 Male    78 (77, 78) #>  3  1999 Female  82 (81, 82) #>  4  1999 Male    78 (77, 78) #>  5  2000 Female  82 (82, 82) #>  6  2000 Male    78 (78, 79) #>  7  2001 Female  82 (82, 83) #>  8  2001 Male    79 (78, 79) #>  9  2002 Female  82 (82, 83) #> 10  2002 Male    79 (78, 79) #> # ℹ 40 more rows"},{"path":"https://bayesiandemography.github.io/bage/articles/vig7_simulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"7. Simulation","text":"Figure 1.1: Simulation study model Function report_sim() automates process simulation study. still experimenting report_sim(), interface may change. Suggestions welcome, ideally raising issue .","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig7_simulation.html","id":"estimation-model-matches-data-generation-model","dir":"Articles","previous_headings":"","what":"Estimation model matches data generation model","title":"7. Simulation","text":"straightforward type simulation estimation model' used inference matches thedata generation model’ used create data. Even estimation model matches data generation model, inferred values parameters exactly reproduce actual values, since data drawn random, provides noisy signal parameters generated . However, experiment repeated many times, different randomly-drawn dataset time, errors less average zero, 50% credible intervals contain true values close 50% time, 95% credible intervals contain true values close 95% time. illustrate, use investigate performance model divorce rates New Zealand. reduce number ages time periods speed calculations. simulation study, pass model report_sim(). one model supplied, report_sim() assumes model used estimation model data generation model. default report_sim() repeats experiment 100 times, generating different dataset time. output report_sim() list two data frames. first data frame contains results parameters associated components() function: main effects interactions, associated hyper-parameters, dispersion. second data frame contains results parameters associated augment() function: lowest-level rates parameters. can seen results, errors average exactly zero, 50% credible intervals contain true value exactly 50% time, 95% credible intervals contain true value exactly 95% time. However, increasing number simulations default value 100 , say, 1000 reduce average size errors closer zero, bring actual coverage rates closer advertised values. larger values n_sim used, can helpful use parallel processing speed calculations, done n_core argument. One slightly odd feature results mean .expected large. reflects fact data generation model draws extreme values. developing set informative priors avoid behavior future versions bage.","code":"library(bage) #> Loading required package: rvec #>  #> Attaching package: 'rvec' #> The following objects are masked from 'package:stats': #>  #>     sd, var #> The following object is masked from 'package:base': #>  #>     rank library(dplyr, warn.conflicts = FALSE) library(poputils)  divorces_small <- nzl_divorces |>   filter(age_upper(age) < 40,          time >= 2016) |>   droplevels()  mod <- mod_pois(divorces ~ age * sex + time,                 data = divorces_small,                     exposure = population) mod      #>  #>     ------ Unfitted Poisson model ------ #>  #>    divorces ~ age * sex + time #>  #>   exposure = population #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age     4          4 #>          sex NFix()     -     2          2 #>         time   RW()  time     6          6 #>      age:sex   RW()   age     8          8 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     time     age           sex set.seed(0) res <- report_sim(mod_est = mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... res #> $components #> # A tibble: 9 × 7 #>   term        component   .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>       <chr>        <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 (Intercept) effect    -0.127       0.46      0.93       1.18       3.40  #> 2 age         effect     0.115       0.545     0.968      1.46       4.23  #> 3 age         hyper      0.138       0.41      0.78       0.602      2.08  #> 4 sex         effect    -0.0988      0.52      0.935      1.13       3.28  #> 5 time        effect    -0.0148      0.523     0.967      1.28       3.71  #> 6 time        hyper      0.0185      0.59      0.9        0.431      1.42  #> 7 age:sex     effect    -0.00441     0.48      0.954      1.42       4.13  #> 8 age:sex     hyper     -0.0191      0.47      0.84       0.496      1.76  #> 9 disp        disp      -0.0539      0.43      0.97       0.285      0.847 #>  #> $augment #> # A tibble: 2 × 7 #>   .var      .observed    .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>         <dbl>     <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 .fitted        73.7 -0.000416     0.488     0.951    0.00856     0.0248 #> 2 .expected      73.7 -8.77         0.496     0.945   57.2       214."},{"path":"https://bayesiandemography.github.io/bage/articles/vig7_simulation.html","id":"estimation-model-different-from-data-generation-model","dir":"Articles","previous_headings":"","what":"Estimation model different from data generation model","title":"7. Simulation","text":"actual applications, estimation model ever perfectly describes true data generating process. can therefore helpful see robust given model misspecification, , cases estimation model differs data generation model. report_sim(), can done using one model mod_est argument, different model mod_sim argument. Consider, instance, case time effect generated AR1() prior, estimation model continues use default value RW() prior, set mod_sim argument mod_ar1 generate report. case, although actual coverage hyper-parameters (components part results) now diverges advertised coverage, coverage low-level rates (augment part results) still close advertised coverage.","code":"mod_ar1 <- mod |>   set_prior(time ~ AR1()) mod_ar1  #>  #>     ------ Unfitted Poisson model ------ #>  #>    divorces ~ age * sex + time #>  #>   exposure = population #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age     4          4 #>          sex NFix()     -     2          2 #>         time  AR1()  time     6          6 #>      age:sex   RW()   age     8          8 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     time     age           sex res_ar1 <- report_sim(mod_est = mod, mod_sim = mod_ar1) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... res_ar1 #> $components #> # A tibble: 8 × 7 #>   term        component  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>       <chr>       <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 (Intercept) effect     0.169      0.52      0.96       1.18       3.39  #> 2 age         effect    -0.0147     0.51      0.938      1.45       4.22  #> 3 age         hyper      0.0665     0.38      0.79       0.586      2.08  #> 4 sex         effect    -0.0423     0.535     0.955      1.14       3.28  #> 5 time        effect    -0.116      0.55      0.962      1.24       3.60  #> 6 age:sex     effect    -0.0756     0.524     0.935      1.42       4.11  #> 7 age:sex     hyper     -0.0261     0.52      0.89       0.479      1.65  #> 8 disp        disp      -0.0734     0.53      0.93       0.219      0.646 #>  #> $augment #> # A tibble: 2 × 7 #>   .var      .observed     .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>         <dbl>      <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 .fitted        35.3 -0.0000892     0.49      0.948    0.00695     0.0202 #> 2 .expected      35.3 -2.20          0.521     0.946   16.8        57.7"},{"path":"https://bayesiandemography.github.io/bage/articles/vig7_simulation.html","id":"the-relationship-between-report_sim-and-replicate_data","dir":"Articles","previous_headings":"","what":"The relationship between report_sim() and replicate_data()","title":"7. Simulation","text":"Functions report_sim() replicate_data() overlap, use simulated data provide insights model performance. aims , however, different. Typically, report_sim() used fitting model, assess performance across random selection possible datasets, replicate_data() used fitting model, assess performance dataset hand.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"prior-predictive-checking","dir":"Articles","previous_headings":"","what":"Prior predictive checking","title":"8. Bayesian Workflow","text":"Given model, priors, typically exposure/size term, generate data parts data generating model need stronger priors standard estimation model - eg can’t put weakly informative prior intercept “common Bayesian analysis use models fully generative. example, regression typically model outcome y given predictors x without generative model x.” (Gelman et al 2020: 11-12) [actually model ever fully generative - always assumptions part ] generating data given model priors step 1 simulation study - can re-use functions prior predictive checking simulation studies","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"fitting-a-model","dir":"Articles","previous_headings":"","what":"Fitting a model","title":"8. Bayesian Workflow","text":"“generic diagnostic tools described Yao et al. (2018a) Talts et al. (2020) can used verify particular approximate algorithm reproduces features posterior care specific model.”Yao, Y., Vehtari, ., Simpson, D., Gelman, . (2018a). Yes, work?: Evaluating variational inference. Proceedings International Conference Machine Learning, 5581– 5590. Talts, S., Betancourt, M., Simpson, D., Vehtari, ., Gelman, . (2020). Validating Bayesian inference algorithms simulation-based calibration. www.stat.columbia.edu/~gelman/ research/unpublished/sbc.pdf [looks like something might implement] “Laplace approximation can viewed data-dependent linearization desired model” (Gelman et al 2020: 15) “Fit fast, fail fast” [can !]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"using-constructed-data-to-find-and-understand-problems","dir":"Articles","previous_headings":"","what":"Using constructed data to find and understand problems","title":"8. Bayesian Workflow","text":"“implies fake data simulation can particularly relevant zone parameter space predictive data. turn suggests two-step procedure first fit model real data, draw parameters resulting posterior distribution use fake-data checking. statistical properties procedure unclear practice found checks helpful, revealing problems computation model, providing reassurance fake-data-based inferences reproduce assumed parameter value.” (Gelman et al 2020: 17)","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"addressing-computational-problems","dir":"Articles","previous_headings":"","what":"Addressing computational problems","title":"8. Bayesian Workflow","text":"“Starting simple complex models meeting middle” (Gelman et al 2020: 22-23) - Easy bage - eg number terms, complexity priors","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"evaluating-and-using-a-fitted-model","dir":"Articles","previous_headings":"","what":"Evaluating and using a fitted model","title":"8. Bayesian Workflow","text":"bayesplot package tools posterior predictive checking [need generate outputs can fed plots]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig8_workflow.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"8. Bayesian Workflow","text":"@article{gelman2020bayesian, title={Bayesian workflow}, author={Gelman, Andrew Vehtari, Aki Simpson, Daniel Margossian, Charles C Carpenter, Bob Yao, Yuling Kennedy, Lauren Gabry, Jonah B{\"u}rkner, Paul-Christian Modr{'}k, Martin}, journal={arXiv preprint arXiv:2011.01808}, year={2020} } @article{van2021bayesian, title={Bayesian statistics modelling}, author={van de Schoot, Rens Depaoli, Sarah King, Ruth Kramer, Bianca M{\"}rtens, Kaspar Tadesse, Mahlet G Vannucci, Marina Gelman, Andrew Veen, Duco Willemsen, Joukje others}, journal={Nature Reviews Methods Primers}, volume={1}, number={1}, pages={1}, year={2021}, publisher={Nature Publishing Group UK London} } https://betanalpha.github.io/assets/case_studies/principled_bayesian_workflow.html","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"9. Covariates","text":"Covariates can used extend standard bage models two ways: incorporating information beyond contained classifying variables, age, sex, region; dealing subsets data unusual behavior. vignette gives brief description covariates bage illustrates use case study births South Korea.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"mathematical-details","dir":"Articles","previous_headings":"","what":"Mathematical details","title":"9. Covariates","text":"model bage typically structure something like: \\[\\begin{align}   y_{ast} & \\sim \\text{Poisson}(\\gamma_{ast} w_{ast}) \\\\   \\log \\gamma_{ast} & \\sim \\text{Gamma}(\\xi^{-1}, (\\mu_{ast} \\xi)^{-1}) \\\\   \\log \\mu_{ast} & = \\beta^{(0)} + \\beta_{}^{\\text{age:sex}} + \\beta_t^{\\text{time}} \\tag{2.1} \\end{align}\\] \\(y_{ast}\\) outcome people age group \\(\\) sex \\(s\\) period \\(t\\); \\(w_{ast}\\) exposure; \\(\\gamma_{ast}\\) rate; \\(\\xi\\) governs overall dispersion; \\(\\beta^{(0)}\\) intercept; \\(\\pmb{\\beta}^{\\text{age:sex}}\\) \\(\\pmb{\\beta}^{\\text{time}}\\) terms formed classifying variables age, sex, time; \\(\\beta_{}^{\\text{age:sex}}\\) \\(\\pmb{\\beta}_t^{\\text{time}}\\) elements terms; intercept terms formed classifying variables prior distributions. model covariates, (2.1) changes \\[\\begin{equation}   \\log \\mu_{ast} = \\beta^{(0)} + \\beta_{}^{\\text{age:sex}} + \\beta_t^{\\text{time}} + (\\pmb{Z} \\pmb{\\zeta})_{ast} \\end{equation}\\] \\(\\pmb{Z}\\) \\(N \\times P\\) covariate matrix; \\(\\pmb{\\zeta}\\) \\(P\\)-element vector coefficients; \\((\\pmb{Z} \\pmb{\\zeta})_{ast}\\) element vector obtained multiplying \\(\\pmb{Z}\\) \\(\\pmb{\\zeta}\\). Change (2.2) \\[\\begin{equation}   \\mu_i = \\sum_{m=0}^M \\beta_{j_i^m}^{(m)} + (\\pmb{Z} \\pmb{\\eta})_i \\tag{2.2} \\end{equation}\\] - \\(\\pmb{Z}\\) \\(\\times P\\) matrix covariates; - \\(\\pmb{\\eta}\\) vector coefficients. covariate matrix \\(\\pmb{Z}\\) derived raw covariate data scaling numeric variables mean 0 standard deviation 1, converting categorical variables sets indicator variables. conversion indicator variables follows rules R uses “treatment” contrasts. categorical \\(C\\) categories, \\(C-1\\) indicator variabls constructed, first category omitted. element \\(\\pmb{\\eta}\\) prior \\[\\begin{equation}   \\eta_p \\sim \\text{N}(0, 1) \\end{equation}\\]","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"example-births-in-south-korea","dir":"Articles","previous_headings":"","what":"Example: Births in South Korea","title":"9. Covariates","text":"illustrate use covariates, analyse data births South Korea.","code":""},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"preliminaries","dir":"Articles","previous_headings":"3 Example: Births in South Korea","what":"Preliminaries","title":"9. Covariates","text":"Besides bage , use dplyr vctrs data manipulation, ggplot2 plotting results. data data frame kor_births, part bage. data frame gives numbers births disaggregated age mother, region, year. also contains numeric variable called gdp_pc_2023 gives GDP per capita (thousands US dollars) 2023, categorical variable (levels \"Low\", \"Medium\", \"High\") describing population density 2020.","code":"suppressPackageStartupMessages({   library(bage)   library(dplyr)   library(ggplot2) }) kor_births #> # A tibble: 1,872 × 7 #>    age   region  time births  popn gdp_pc_2023 dens_2020 #>    <chr> <fct>  <int>  <int> <int>       <dbl> <chr>     #>  1 10-14 Busan   2011      1 89822        25.7 High      #>  2 10-14 Busan   2012      0 83884        25.7 High      #>  3 10-14 Busan   2013      0 79061        25.7 High      #>  4 10-14 Busan   2014      1 74741        25.7 High      #>  5 10-14 Busan   2015      0 68783        25.7 High      #>  6 10-14 Busan   2016      1 64905        25.7 High      #>  7 10-14 Busan   2017      1 64251        25.7 High      #>  8 10-14 Busan   2018      0 63249        25.7 High      #>  9 10-14 Busan   2019      0 62154        25.7 High      #> 10 10-14 Busan   2020      0 63498        25.7 High      #> # ℹ 1,862 more rows"},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"covariates-that-bring-in-extra-information","dir":"Articles","previous_headings":"3 Example: Births in South Korea","what":"Covariates that bring in extra information","title":"9. Covariates","text":"variables gdp_pc_2023 dens_2020 examples covariates contribute extra information model, beyond contained outcome, exposure, classifying variables. use function set_covariates() instruct mod_pois() treat variables covariates. obtain estimates coefficients (ie estimates \\(\\zeta_p\\)) call function components() filter rows \"covariates\" term.","code":"mod_gdp_dens <- mod_pois(births ~ (age + region + time)^2,                          data = kor_births,                          exposure = popn) |>   set_covariates(~ gdp_pc_2023 + dens_2020) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_gdp_dens #>  #>     ------ Fitted Poisson model ------ #>  #>    births ~ (age + region + time)^2 #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age     9          9    2.64 #>       region    N()     -    16         16    0.03 #>         time   RW()  time    13         13    0.20 #>   age:region   RW()   age   144        144    0.20 #>     age:time   RW()  time   117        117    1.20 #>  region:time   RW()  time   208        208    0.19 #>  #>  covariates: ~gdp_pc_2023 + dens_2020 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age optimizer #>    1000     time     age    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        3.22     1.41      1.00   26      TRUE   relative convergence (4) mod_gdp_dens |>   components() |>   filter(term == \"covariates\") #> # A tibble: 3 × 4 #>   term       component level                         .fitted #>   <chr>      <chr>     <chr>                    <rdbl<1000>> #> 1 covariates coef      gdp_pc_2023     -0.0029 (-0.67, 0.67) #> 2 covariates coef      dens_2020Low       -0.53 (-1.9, 0.85) #> 3 covariates coef      dens_2020Medium    -0.77 (-2.1, 0.55)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"covariates-that-allow-for-unusual-subsets","dir":"Articles","previous_headings":"3 Example: Births in South Korea","what":"Covariates that allow for unusual subsets","title":"9. Covariates","text":"East Asia, years Dragon zodiac sign sometimes larger--usual numbers births. allow possibility, create dragon-year covariate, incorporate new model. evidence extra births, though substantial uncertainty size effect. Next expand model allow dragon-year effect differ across age groups. create variable takes values \"baseline\" years, except dragon years, takes name age group. turn variable factor \"baseline\" first level. create new model age-sepcific dragon-year indicator. Rather single dragon-year coefficient, coefficient age group. extract tidy labels.","code":"births <- kor_births |>   mutate(is_dragon_year = time == 2012) mod_dragon <- mod_pois(births ~ (age + region + time)^2,                       data = births,                       exposure = popn) |>   set_covariates(~ is_dragon_year) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  mod_dragon |>   components() |>   filter(term == \"covariates\") #> # A tibble: 1 × 4 #>   term       component level                           .fitted #>   <chr>      <chr>     <chr>                      <rdbl<1000>> #> 1 covariates coef      is_dragon_yearTRUE 0.063 (-0.043, 0.17) births <- births |>   mutate(is_dragon_year_age = if_else(time == 2012, age, \"baseline\"),          is_dragon_year_age = factor(is_dragon_year_age,                                       levels = c(\"baseline\", unique(age)))) births |>   filter(time %in% 2011:2013) #> # A tibble: 432 × 9 #>    age   region           time births  popn gdp_pc_2023 dens_2020 is_dragon_year #>    <chr> <fct>           <int>  <int> <int>       <dbl> <chr>     <lgl>          #>  1 10-14 Busan            2011      1 89822        25.7 High      FALSE          #>  2 10-14 Busan            2012      0 83884        25.7 High      TRUE           #>  3 10-14 Busan            2013      0 79061        25.7 High      FALSE          #>  4 10-14 Chungcheongbuk…  2011      3 47811        40.3 Low       FALSE          #>  5 10-14 Chungcheongbuk…  2012      1 44864        40.3 Low       TRUE           #>  6 10-14 Chungcheongbuk…  2013      0 42259        40.3 Low       FALSE          #>  7 10-14 Chungcheongnam…  2011      0 62308        50.4 Low       FALSE          #>  8 10-14 Chungcheongnam…  2012      0 56746        50.4 Low       TRUE           #>  9 10-14 Chungcheongnam…  2013      0 54415        50.4 Low       FALSE          #> 10 10-14 Daegu            2011      3 75776        22.3 Medium    FALSE          #> # ℹ 422 more rows #> # ℹ 1 more variable: is_dragon_year_age <fct> mod_dragon_age <- mod_pois(births ~ (age + region + time)^2,                          data = births,                          exposure = popn) |>   set_covariates(~ is_dragon_year_age) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_dragon_age #>  #>     ------ Fitted Poisson model ------ #>  #>    births ~ (age + region + time)^2 #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age     9          9    2.64 #>       region    N()     -    16         16    0.02 #>         time   RW()  time    13         13    0.18 #>   age:region   RW()   age   144        144    0.17 #>     age:time   RW()  time   117        117    1.22 #>  region:time   RW()  time   208        208    0.14 #>  #>  covariates: ~is_dragon_year_age #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age optimizer #>    1000     time     age    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        2.16     1.10      0.94   24      TRUE   relative convergence (4) mod_dragon_age |>   components() |>   filter(term == \"covariates\") |>   mutate(age = sub(\"is_dragon_year_age\", \"\", level)) |>   select(age, .fitted) #> # A tibble: 9 × 2 #>   age                .fitted #>   <chr>         <rdbl<1000>> #> 1 10-14   0.31 (-0.14, 0.79) #> 2 15-19 0.0094 (-0.19, 0.18) #> 3 20-24  0.049 (-0.15, 0.23) #> 4 25-29   0.075 (-0.1, 0.27) #> 5 30-34 0.075 (-0.094, 0.26) #> 6 35-39  0.034 (-0.15, 0.21) #> 7 40-44  0.058 (-0.12, 0.24) #> 8 45-49   0.11 (-0.11, 0.33) #> 9 50-54    0.2 (-0.19, 0.55)"},{"path":"https://bayesiandemography.github.io/bage/articles/vig9_covariates.html","id":"forecasting","dir":"Articles","previous_headings":"3 Example: Births in South Korea","what":"Forecasting","title":"9. Covariates","text":"covariates model fixed, model can forecasted normal. , however, covariate varies time, forecasting works values future periods provided. following code result error: Instead need create newdata data frame… …supply forecast().","code":"mod_gdp_dens |>   forecast(labels = 2024:2025) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> # A tibble: 288 × 10 #>    age   region             time births  popn gdp_pc_2023 dens_2020 .observed #>    <chr> <fct>             <int>  <dbl> <int>       <dbl> <chr>         <dbl> #>  1 10-14 Busan              2024     NA    NA        25.7 High             NA #>  2 10-14 Busan              2025     NA    NA        25.7 High             NA #>  3 10-14 Chungcheongbuk-do  2024     NA    NA        40.3 Low              NA #>  4 10-14 Chungcheongbuk-do  2025     NA    NA        40.3 Low              NA #>  5 10-14 Chungcheongnam-do  2024     NA    NA        50.4 Low              NA #>  6 10-14 Chungcheongnam-do  2025     NA    NA        50.4 Low              NA #>  7 10-14 Daegu              2024     NA    NA        22.3 Medium           NA #>  8 10-14 Daegu              2025     NA    NA        22.3 Medium           NA #>  9 10-14 Daejeon            2024     NA    NA        27.6 Medium           NA #> 10 10-14 Daejeon            2025     NA    NA        27.6 Medium           NA #> # ℹ 278 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>> mod_dragon |>   forecast(labels = 2024:2025) newdata <- expand.grid(age = unique(kor_births$age),                        region = unique(kor_births$region),                        time = 2024:2025) |>   mutate(is_dragon_year = FALSE) head(newdata) #>     age region time is_dragon_year #> 1 10-14  Busan 2024          FALSE #> 2 15-19  Busan 2024          FALSE #> 3 20-24  Busan 2024          FALSE #> 4 25-29  Busan 2024          FALSE #> 5 30-34  Busan 2024          FALSE #> 6 35-39  Busan 2024          FALSE mod_dragon |>   forecast(newdata = newdata) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> # A tibble: 288 × 11 #>    age   region           time births  popn gdp_pc_2023 dens_2020 is_dragon_year #>    <chr> <fct>           <int>  <dbl> <int>       <dbl> <chr>     <lgl>          #>  1 10-14 Busan            2024     NA    NA          NA NA        FALSE          #>  2 15-19 Busan            2024     NA    NA          NA NA        FALSE          #>  3 20-24 Busan            2024     NA    NA          NA NA        FALSE          #>  4 25-29 Busan            2024     NA    NA          NA NA        FALSE          #>  5 30-34 Busan            2024     NA    NA          NA NA        FALSE          #>  6 35-39 Busan            2024     NA    NA          NA NA        FALSE          #>  7 40-44 Busan            2024     NA    NA          NA NA        FALSE          #>  8 45-49 Busan            2024     NA    NA          NA NA        FALSE          #>  9 50-54 Busan            2024     NA    NA          NA NA        FALSE          #> 10 10-14 Chungcheongbuk…  2024     NA    NA          NA NA        FALSE          #> # ℹ 278 more rows #> # ℹ 3 more variables: .observed <dbl>, .fitted <rdbl<1000>>, #> #   .expected <rdbl<1000>>"},{"path":"https://bayesiandemography.github.io/bage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Bryant. Author, maintainer. Junni Zhang. Author. Bayesian Demography Limited. Copyright holder.","code":""},{"path":"https://bayesiandemography.github.io/bage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryant J, Zhang J (2025). bage: Bayesian Estimation Forecasting Age-Specific Rates. R package version 0.9.4, https://bayesiandemography.github.io/bage/.","code":"@Manual{,   title = {bage: Bayesian Estimation and Forecasting of Age-Specific Rates},   author = {John Bryant and Junni Zhang},   year = {2025},   note = {R package version 0.9.4},   url = {https://bayesiandemography.github.io/bage/}, }"},{"path":"https://bayesiandemography.github.io/bage/index.html","id":"bage-","dir":"","previous_headings":"","what":"Bayesian Estimation and Forecasting of Age-Specific Rates","title":"Bayesian Estimation and Forecasting of Age-Specific Rates","text":"Fast Bayesian estimation forecasting age-specific rates.","code":""},{"path":"https://bayesiandemography.github.io/bage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Estimation and Forecasting of Age-Specific Rates","text":"","code":"install.packages(\"bage\")"},{"path":"https://bayesiandemography.github.io/bage/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Bayesian Estimation and Forecasting of Age-Specific Rates","text":"Fit Poisson model data injuries Extract model-based direct estimates","code":"library(bage) mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn) |>   fit() mod #>  #>     ------ Fitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>    ethnicity NFix()     -     2          2    0.45 #>         year   RW()  year    19         19    0.09 #>      age:sex   RW()   age    24         24    0.88 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     year     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        1.68     0.69      0.55   11      TRUE   relative convergence (4) augment(mod) #> # A tibble: 912 × 9 #>    age   sex    ethnicity  year injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <int> <int>     <dbl> #>  1 0-4   Female Maori      2000       12 35830 0.000335  #>  2 5-9   Female Maori      2000        6 35120 0.000171  #>  3 10-14 Female Maori      2000        3 32830 0.0000914 #>  4 15-19 Female Maori      2000        6 27130 0.000221  #>  5 20-24 Female Maori      2000        6 24380 0.000246  #>  6 25-29 Female Maori      2000        6 24160 0.000248  #>  7 30-34 Female Maori      2000       12 22560 0.000532  #>  8 35-39 Female Maori      2000        3 22230 0.000135  #>  9 40-44 Female Maori      2000        6 18130 0.000331  #> 10 45-49 Female Maori      2000        6 13770 0.000436  #> # ℹ 902 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>"},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoregressive Prior — AR","title":"Autoregressive Prior — AR","text":"Use autoregressive process model main effect, use multiple autoregressive processes model interaction. Typically used time effects interactions involve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoregressive Prior — AR","text":"","code":"AR(   n_coef = 2,   s = 1,   shape1 = 5,   shape2 = 5,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoregressive Prior — AR","text":"n_coef Number lagged terms model, ie order model. Default 2. s Scale prior innovations. Default 1. shape1, shape2 Parameters beta-distribution prior coefficients. Defaults 5 5. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autoregressive Prior — AR","text":"object class \"bage_prior_ar\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Autoregressive Prior — AR","text":"AR() used interaction, separate AR processes constructed along 'along' variable, within combination '' variables. default, autoregressive processes order 2. Alternative choices can specified n_coef argument. Argument s controls size innovations. Smaller values s tend give smoother estimates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Autoregressive Prior — AR","text":"AR() used main effect, $$\\beta_j = \\phi_1 \\beta_{j-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\beta_{j-\\mathtt{n\\_coef}} + \\epsilon_j$$ $$\\epsilon_j \\sim \\text{N}(0, \\omega^2),$$ used interaction, $$\\beta_{u,v} = \\phi_1 \\beta_{u,v-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\beta_{u,v-\\mathtt{n\\_coef}} + \\epsilon_{u,v}$$ $$\\epsilon_{u,v} \\sim \\text{N}(0, \\omega^2),$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Internally, AR() derives value \\(\\omega\\) gives every element \\(\\beta\\) marginal variance \\(\\tau^2\\). Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2).$$ correlation coefficients \\(\\phi_1, \\cdots, \\phi_{\\mathtt{n\\_coef}}\\) prior $$\\phi_k \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Autoregressive Prior — AR","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Autoregressive Prior — AR","text":"AR() based TMB function ARk","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/AR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autoregressive Prior — AR","text":"","code":"AR(n_coef = 3) #>   AR(n_coef=3)  #>     n_coef: 3 #>        min: -1 #>        max: 1 #>          s: 1 #>      along: NULL #>        con: none AR(n_coef = 3, s = 2.4) #>   AR(n_coef=3,s=2.4)  #>     n_coef: 3 #>        min: -1 #>        max: 1 #>          s: 2.4 #>      along: NULL #>        con: none AR(along = \"cohort\") #>   AR(along=\"cohort\")  #>     n_coef: 2 #>        min: -1 #>        max: 1 #>          s: 1 #>      along: cohort #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoregressive Prior of Order 1 — AR1","title":"Autoregressive Prior of Order 1 — AR1","text":"Use autoregressive process order 1 model main effect, use multiple AR1 processes model interaction. Typically used time effects interactions involve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoregressive Prior of Order 1 — AR1","text":"","code":"AR1(   s = 1,   shape1 = 5,   shape2 = 5,   min = 0.8,   max = 0.98,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoregressive Prior of Order 1 — AR1","text":"s Scale prior innovations. Default 1. shape1, shape2 Parameters beta-distribution prior coefficients. Defaults 5 5. min, max Minimum maximum values autocorrelation coefficient. Defaults 0.8 0.98. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autoregressive Prior of Order 1 — AR1","text":"object class \"bage_prior_ar\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Autoregressive Prior of Order 1 — AR1","text":"AR() used interaction, separate AR processes constructed along 'along' variable, within combination '' variables. Arguments min max can used specify permissible range autocorrelation. Argument s controls size innovations. Smaller values s tend give smoother estimates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Autoregressive Prior of Order 1 — AR1","text":"AR1() used main effect, $$\\beta_j = \\phi \\beta_{j-1} + \\epsilon_j$$ $$\\epsilon_j \\sim \\text{N}(0, \\omega^2),$$ used interaction, $$\\beta_{u,v} = \\phi \\beta_{u,v-1} + \\epsilon_{u,v}$$ $$\\epsilon_{u,v} \\sim \\text{N}(0, \\omega^2),$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Internally, AR1() derives value \\(\\omega\\) gives every element \\(\\beta\\) marginal variance \\(\\tau^2\\). Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2),$$ s provided user. Coefficient \\(\\phi\\) constrained lie min max. prior distribution $$\\phi = (\\mathtt{max} - \\mathtt{min}) \\phi' - \\mathtt{min}$$ $$\\phi' \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Autoregressive Prior of Order 1 — AR1","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Autoregressive Prior of Order 1 — AR1","text":"AR1() based TMB function AR1 defaults min max based defaults forecast::ets().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/AR1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autoregressive Prior of Order 1 — AR1","text":"","code":"AR1() #>   AR1()  #>        min: 0.8 #>        max: 0.98 #>          s: 1 #>      along: NULL #>        con: none AR1(min = 0, max = 1, s = 2.4) #>   AR1(s=2.4,min=0,max=1)  #>        min: 0 #>        max: 1 #>          s: 2.4 #>      along: NULL #>        con: none AR1(along = \"cohort\") #>   AR1(along=\"cohort\")  #>        min: 0.8 #>        max: 0.98 #>          s: 1 #>      along: cohort #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/HFD.html","id":null,"dir":"Reference","previous_headings":"","what":"Components from Human Fertility Database — HFD","title":"Components from Human Fertility Database — HFD","text":"object class \"bage_ssvd\" holding components extracted mortality data Human Fertility Database. object holds 5 components.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/HFD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components from Human Fertility Database — HFD","text":"","code":"HFD"},{"path":"https://bayesiandemography.github.io/bage/reference/HFD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Components from Human Fertility Database — HFD","text":"Object class \"bage_ssvd\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/HFD.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Components from Human Fertility Database — HFD","text":"Derived data Human Fertility Database.Max Planck Institute Demographic Research (Germany) Vienna Institute Demography (Austria). . Code create HFD folder 'data-raw/ssvd_hfd' source code bage package.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/HMD.html","id":null,"dir":"Reference","previous_headings":"","what":"Components from Human Mortality Database — HMD","title":"Components from Human Mortality Database — HMD","text":"object class \"bage_ssvd\" holding components extracted mortality data Human Mortality Database. object holds 5 components.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/HMD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components from Human Mortality Database — HMD","text":"","code":"HMD"},{"path":"https://bayesiandemography.github.io/bage/reference/HMD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Components from Human Mortality Database — HMD","text":"Object class \"bage_ssvd\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/HMD.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Components from Human Mortality Database — HMD","text":"Derived data Human Mortality Database. Max Planck Institute Demographic Research (Germany), University California, Berkeley (USA), French Institute Demographic Studies (France). Code create HMD folder 'data-raw/ssvd_hmd' source code bage package.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Known.html","id":null,"dir":"Reference","previous_headings":"","what":"Known Prior — Known","title":"Known Prior — Known","text":"Treat intercept, main effect, interaction fixed known.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Known.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Known Prior — Known","text":"","code":"Known(values)"},{"path":"https://bayesiandemography.github.io/bage/reference/Known.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Known Prior — Known","text":"values numeric vector","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Known.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Known Prior — Known","text":"object class \"bage_prior_known\".","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/Known.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Known Prior — Known","text":"","code":"Known(-2.3) #> Known(-2.3)  Known(c(0.1, 2, -0.11)) #> Known(c(0.1,2,-0.11))"},{"path":"https://bayesiandemography.github.io/bage/reference/LFP.html","id":null,"dir":"Reference","previous_headings":"","what":"Components from OECD Labor Force Participation Data — LFP","title":"Components from OECD Labor Force Participation Data — LFP","text":"object class \"bage_ssvd\" holding components extracted labor force participation data OECD Data Explorer.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/LFP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components from OECD Labor Force Participation Data — LFP","text":"","code":"LFP"},{"path":"https://bayesiandemography.github.io/bage/reference/LFP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Components from OECD Labor Force Participation Data — LFP","text":"Object class \"bage_ssvd\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/LFP.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Components from OECD Labor Force Participation Data — LFP","text":"Derived data \"Labor Force Indicators\" table OECD Data Explorer. Code create LFS folder 'data-raw/ssvd_lfp' source code bage package.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Prior with Independent Normal Errors — Lin","title":"Linear Prior with Independent Normal Errors — Lin","text":"Use line lines independent normal errors model main effect interaction. Typically used time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Prior with Independent Normal Errors — Lin","text":"","code":"Lin(s = 1, mean_slope = 0, sd_slope = 1, along = NULL, con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Prior with Independent Normal Errors — Lin","text":"s Scale prior errors. Default 1. Can 0. mean_slope Mean prior slope line. Default 0. sd_slope Standard deviation prior slope line. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Prior with Independent Normal Errors — Lin","text":"object class \"bage_prior_lin\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Prior with Independent Normal Errors — Lin","text":"Lin() used interaction, separate lines constructed along 'along' variable, within combination '' variables. Argument s controls size errors. Smaller values tend give smoother estimates. s can zero. Argument sd_slope controls size slopes lines. Larger values can give steeply sloped lines.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Linear Prior with Independent Normal Errors — Lin","text":"Lin() used main effect, $$\\beta_j = \\alpha + j \\eta + \\epsilon_j$$ $$\\alpha \\sim \\text{N}(0, 1)$$ $$\\epsilon_j \\sim \\text{N}(0, \\tau^2),$$ used interaction, $$\\beta_{u,v} \\sim  \\alpha_u + v \\eta_u + \\epsilon_{u,v}$$ $$\\alpha_u \\sim \\text{N}(0, 1)$$ $$\\epsilon_{u,v} \\sim \\text{N}(0, \\tau^2),$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. slopes priors $$\\eta \\sim \\text{N}(\\mathtt{mean_slope}, \\mathtt{sd_slope}^2)$$ $$\\eta_u \\sim \\text{N}(\\mathtt{mean_slope}, \\mathtt{sd_slope}^2).$$ Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Linear Prior with Independent Normal Errors — Lin","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/Lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Prior with Independent Normal Errors — Lin","text":"","code":"Lin() #>   Lin()  #>          s: 1 #> mean_slope: 0 #>   sd_slope: 1 #>      along: NULL #>        con: none Lin(s = 0.5, sd_slope = 2) #>   Lin(s=0.5,sd_slope=2)  #>          s: 0.5 #> mean_slope: 0 #>   sd_slope: 2 #>      along: NULL #>        con: none Lin(s = 0) #>   Lin(s=0)  #>          s: 0 #> mean_slope: 0 #>   sd_slope: 1 #>      along: NULL #>        con: none Lin(along = \"cohort\") #>   Lin(along=\"cohort\")  #>          s: 1 #> mean_slope: 0 #>   sd_slope: 1 #>      along: cohort #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Prior with Autoregressive Errors — Lin_AR","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"Use line lines autoregressive errors model main effect interaction. Typically used time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"","code":"Lin_AR(   n_coef = 2,   s = 1,   shape1 = 5,   shape2 = 5,   mean_slope = 0,   sd_slope = 1,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"n_coef Number lagged terms model, ie order model. Default 2. s Scale innovations AR process. Default 1. shape1, shape2 Parameters beta-distribution prior coefficients. Defaults 5 5. mean_slope Mean prior slope line. Default 0. sd_slope Standard deviation prior slope line. Larger values imply steeper slopes. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"object class \"bage_prior_linar\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"Lin_AR() used interaction, separate lines constructed along 'along' variable, within combination '' variables. order autoregressive errors controlled n_coef argument. default 2. Argument s controls size innovations. Smaller values tend give smoother estimates. Argument sd_slope controls slopes lines. Larger values can give steeply sloped lines.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"Lin_AR() used main effect, $$\\beta_1 = \\alpha + \\epsilon_1$$ $$\\beta_j = \\alpha + (j - 1) \\eta + \\epsilon_j, \\quad j > 1$$ $$\\alpha \\sim \\text{N}(0, 1)$$ $$\\epsilon_j = \\phi_1 \\epsilon_{j-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\epsilon_{j-\\mathtt{n\\_coef}} + \\varepsilon_j$$ $$\\varepsilon_j \\sim \\text{N}(0, \\omega^2),$$ used interaction, $$\\beta_{u,1} = \\alpha_u + \\epsilon_{u,1}$$ $$\\beta_{u,v} = \\eta (v - 1) + \\epsilon_{u,v}, \\quad v = 2, \\cdots, V$$ $$\\alpha_u \\sim \\text{N}(0, 1)$$ $$\\epsilon_{u,v} = \\phi_1 \\epsilon_{u,v-1} + \\cdots + \\phi_{\\mathtt{n\\_coef}} \\epsilon_{u,v-\\mathtt{n\\_coef}} + \\varepsilon_{u,v},$$ $$\\varepsilon_{u,v} \\sim \\text{N}(0, \\omega^2).$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(u\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. slopes priors $$\\eta \\sim \\text{N}(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2)$$ $$\\eta_u \\sim \\text{N}(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2).$$ Internally, Lin_AR() derives value \\(\\omega\\) gives \\(\\epsilon_j\\) \\(\\epsilon_{u,v}\\) marginal variance \\(\\tau^2\\). Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2).$$ correlation coefficients \\(\\phi_1, \\cdots, \\phi_{\\mathtt{n\\_coef}}\\) prior $$0.5 \\phi_k - 0.5 \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Prior with Autoregressive Errors — Lin_AR","text":"","code":"Lin_AR() #>   Lin_AR()  #>     n_coef: 2 #>          s: 1 #> mean_slope: 0 #>   sd_slope: 1 #>        min: -1 #>        max: 1 #>      along: NULL #>        con: none Lin_AR(n_coef = 3, s = 0.5, sd_slope = 2) #>   Lin_AR(n_coef=3,s=0.5,sd_slope=2)  #>     n_coef: 3 #>          s: 0.5 #> mean_slope: 0 #>   sd_slope: 2 #>        min: -1 #>        max: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"Use line lines AR1 errors model main effect interaction. Typically used time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"","code":"Lin_AR1(   s = 1,   shape1 = 5,   shape2 = 5,   min = 0.8,   max = 0.98,   mean_slope = 0,   sd_slope = 1,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"s Scale innovations AR process. Default 1. shape1, shape2 Parameters beta-distribution prior coefficients. Defaults 5 5. min, max Minimum maximum values autocorrelation coefficient. Defaults 0.8 0.98. mean_slope Mean prior slope line. Default 0. sd_slope Standard deviation prior slope line. Larger values imply steeper slopes. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"object class \"bage_prior_linar\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"Lin_AR1() used interaction, separate lines constructed along 'along' variable, within combination '' variables. Arguments min max can used specify permissible range autocorrelation. Argument s controls size innovations. Smaller values tend give smoother estimates. Argument sd_slope controls slopes lines. Larger values can give steeply sloped lines.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"Lin_AR1() used main effect, $$\\beta_1 = \\alpha + \\epsilon_1$$ $$\\beta_j = \\alpha + (j - 1) \\eta + \\epsilon_j, \\quad j > 1$$ $$\\alpha \\sim \\text{N}(0, 1)$$ $$\\epsilon_j = \\phi \\epsilon_{j-1} + \\varepsilon_j$$ $$\\varepsilon \\sim \\text{N}(0, \\omega^2),$$ used interaction, $$\\beta_{u,1} = \\alpha_u + \\epsilon_{u,1}$$ $$\\beta_{u,v} = \\eta (v - 1) + \\epsilon_{u,v}, \\quad v = 2, \\cdots, V$$ $$\\alpha_u \\sim \\text{N}(0, 1)$$ $$\\epsilon_{u,v} = \\phi \\epsilon_{u,v-1} + \\varepsilon_{u,v},$$ $$\\varepsilon_{u,v} \\sim \\text{N}(0, \\omega^2).$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(u\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. slopes priors $$\\eta \\sim \\text{N}(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2)$$ $$\\eta_u \\sim \\text{N}(\\mathtt{mean\\_slope}, \\mathtt{sd\\_slope}^2).$$ Internally, Lin_AR1() derives value \\(\\omega\\) gives \\(\\epsilon_j\\) \\(\\epsilon_{u,v}\\) marginal variance \\(\\tau^2\\). Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2),$$ value s provided user. Coefficient \\(\\phi\\) constrained lie min max. prior distribution $$\\phi = (\\mathtt{max} - \\mathtt{min}) \\phi' - \\mathtt{min}$$ $$\\phi' \\sim \\text{Beta}(\\mathtt{shape1}, \\mathtt{shape2}).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"defaults min max based defaults forecast::ets().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/Lin_AR1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Prior with Autoregressive Errors of Order 1 — Lin_AR1","text":"","code":"Lin_AR1() #>   Lin_AR1()  #>          s: 1 #> mean_slope: 0 #>   sd_slope: 1 #>        min: 0.8 #>        max: 0.98 #>      along: NULL #>        con: none Lin_AR1(min = 0, s = 0.5, sd_slope = 2) #>   Lin_AR1(s=0.5,min=0,sd_slope=2)  #>          s: 0.5 #> mean_slope: 0 #>   sd_slope: 2 #>        min: 0 #>        max: 0.98 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Prior — N","title":"Normal Prior — N","text":"Use independent draws normal distribution model main effect interaction. Typically used variables age time, region ethnicity, natural ordering.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Prior — N","text":"","code":"N(s = 1)"},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal Prior — N","text":"s Scale standard deviation. Default 1.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normal Prior — N","text":"object class \"bage_prior_norm\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normal Prior — N","text":"Argument s controls size errors. Smaller values s tend give tightly clustered estimates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Normal Prior — N","text":"$$\\beta_j \\sim \\text{N}(0, \\tau^2)$$ \\(\\beta\\) main effect interaction. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2),$$ s provided user.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/N.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal Prior — N","text":"","code":"N() #>   N()  #>          s: 1 N(s = 0.5) #>   N(s=0.5)  #>          s: 0.5"},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":null,"dir":"Reference","previous_headings":"","what":"Normal Prior with Fixed Variance — NFix","title":"Normal Prior with Fixed Variance — NFix","text":"Normal prior , contrast N(), variance treated fixed known. Typically used main effects interactions elements reliably estimate variance available data.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normal Prior with Fixed Variance — NFix","text":"","code":"NFix(sd = 1)"},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normal Prior with Fixed Variance — NFix","text":"sd Standard deviation. Default 1.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normal Prior with Fixed Variance — NFix","text":"object class \"bage_prior_normfixed\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normal Prior with Fixed Variance — NFix","text":"NFix() default prior intercept.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Normal Prior with Fixed Variance — NFix","text":"$$\\beta_j \\sim \\text{N}(0, \\tau^2)$$ \\(\\beta\\) main effect interaction, value sd supplied user.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/NFix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normal Prior with Fixed Variance — NFix","text":"","code":"NFix() #>   NFix()  #>         sd: 1 NFix(sd = 10) #>   NFix(sd=10)  #>         sd: 10"},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Walk Prior — RW","title":"Random Walk Prior — RW","text":"Use random walk model main effect, use multiple random walks model interaction. Typically used terms involve age time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Walk Prior — RW","text":"","code":"RW(s = 1, sd = 1, along = NULL, con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Walk Prior — RW","text":"s Scale prior innovations. Default 1. sd Standard deviation initial value. Default 1. Can 0. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Walk Prior — RW","text":"object class \"bage_prior_rwrandom\" \"bage_prior_rwzero\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Walk Prior — RW","text":"RW2() used interaction, separate random walk constructed within combination '' variables. Argument s controls size innovations. Smaller values s tend produce smoother series. Argument sd controls variance initial values. Setting sd 0 fixes initial values 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Random Walk Prior — RW","text":"RW() used main effect, $$\\beta_1 \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\beta_j \\sim \\text{N}(\\beta_{j-1}, \\tau^2), \\quad j > 1$$ used interaction, $$\\beta_{u,1} \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\beta_{u,v} \\sim \\text{N}(\\beta_{u,v-1}, \\tau^2), \\quad v > 1$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2),$$ s provided user.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Random Walk Prior — RW","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/RW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Walk Prior — RW","text":"","code":"RW() #>   RW()  #>          s: 1 #>         sd: 1 #>      along: NULL #>        con: none RW(s = 0.5) #>   RW(s=0.5)  #>          s: 0.5 #>         sd: 1 #>      along: NULL #>        con: none RW(sd = 0) #>   RW(sd=0)  #>          s: 1 #>         sd: 0 #>      along: NULL #>        con: none RW(along = \"cohort\") #>   RW(along=\"cohort\")  #>          s: 1 #>         sd: 1 #>      along: cohort #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-Order Random Walk Prior — RW2","title":"Second-Order Random Walk Prior — RW2","text":"Use second-order random walk model main effect, use multiple second-order random walks model interaction. second-order random walk random walk drift drift term varies. typically used terms involve age time, sustained trends upward downward.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-Order Random Walk Prior — RW2","text":"","code":"RW2(s = 1, sd = 1, sd_slope = 1, along = NULL, con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-Order Random Walk Prior — RW2","text":"s Scale prior innovations. Default 1. sd Standard deviation initial value. Default 1. Can 0. sd_slope Standard deviation initial slope. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-Order Random Walk Prior — RW2","text":"object class \"bage_prior_rw2random\" \"bage_prior_rw2zero\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-Order Random Walk Prior — RW2","text":"RW2() used interaction, separate random walk constructed within combination '' variables. Argument s controls size innovations. Smaller values s tend give smoother series. Argument sd controls variance initial values. Setting sd 0 fixes initial values 0. Argument sd_slope controls variance initial slope.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Second-Order Random Walk Prior — RW2","text":"RW2() used main effect, $$\\beta_1 \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\beta_2 \\sim \\text{N}(\\beta_1, \\mathtt{sd\\_slope}^2)$$ $$\\beta_j \\sim \\text{N}(2 \\beta_{j-1} - \\beta_{j-2}, \\tau^2), \\quad j = 2, \\cdots, J$$ used interaction, $$\\beta_{u,1} \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\beta_{u,2} \\sim \\text{N}(\\beta_{u,1}, \\mathtt{sd\\_slope}^2)$$ $$\\beta_{u,v} \\sim \\text{N}(2\\beta_{u,v-1} - \\beta_{u,v-2}, \\tau^2), \\quad v = 3, \\cdots, V$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2)$$.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Second-Order Random Walk Prior — RW2","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/RW2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second-Order Random Walk Prior — RW2","text":"","code":"RW2() #>   RW2()  #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>      along: NULL #>        con: none RW2(s = 0.5) #>   RW2(s=0.5)  #>          s: 0.5 #>         sd: 1 #>   sd_slope: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"Use second-order random walk model variation age, indicator variable first age group. Designed use models mortality rates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"","code":"RW2_Infant(s = 1, sd_slope = 1, con = c(\"none\", \"by\"))"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"s Scale prior innovations. Default 1. sd_slope Standard deviation initial slope random walk. Default 1. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"Object class \"bage_prior_rw2infant\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"second-order random walk prior RW2() works well smoothing mortality rates age, except age 0, sudden jump rates, reflecting special risks infancy. RW2_Infant() extends RW2() prior adding indicator variable first age group. RW2_Infant() used interaction, 'along' dimension always age, implying separate random walk along age within combination '' variables. Argument s controls size innovations random walk. Smaller values s tend give smoother series. Argument sd controls sl size innovations random walk. Smaller values s tend give smoother series.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"RW2_Infant() used main effect, $$\\beta_1 \\sim \\text{N}(0, 1)$$ $$\\beta_2 \\sim \\text{N}(0, \\mathtt{sd\\_slope}^2)$$ $$\\beta_3 \\sim \\text{N}(2 \\beta_2, \\tau^2)$$ $$\\beta_j \\sim \\text{N}(2 \\beta_{j-1} - \\beta_{j-2}, \\tau^2), \\quad j = 3, \\cdots, J$$ used interaction, $$\\beta_{u,1} \\sim \\text{N}(0, 1)$$ $$\\beta_{u,2} \\sim \\text{N}(0, \\mathtt{sd\\_slope}^2)$$ $$\\beta_{u,3} \\sim \\text{N}(2 \\beta_{u,2}, \\tau^2)$$ $$\\beta_{u,v} \\sim \\text{N}(2 \\beta_{u,v-1} - \\beta_{u,v-2}, \\tau^2), \\quad v = 3, \\cdots, V$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2)$$.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Infant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second-Order Random Walk Prior with 'Infant' Indicator — RW2_Infant","text":"","code":"RW2_Infant() #>   RW2_Infant()  #>          s: 1 #>   sd_slope: 1 #>        con: none RW2_Infant(s = 0.1) #>   RW2_Infant(s=0.1)  #>          s: 0.1 #>   sd_slope: 1 #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":null,"dir":"Reference","previous_headings":"","what":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"Use second-oder random walk seasonal effects model main effect, use multiple second-order random walks, seasonal effects, model interaction. Typically used temrs involve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"","code":"RW2_Seas(   n_seas,   s = 1,   sd = 1,   sd_slope = 1,   s_seas = 0,   sd_seas = 1,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"n_seas Number seasons s Scale prior innovations random walk. Default 1. sd Standard deviation initial value. Default 1. Can 0. sd_slope Standard deviation initial slope random walk. Default 1. s_seas Scale innovations seasonal effects. Default 0. sd_seas Standard deviation initial values seasonal effects. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"Object class \"bage_prior_rw2randomseasvary\", \"bage_prior_rw2randomseasfix\", \"bage_prior_rw2zeroseasvary\", \"bage_prior_rw2zeroseasfix\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"RW2_Seas() used interaction, separate series constructed within combination '' variables. Argument s controls size innovations random walk. Smaller values s tend produce smoother series. Argument n_seas controls number seasons. using quarterly data, instance, n_seas 4. default, magnitude seasonal effects fixed. However, setting s_seas value greater zero produces seasonal effects evolve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"RW2_Seas() used main effect, $$\\beta_j = \\alpha_j + \\lambda_j, \\quad j = 1, \\cdots, J$$ $$\\alpha_1 \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\alpha_2 \\sim \\text{N}(0, \\mathtt{sd\\_slope}^2)$$ $$\\alpha_j \\sim \\text{N}(2 \\alpha_{j-1} - \\alpha_{j-2}, \\tau^2), \\quad j = 3, \\cdots, J$$ $$\\lambda_j \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad j = 1, \\cdots, \\mathtt{n\\_seas} - 1$$ $$\\lambda_j = -\\sum_{s=1}^{\\mathtt{n\\_seas} - 1} \\lambda_{j - s}, \\quad j = \\mathtt{n\\_seas}, 2 \\mathtt{n\\_seas}, \\cdots$$ $$\\lambda_j \\sim \\text{N}(\\lambda_{j-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise},$$ used interaction, $$\\beta_{u,v} = \\alpha_{u,v} + \\lambda_{u,v}, \\quad v = 1, \\cdots, V$$ $$\\alpha_{u,1} \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\alpha_{u,2} \\sim \\text{N}(0, \\mathtt{sd\\_slope}^2)$$ $$\\alpha_{u,v} \\sim \\text{N}(2 \\alpha_{u,v-1} - \\alpha_{u,v-2}, \\tau^2), \\quad v = 3, \\cdots, V$$ $$\\lambda_{u,v} \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad v = 1, \\cdots, \\mathtt{n\\_seas} - 1$$ $$\\lambda_{u,v} = -\\sum_{s=1}^{\\mathtt{n\\_seas} - 1} \\lambda_{u,v - s}, \\quad v = \\mathtt{n\\_seas}, 2 \\mathtt{n\\_seas}, \\cdots$$ $$\\lambda_{u,v} \\sim \\text{N}(\\lambda_{u,v-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise},$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(\\alpha_j\\) \\(\\alpha_{u,v}\\) element random walk; \\(\\lambda_j\\) \\(\\lambda_{u,v}\\) element seasonal effect; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Parameter \\(\\omega\\) half-normal prior $$\\omega \\sim \\text{N}^+(0, \\mathtt{s\\_seas}^2)$$. s_seas set 0, \\(\\omega\\) 0, seasonal effects fixed time. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2)$$.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/RW2_Seas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second-Order Random Walk Prior with Seasonal Effect — RW2_Seas","text":"","code":"RW2_Seas(n_seas = 4)               ## seasonal effects fixed #>   RW2_Seas(n_seas=4)  #>     n_seas: 4 #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>     s_seas: 0 #>    sd_seas: 1 #>      along: NULL #>        con: none RW2_Seas(n_seas = 4, s_seas = 0.5) ## seasonal effects evolve #>   RW2_Seas(n_seas=4,s_seas=0.5)  #>     n_seas: 4 #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>     s_seas: 0.5 #>    sd_seas: 1 #>      along: NULL #>        con: none RW2_Seas(n_seas = 4, sd = 0)       ## first term in random walk fixed at 0 #>   RW2_Seas(n_seas=4,sd=0)  #>     n_seas: 4 #>          s: 1 #>         sd: 0 #>   sd_slope: 1 #>     s_seas: NULL #>    sd_seas: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Walk Prior with Seasonal Effect — RW_Seas","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"Use random walk seasonal effects model main effect, use multiple random walks, seasonal effects, model interaction. Typically used terms involve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"","code":"RW_Seas(   n_seas,   s = 1,   sd = 1,   s_seas = 0,   sd_seas = 1,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"n_seas Number seasons s Scale prior innovations random walk. Default 1. sd Standard deviation initial value. Default 1. Can 0. s_seas Scale innovations seasonal effects. Default 0. sd_seas Standard deviation initial values seasonal effects. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"Object class \"bage_prior_rwrandomseasvary\", \"bage_prior_rwrandomseasfix\", \"bage_prior_rwzeroseasvary\", \"bage_prior_rwzeroseasfix\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"RW_Seas() used interaction, separate series constructed within combination '' variables. Argument s controls size innovations random walk. Smaller values s tend produce smoother series. Argument sd controls variance initial values random walk. sd can 0. Argument n_seas controls number seasons. using quarterly data, instance, n_seas 4. default, magnitude seasonal effects fixed. However, setting s_seas value greater zero produces seasonal effects evolve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"RW_Seas() used main effect, $$\\beta_j = \\alpha_j + \\lambda_j, \\quad j = 1, \\cdots, J$$ $$\\alpha_1 \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\alpha_j \\sim \\text{N}(\\alpha_{j-1}, \\tau^2), \\quad j = 2, \\cdots, J$$ $$\\lambda_j \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad j = 1, \\cdots, \\mathtt{n\\_seas} - 1$$ $$\\lambda_j = -\\sum_{s=1}^{\\mathtt{n\\_seas} - 1} \\lambda_{j - s}, \\quad j = \\mathtt{n\\_seas}, 2 \\mathtt{n\\_seas}, \\cdots$$ $$\\lambda_j \\sim \\text{N}(\\lambda_{j-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise},$$ used interaction, $$\\beta_{u,v} = \\alpha_{u,v} + \\lambda_{u,v}, \\quad v = 1, \\cdots, V$$ $$\\alpha_{u,1} \\sim \\text{N}(0, \\mathtt{sd}^2)$$ $$\\alpha_{u,v} \\sim \\text{N}(\\alpha_{u,v-1}, \\tau^2), \\quad v = 2, \\cdots, V$$ $$\\lambda_{u,v} \\sim \\text{N}(0, \\mathtt{sd\\_seas}^2), \\quad v = 1, \\cdots, \\mathtt{n\\_seas} - 1$$ $$\\lambda_{u,v} = -\\sum_{s=1}^{\\mathtt{n\\_seas} - 1} \\lambda_{u,v - s}, \\quad v = \\mathtt{n\\_seas}, 2 \\mathtt{n\\_seas}, \\cdots$$ $$\\lambda_{u,v} \\sim \\text{N}(\\lambda_{u,v-\\mathtt{n\\_seas}}, \\omega^2), \\quad \\text{otherwise},$$ \\(\\pmb{\\beta}\\) main effect interaction; \\(\\alpha_j\\) \\(\\alpha_{u,v}\\) element random walk; \\(\\lambda_j\\) \\(\\lambda_{u,v}\\) element seasonal effect; \\(j\\) denotes position within main effect; \\(v\\) denotes position within 'along' variable interaction; \\(u\\) denotes position within '' variable(s) interaction. Parameter \\(\\omega\\) half-normal prior $$\\omega \\sim \\text{N}^+(0, \\mathtt{s\\_seas}^2).$$ s_seas set 0, \\(\\omega\\) 0, seasonal effects time-invariant. Parameter \\(\\tau\\) half-normal prior $$\\tau \\sim \\text{N}^+(0, \\mathtt{s}^2).$$","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/RW_Seas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random Walk Prior with Seasonal Effect — RW_Seas","text":"","code":"RW_Seas(n_seas = 4)               ## seasonal effects fixed #>   RW_Seas(n_seas=4)  #>     n_seas: 4 #>          s: 1 #>         sd: 1 #>     s_seas: 0 #>    sd_seas: 1 #>      along: NULL #>        con: none RW_Seas(n_seas = 4, s_seas = 0.5) ## seasonal effects evolve #>   RW_Seas(n_seas=4,s_seas=0.5)  #>          n: NULL #>          s: 1 #>         sd: 1 #>     s_seas: 0.5 #>    sd_seas: 1 #>      along: NULL #>        con: none RW_Seas(n_seas = 4, sd = 0)       ## first term in random walk fixed at 0 #>   RW_Seas(n_seas=4,sd=0)  #>     n_seas: 4 #>          s: 1 #>         sd: 0 #>     s_seas: 0 #>    sd_seas: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":null,"dir":"Reference","previous_headings":"","what":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"Use components Singular Value Decomposition (SVD) model main effect interaction involving age.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"","code":"SVD(ssvd, n_comp = NULL, indep = TRUE)"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"ssvd Object class \"bage_ssvd\" holding scaled SVD. See scaled SVDs databases currently available bage. n_comp Number components scaled SVD use modelling. default half number components ssvd. indep Whether use separate combined SVDs terms involving sex gender. Default TRUE. See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"object class \"bage_prior_svd\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"SVD() prior assumes age, age-sex, age-gender profiles quantity modelled looks like drawn random external demographic database. instance, prior obtained via   assumes age age-sex profiles look like drawn Human Mortality Database. SVD() used interaction involving variables age sex/gender, separate profiles constructed within combination variables. bage chooses appropriate age-specific age-sex-specific SVD values internally. choice depends model term SVD() prior applied , age labels used data argument mod_pois(), mod_binom() mod_norm(). bage makes choice set_prior() called.","code":"SVD(HMD)"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"joint-or-independent-svds","dir":"Reference","previous_headings":"","what":"Joint or independent SVDs","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"Two possible ways extracting patterns age-sex-specific data carry separate SVDs separate datasets sex/gender; carry single SVD dataset separate entries sex/gender. Option 1 flexible. Option 2 robust sampling measurement errors. Option 1 obtained setting joint argument  FALSE. Option 1 obtained setting indep argument TRUE. default TRUE.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"Case 1: Term involving age variables SVD() used age main effect, $$\\pmb{\\beta} = \\pmb{F} \\pmb{\\alpha} + \\pmb{g},$$ \\(\\pmb{\\beta}\\) main effect interaction involving age; \\(J\\) number elements \\(\\pmb{\\beta}\\); \\(n\\) number components SVD; \\(\\pmb{F}\\) known matrix dimension \\(J \\times n\\); \\(\\pmb{g}\\) known vector \\(J\\) elements. \\(\\pmb{F}\\) \\(\\pmb{g}\\) constructed large database age-specific demographic estimates performing SVD standardizing. elements \\(\\pmb{\\alpha}\\) prior $$\\alpha_k \\sim \\text{N}(0, 1), \\quad k = 1, \\cdots, K.$$ Case 2: Term involving age non-sex, non-gender variable(s) SVD() used interaction involves age involve sex gender, $$\\pmb{\\beta}_u = \\pmb{F} \\pmb{\\alpha}_u + \\pmb{g},$$ \\(\\pmb{\\beta}_u\\) subvector \\(\\pmb{\\beta}\\) holding values  \\(u\\)th combination non-age variables; \\(V\\) number elements \\(\\pmb{\\beta}_u\\); \\(n\\) number components SVD; \\(\\pmb{F}\\) known matrix dimension \\(V \\times n\\); \\(\\pmb{g}\\) known vector \\(V\\) elements. Case 3: Term involving age, sex/gender, variables SVD() used interaction involves age sex gender, two sub-cases, depending value indep. indep TRUE, $$\\pmb{\\beta}_{s} = \\pmb{F}_s \\pmb{\\alpha}_{s} + \\pmb{g}_s,$$ indep FALSE, $$\\pmb{\\beta} = \\pmb{F} \\pmb{\\alpha} + \\pmb{g},$$ \\(\\pmb{\\beta}\\) interaction involving age sex/gender; \\(\\pmb{\\beta}_{s}\\) subvector \\(\\pmb{\\beta}\\), holding values sex/gender \\(s\\); \\(J\\) number elements \\(\\pmb{\\beta}\\); \\(S\\) number sexes/genders; \\(n\\) number components SVD; \\(\\pmb{F}_s\\) known \\((J/S) \\times n\\) matrix, specific sex/gender \\(s\\); \\(\\pmb{g}_s\\) known vector \\(J/S\\) elements, specific sex/gender \\(s\\); \\(\\pmb{F}\\) known \\(J \\times n\\) matrix, values sexes/genders; \\(\\pmb{g}\\) known vector \\(J\\) elements, values sexes/genders. elements \\(\\pmb{\\alpha}_s\\) \\(\\pmb{\\alpha}\\) prior $$\\alpha_k \\sim \\text{N}(0, 1).$$ Case 4: Term involving age, sex/gender, variable(s) SVD() used interaction involves age, sex gender, variables, two sub-cases, depending value indep. indep TRUE, $$\\pmb{\\beta}_{u,s} = \\pmb{F}_s \\pmb{\\alpha}_{u,s} + \\pmb{g}_s,$$ indep FALSE, $$\\pmb{\\beta}_u = \\pmb{F} \\pmb{\\alpha}_u + \\pmb{g},$$ \\(\\pmb{\\beta}\\) interaction involving sex/gender; \\(\\pmb{\\beta}_{u,s}\\) subvector \\(\\pmb{\\beta}\\), holding values sex/gender \\(s\\) \\(u\\)th combination variables; \\(V\\) number elements \\(\\pmb{\\beta}_u\\); \\(S\\) number sexes/genders; \\(n\\) number components SVD; \\(\\pmb{F}_s\\) known \\((V/S) \\times n\\) matrix, specific sex/gender \\(s\\); \\(\\pmb{g}_s\\) known vector \\(V/S\\) elements, specific sex/gender \\(s\\); \\(\\pmb{F}\\) known \\(V \\times n\\) matrix, values sexes/genders; \\(\\pmb{g}\\) known vector \\(V\\) elements, values sexes/genders.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"scaled-svds-of-demographic-databases-in-bage","dir":"Reference","previous_headings":"","what":"Scaled SVDs of demographic databases in bage","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"HMD Mortality rates Human Mortality Database. HFD Fertility rates Human Fertility Database. LFP Labor forcce participation rates OECD.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"details construction scaled SVDS see Mathematical Details vignette","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/SVD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SVD-Based Prior for Age or Age-Sex Profiles — SVD","text":"","code":"SVD(HMD)  #>   SVD(HMD)  #>       ssvd: HMD #>     n_comp: 3 SVD(HMD, n_comp = 3) #>   SVD(HMD)  #>       ssvd: HMD #>     n_comp: 3"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"Use components Singular Value Decomposition (SVD) model interaction involving age time, age, sex/gender time, coefficients evolve time.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"","code":"SVD_AR(   ssvd,   n_comp = NULL,   indep = TRUE,   n_coef = 2,   s = 1,   shape1 = 5,   shape2 = 5,   con = c(\"none\", \"by\") )  SVD_AR1(   ssvd,   n_comp = NULL,   indep = TRUE,   min = 0.8,   max = 0.98,   s = 1,   shape1 = 5,   shape2 = 5,   con = c(\"none\", \"by\") )  SVD_RW(ssvd, n_comp = NULL, indep = TRUE, s = 1, sd = 1, con = c(\"none\", \"by\"))  SVD_RW2(   ssvd,   n_comp = NULL,   indep = TRUE,   s = 1,   sd = 1,   sd_slope = 1,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"ssvd Object class \"bage_ssvd\" holding scaled SVD. See scaled SVDs databases currently available bage. n_comp Number components scaled SVD use modelling. default half number components ssvd. indep Whether use separate combined SVDs terms involving sex gender. Default TRUE. See details. n_coef Number AR coefficients SVD_RW(). s Scale standard deviations terms. shape1, shape2 Parameters prior coefficients SVD_AR(). Defaults 5 5. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details. min, max Minimum maximum values autocorrelation coefficient SVD_AR1(). Defaults 0.8 0.98. sd Standard deviation initial value random walks. Default 1. Can 0. sd_slope Standard deviation prior initial slope. Default 1.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"object class \"bage_prior_svd_ar\", \"bage_prior_svd_rw\", \"bage_prior_svd_rw2\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"SVD_AR(), SVD_AR1(), SVD_RW(), SVD_RW2() priors assume , given period, age profiles age-sex profiles quantity modelled looks like drawn random external demographic database. instance, SVD_AR() prior obtained via   assumes profiles look like obtained Human Mortality Database.","code":"SVD_AR(HMD)"},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"interaction modelled involves age time, age, sex/gender, time $$\\pmb{\\beta}_t = \\pmb{F} \\pmb{\\alpha}_t + \\pmb{g},$$ involves variables besides age, sex/gender, time, $$\\pmb{\\beta}_{u,t} = \\pmb{F} \\pmb{\\alpha}_{u,t} + \\pmb{g},$$ \\(\\pmb{\\beta}\\) interaction involving age, time, possibly sex/gender, possibly variables; \\(\\pmb{\\beta}_t\\) subvector \\(\\pmb{\\beta}\\) holding values period \\(t\\); \\(\\pmb{\\beta}_{u,t}\\) subvector \\(\\pmb{\\beta}_t\\) holding values  \\(u\\)th combination non-age, non-time, non-sex/gender variables period \\(t\\); \\(\\pmb{F}\\) known matrix; \\(\\pmb{g}\\) known vector. \\(\\pmb{F}\\) \\(\\pmb{g}\\) constructed large database age-specific demographic estimates applying singular value decomposition, standardizing. SVD_AR(), prior \\(k\\)th element \\(\\pmb{\\alpha}_t\\) \\(\\pmb{\\alpha}_{u,t}\\) $$\\alpha_{k,t} = \\phi_1 \\alpha_{k,t-1} + \\cdots + \\phi_n \\beta_{k,t-n} + \\epsilon_{k,t}$$ $$\\alpha_{k,u,t} = \\phi_1 \\alpha_{k,u,t-1} + \\cdots + \\phi_n \\beta_{k,u,t-n} + \\epsilon_{k,u,t};$$ SVD_AR1(), $$\\alpha_{k,t} = \\phi \\alpha_{k,t-1} + \\epsilon_{k,t}$$ $$\\alpha_{k,u,t} = \\phi \\alpha_{k,u,t-1} + \\epsilon_{k,u,t};$$ SVD_RW(), $$\\alpha_{k,t} = \\alpha_{k,t-1} + \\epsilon_{k,t}$$ $$\\alpha_{k,u,t} = \\alpha_{k,u,t-1} + \\epsilon_{k,u,t};$$ SVD_RW2(), $$\\alpha_{k,t} = 2 \\alpha_{k,t-1} - \\alpha_{k,t-2} + \\epsilon_{k,t}$$ $$\\alpha_{k,u,t} = 2 \\alpha_{k,u,t-1} - \\alpha_{k,u,t-2} + \\epsilon_{k,u,t}.$$ details, see AR(), AR1(), RW(), RW2().","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"scaled-svds-of-demographic-databases-in-bage","dir":"Reference","previous_headings":"","what":"Scaled SVDs of demographic databases in bage","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"HMD Mortality rates Human Mortality Database. HFD Fertility rates Human Fertility Database. LFP Labor forcce participation rates OECD.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"details construction scaled SVDS see Mathematical Details vignette","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/SVD_AR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic SVD-Based Priors for Age Profiles or Age-Sex Profiles — SVD_AR","text":"","code":"SVD_AR1(HMD) #>   SVD_AR1(HMD)  #>       ssvd: HMD #>     n_comp: 3 #>        min: 0.8 #>        max: 0.98 #>          s: 1 #>      along: NULL #>        con: none SVD_RW(HMD, n_comp = 3) #>   SVD_RW(HMD)  #>       ssvd: HMD #>     n_comp: 3 #>          s: 1 #>         sd: 1 #>      along: NULL #>        con: none SVD_RW2(HMD, indep = FALSE) #>   SVD_RW2(HMD,indep=FALSE)  #>       ssvd: HMD #>     n_comp: 3 #>      indep: FALSE #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":null,"dir":"Reference","previous_headings":"","what":"P-Spline Prior — Sp","title":"P-Spline Prior — Sp","text":"Use p-spline (penalised spline) model main effects interactions. Typically used age, can used variable outcomes expected vary smoothly one element next.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"P-Spline Prior — Sp","text":"","code":"Sp(   n_comp = NULL,   s = 1,   sd = 1,   sd_slope = 1,   along = NULL,   con = c(\"none\", \"by\") )"},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"P-Spline Prior — Sp","text":"n_comp Number spline basis functions (components) use. s Scale prior innovations. Default 1. sd Standard deviation prior first element random walk. sd_slope Standard deviation prior initial slope random walk. Default 1. along Name variable used 'along' variable. used interactions. con Constraints parameters. Current choices \"none\" \"\". Default \"none\". See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"P-Spline Prior — Sp","text":"object class \"bage_prior_spline\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"P-Spline Prior — Sp","text":"Sp() used interaction, separate splines used 'along' variable within combination '' variables.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"P-Spline Prior — Sp","text":"Sp() used main effect, $$\\pmb{\\beta} = \\pmb{X} \\pmb{\\alpha}$$ used interaction, $$\\pmb{\\beta}_u = \\pmb{X} \\pmb{\\alpha}_u$$ \\(\\pmb{\\beta}\\) main effect interaction, \\(J\\) elements; \\(\\pmb{\\beta}_u\\) subvector \\(\\pmb{\\beta}\\) holding values  \\(u\\)th combination '' variables; \\(J\\) number elements \\(\\pmb{\\beta}\\); \\(U\\) number elements \\(\\pmb{\\beta}_u\\); \\(X\\) \\(J \\times n\\) \\(V \\times n\\) matrix spline basis functions; \\(n\\) n_comp. elements \\(\\pmb{\\alpha}\\) \\(\\pmb{\\alpha}_u\\) assumed follow second-order random walk.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"constraints","dir":"Reference","previous_headings":"","what":"Constraints","title":"P-Spline Prior — Sp","text":"combinations terms priors, values intercept, main effects, interactions weakly identified. instance, may possible increase value intercept reduce value remaining terms model effect predicted rates tiny effect prior probabilities. weak identifiability typically harmless. However, applications, trying obtain interpretable values main effects interactions, can helpful increase identifiability use constraints, specified con argument. Current options con : \"none\" constraints. default. \"\" used interaction terms include 'along' '' dimensions. Within value 'along' dimension, terms across '' dimension constrained sum 0.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"P-Spline Prior — Sp","text":"Eilers, P.H.C. Marx B. (1996). \"Flexible smoothing B-splines penalties\". Statistical Science. 11 (2): 89–121.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/Sp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"P-Spline Prior — Sp","text":"","code":"Sp() #>   Sp()  #>     n_comp: NULL #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>      along: NULL #>        con: none Sp(n_comp = 10) #>   Sp(n_comp=10)  #>     n_comp: 10 #>          s: 1 #>         sd: 1 #>   sd_slope: 1 #>      along: NULL #>        con: none"},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Data and Modelled Values — augment.bage_mod","title":"Extract Data and Modelled Values — augment.bage_mod","text":"Extract data rates, probabilities, means model object. return value consists original data one columns modelled values.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Data and Modelled Values — augment.bage_mod","text":"","code":"# S3 method for class 'bage_mod' augment(x, quiet = FALSE, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Data and Modelled Values — augment.bage_mod","text":"x Object class \"bage_mod\", typically created mod_pois(), mod_binom(), mod_norm(). quiet Whether suppress messages. Default FALSE. ... Unused. Included generic consistency .","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Data and Modelled Values — augment.bage_mod","text":"tibble, original data plus one following columns: .<outcome> Corrected extended version outcome variable, applications outcome variable missing values, data model used. .observed 'Direct' estimates rates probabilities, ie counts divided exposure size (Poisson binomial models.) .fitted Draws rates, probabilities, means. .expected Draws expected values rates probabilities (Poisson include exposure, binomial models.) Uncertain quantities represented using rvecs.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"fitted-vs-unfitted-models","dir":"Reference","previous_headings":"","what":"Fitted vs unfitted models","title":"Extract Data and Modelled Values — augment.bage_mod","text":"augment() typically called fitted model. case, modelled values draws joint posterior distribution rates, probabilities, means. augment() can, however, called unfitted model. case, modelled values draws joint prior distribution. words, modelled values informed model priors, values exposure, size, weights, observed outcomes.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"imputed-values-for-outcome-variable","dir":"Reference","previous_headings":"","what":"Imputed values for outcome variable","title":"Extract Data and Modelled Values — augment.bage_mod","text":"augment() automatically imputes missing values outcome variable. outcome variable var one NAs, augment creates variable .var holding original imputed values.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"data-model-for-outcome-variable","dir":"Reference","previous_headings":"","what":"Data model for outcome variable","title":"Extract Data and Modelled Values — augment.bage_mod","text":"overall model includes data model outcome variable var, augment() creates new variable .var containing estimates true value outcome.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/augment.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Data and Modelled Values — augment.bage_mod","text":"","code":"set.seed(0)  ## specify model mod <- mod_pois(divorces ~ age + sex + time,                 data = nzl_divorces,                 exposure = population) |>   set_n_draw(n_draw = 100) ## smaller sample, so 'augment' faster  ## draw from the prior distribution mod |> augment() #> ℹ Model not fitted, so values drawn straight from prior distribution. #> # A tibble: 242 × 8 #>    age   sex     time               divorces population             .observed #>    <fct> <chr>  <int>            <rdbl<100>>      <dbl>           <rdbl<100>> #>  1 15-19 Female  2011   80302 (225, 4258922)     154460     0.52 (0.0015, 28) #>  2 15-19 Female  2012 113814 (1405, 2.3e+07)     153060    0.74 (0.0092, 152) #>  3 15-19 Female  2013   1e+05 (305, 1.2e+07)     152250      0.67 (0.002, 77) #>  4 15-19 Female  2014    84338 (85, 5.2e+07)     152020   0.55 (0.00056, 341) #>  5 15-19 Female  2015   96017 (324, 1.5e+08)     152970   0.63 (0.0021, 1012) #>  6 15-19 Female  2016    98661 (26, 5.2e+08)     154170  0.64 (0.00017, 3392) #>  7 15-19 Female  2017    87934 (43, 3.1e+08)     154450  0.57 (0.00028, 2021) #>  8 15-19 Female  2018     85034 (6, 1.4e+08)     154170   0.55 (3.9e-05, 880) #>  9 15-19 Female  2019    141277 (6, 2.1e+09)     154760 0.91 (3.8e-05, 13511) #> 10 15-19 Female  2020   122429 (51, 2.5e+09)     154480 0.79 (0.00033, 16210) #> # ℹ 232 more rows #> # ℹ 2 more variables: .fitted <rdbl<100>>, .expected <rdbl<100>>  ## fit model mod <- mod |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## draw from the posterior distribution mod |> augment() #> Drawing `.expected`... #> Drawing `.fitted`... #> # A tibble: 242 × 8 #>    age   sex     time divorces population .observed                    .fitted #>    <fct> <chr>  <int>    <dbl>      <dbl>     <dbl>                <rdbl<100>> #>  1 15-19 Female  2011        0     154460 0         1.1e-05 (5.7e-06, 1.8e-05) #>  2 15-19 Female  2012        6     153060 0.0000392 1.4e-05 (7.5e-06, 2.1e-05) #>  3 15-19 Female  2013        3     152250 0.0000197   1.2e-05 (7.1e-06, 2e-05) #>  4 15-19 Female  2014        3     152020 0.0000197 1.1e-05 (7.2e-06, 1.9e-05) #>  5 15-19 Female  2015        3     152970 0.0000196 1.1e-05 (6.2e-06, 1.8e-05) #>  6 15-19 Female  2016        3     154170 0.0000195   1e-05 (6.7e-06, 1.8e-05) #>  7 15-19 Female  2017        6     154450 0.0000388 1.2e-05 (6.8e-06, 1.9e-05) #>  8 15-19 Female  2018        0     154170 0         8.4e-06 (5.1e-06, 1.3e-05) #>  9 15-19 Female  2019        3     154760 0.0000194   1e-05 (6.2e-06, 1.6e-05) #> 10 15-19 Female  2020        0     154480 0         8.4e-06 (4.4e-06, 1.3e-05) #> # ℹ 232 more rows #> # ℹ 1 more variable: .expected <rdbl<100>>  ## insert a missing value into outcome variable divorces_missing <- nzl_divorces divorces_missing$divorces[1] <- NA  ## fitting model and calling 'augument' ## creates a new variable called '.divorces' ## holding observed and imputed values mod_pois(divorces ~ age + sex + time,          data = divorces_missing,          exposure = population) |>   fit() |>   augment() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.divorces`... #> # A tibble: 242 × 9 #>    age   sex     time divorces    .divorces population  .observed #>    <fct> <chr>  <int>    <dbl> <rdbl<1000>>      <dbl>      <dbl> #>  1 15-19 Female  2011       NA     2 (0, 5)     154460 NA         #>  2 15-19 Female  2012        6     6 (6, 6)     153060  0.0000392 #>  3 15-19 Female  2013        3     3 (3, 3)     152250  0.0000197 #>  4 15-19 Female  2014        3     3 (3, 3)     152020  0.0000197 #>  5 15-19 Female  2015        3     3 (3, 3)     152970  0.0000196 #>  6 15-19 Female  2016        3     3 (3, 3)     154170  0.0000195 #>  7 15-19 Female  2017        6     6 (6, 6)     154450  0.0000388 #>  8 15-19 Female  2018        0     0 (0, 0)     154170  0         #>  9 15-19 Female  2019        3     3 (3, 3)     154760  0.0000194 #> 10 15-19 Female  2020        0     0 (0, 0)     154480  0         #> # ℹ 232 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>  ## specifying a data model for the ## original data also leads to a new ## variable called '.divorces' mod_pois(divorces ~ age + sex + time,          data = nzl_divorces,          exposure = population) |>   set_datamod_outcome_rr3() |>   fit() |>   augment() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.divorces`... #> # A tibble: 242 × 9 #>    age   sex     time divorces    .divorces population .observed #>    <fct> <chr>  <int>    <dbl> <rdbl<1000>>      <dbl>     <dbl> #>  1 15-19 Female  2011        0     1 (0, 2)     154460 0         #>  2 15-19 Female  2012        6     5 (4, 8)     153060 0.0000392 #>  3 15-19 Female  2013        3     3 (1, 5)     152250 0.0000197 #>  4 15-19 Female  2014        3     3 (1, 5)     152020 0.0000197 #>  5 15-19 Female  2015        3     3 (1, 5)     152970 0.0000196 #>  6 15-19 Female  2016        3     3 (1, 5)     154170 0.0000195 #>  7 15-19 Female  2017        6     5 (4, 8)     154450 0.0000388 #>  8 15-19 Female  2018        0     1 (0, 2)     154170 0         #>  9 15-19 Female  2019        3     3 (1, 5)     154760 0.0000194 #> 10 15-19 Female  2020        0     1 (0, 2)     154480 0         #> # ℹ 232 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>"},{"path":"https://bayesiandemography.github.io/bage/reference/bage-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Package 'bage' — bage-package","title":"Package 'bage' — bage-package","text":"Bayesian estimation forecasting age-specific rates. Estimation uses TMB, fast.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/bage-package.html","id":"example-workflow","dir":"Reference","previous_headings":"","what":"Example workflow","title":"Package 'bage' — bage-package","text":"Specify model using mod_pois() Fit model using fit() Extract results using augment() Check model using replicate_data()","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/bage-package.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Package 'bage' — bage-package","text":"Specify model mod_pois() Specify Poisson model mod_binom() Specify binomial model mod_norm() Specify normal model set_prior() Specify prior main effect interaction priors List available priors main effects interactions set_disp() Specify prior dispersion/variance set_var_age() Identify age variable data set_var_sexgender() Identify sex gender variable data set_var_time() Identify time variable data Fit model fit() Derive posterior distribution is_fitted() See model fitted Extract results augment() Add cell-level estimates data components() Hyper-parameters tidy() One-line summary set_n_draw() Specify number prior posterior draws Forecast forecast() Use model obtain estimates future periods Check model replicate_data() Compare real simulated data report_sim() Simulation study model SVD-based modelling age profiles components() Matrices offsets scaled SVD generate() Random profiles HFD Scaled SVD fertility rates Human Fertility Database HMD Scaled SVD mortality rates Human Mortality Database LFP Scaled SVD labor force participation rates OECD Data isl_deaths Deaths Iceland kor_births Births South Korea nld_expenditure Health expenditure Netherlands nzl_divorces Divorces New Zealand nzl_households One-person households New Zealand nzl_injuries Fatal injuries New Zealand swe_infant Infant mortality Sweden usa_deaths Accidental deaths USA","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/bage-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package 'bage' — bage-package","text":"Maintainer: John Bryant john@bayesiandemography.com Authors: Junni Zhang junnizhang@163.com contributors: Bayesian Demography Limited [copyright holder]","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Values for Hyper-Parameters — components.bage_mod","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"Extract values hyper-parameters model object. Hyper-parameters include main effects interactions, dispersion, trends, seasonal effects, errors, SVD, spline, covariate coefficients, standard deviations, correlation coefficients.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"","code":"# S3 method for class 'bage_mod' components(object, quiet = FALSE, original_scale = FALSE, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"object Object class \"bage_mod\", typically created mod_pois(), mod_binom(), mod_norm(). quiet Whether suppress messages. Default FALSE. original_scale Whether values \"effect\", \"trend\", \"season\", \"error\" \"disp\" components normal model original scale transformed scale. Default FALSE. ... Unused. Included generic consistency .","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"tibble four columns columns: return value contains following columns: term Model term hyper-parameter belongs . component Component within term. level Element within component . .fitted rvec containing draws posterior distribution.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"fitted-vs-unfitted-models","dir":"Reference","previous_headings":"","what":"Fitted vs unfitted models","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"components() typically called fitted model. case, values returned draws joint posterior distribution hyper-parameters model. components() can, however, called unfitted model. case, values returned draws joint prior distribution. words, values incorporate model priors, exposure, size, weights argument, observed outcomes.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"scaling-and-normal-models","dir":"Reference","previous_headings":"","what":"Scaling and Normal models","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"Internally, models created mod_norm() fitted using transformed versions outcome weights variables. default, components() used models, returns values .fitted based transformed versions. instead obtain values \"effect\", \"trend\", \"season\", \"error\" \"disp\" based untransformed versions, set original_scale TRUE.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Values for Hyper-Parameters — components.bage_mod","text":"","code":"set.seed(0)  ## specify model mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn)  ## extract prior distribution ## of hyper-parameters mod |>   components() #> ℹ Model not fitted, so values drawn straight from prior distribution. #> # A tibble: 37 × 4 #>    term        component level                   .fitted #>    <chr>       <chr>     <chr>              <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -0.027 (-1.9, 1.8) #>  2 age         effect    0-4            -0.018 (-2, 1.9) #>  3 age         effect    5-9           0.033 (-2.7, 3.1) #>  4 age         effect    10-14        -0.063 (-3.4, 3.7) #>  5 age         effect    15-19           0.019 (-4, 4.4) #>  6 age         effect    20-24         0.099 (-4.5, 4.9) #>  7 age         effect    25-29         0.085 (-4.4, 5.5) #>  8 age         effect    30-34       -0.0021 (-5.3, 5.7) #>  9 age         effect    35-39         0.025 (-5.6, 6.6) #> 10 age         effect    40-44        -0.033 (-6.2, 6.4) #> # ℹ 27 more rows  ## fit model mod <- mod |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## extract posterior distribution ## of hyper-parameters mod |>   components() #> # A tibble: 37 × 4 #>    term        component level                   .fitted #>    <chr>       <chr>     <chr>              <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)   -2.5 (-4.3, -0.8) #>  2 age         effect    0-4            -2.4 (-4, -0.81) #>  3 age         effect    5-9           -3.7 (-5.3, -2.1) #>  4 age         effect    10-14         -3.3 (-4.8, -1.7) #>  5 age         effect    15-19        -1.5 (-3.1, 0.049) #>  6 age         effect    20-24          -1.4 (-2.9, 0.2) #>  7 age         effect    25-29        -1.5 (-3.1, 0.061) #>  8 age         effect    30-34       -1.6 (-3.2, -0.042) #>  9 age         effect    35-39       -1.6 (-3.2, -0.055) #> 10 age         effect    40-44       -1.7 (-3.2, -0.046) #> # ℹ 27 more rows  ## fit normal model mod <- mod_norm(value ~ age * diag + year,                 data = nld_expenditure,                 weights = 1) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## dispersion (= standard deviation in normal model) ## on the transformed scale mod |>   components() |>   subset(component == \"disp\") #> ℹ Values for `.fitted` are on a transformed scale. See the documentation for `mod_norm()` and `components()` for details. #> # A tibble: 1 × 4 #>   term  component level           .fitted #>   <chr> <chr>     <chr>      <rdbl<1000>> #> 1 disp  disp      disp  0.32 (0.31, 0.34)  ## disperson on the original scale mod |>   components(original_scale = TRUE) |>   subset(component == \"disp\") #> # A tibble: 1 × 4 #>   term  component level        .fitted #>   <chr> <chr>     <chr>   <rdbl<1000>> #> 1 disp  disp      disp  163 (156, 170)"},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Components used by SVD Summary — components.bage_ssvd","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"Extract matrix offset used scaled SVD summary demographic database.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"","code":"# S3 method for class 'bage_ssvd' components(object, n_comp = NULL, indep = NULL, age_labels = NULL, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"object object class \"bage_ssvd\". n_comp number components. default half total number components object. indep Whether use independent joint SVDs sex/gender. value supplied, SVD sex/gender dimension used. Note default different SVD(). age_labels Age labels desired age age-sex profile. labels supplied, detailed profile available used. ... currently used.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"tibble offset components.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":"scaled-svds-of-demographic-databases-in-bage","dir":"Reference","previous_headings":"","what":"Scaled SVDs of demographic databases in bage","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"HMD Mortality rates Human Mortality Database. HFD Fertility rates Human Fertility Database. LFP Labor forcce participation rates OECD.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/components.bage_ssvd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Components used by SVD Summary — components.bage_ssvd","text":"","code":"## females and males combined components(LFP, n_comp = 3) #> # A tibble: 52 × 3 #>    component age    value #>    <fct>     <chr>  <dbl> #>  1 Offset    15-19 -0.839 #>  2 Offset    20-24  0.754 #>  3 Offset    25-29  1.46  #>  4 Offset    30-34  1.56  #>  5 Offset    35-39  1.63  #>  6 Offset    40-44  1.68  #>  7 Offset    45-49  1.58  #>  8 Offset    50-54  1.25  #>  9 Offset    55-59  0.645 #> 10 Offset    60-64 -0.398 #> # ℹ 42 more rows  ## females and males modelled independently components(LFP, indep = TRUE, n_comp = 3) #> # A tibble: 104 × 4 #>    component sex    age    value #>    <fct>     <chr>  <chr>  <dbl> #>  1 Offset    Female 15-19 -0.989 #>  2 Offset    Female 20-24  0.455 #>  3 Offset    Female 25-29  0.898 #>  4 Offset    Female 30-34  0.881 #>  5 Offset    Female 35-39  0.985 #>  6 Offset    Female 40-44  1.10  #>  7 Offset    Female 45-49  1.04  #>  8 Offset    Female 50-54  0.734 #>  9 Offset    Female 55-59  0.162 #> 10 Offset    Female 60-64 -0.857 #> # ℹ 94 more rows  ## joint model for females and males components(LFP, indep = FALSE, n_comp = 3) #> # A tibble: 104 × 4 #>    component sex    age    value #>    <fct>     <chr>  <chr>  <dbl> #>  1 Offset    Female 15-19 -1.00  #>  2 Offset    Female 20-24  0.481 #>  3 Offset    Female 25-29  0.890 #>  4 Offset    Female 30-34  0.851 #>  5 Offset    Female 35-39  0.965 #>  6 Offset    Female 40-44  1.09  #>  7 Offset    Female 45-49  1.05  #>  8 Offset    Female 50-54  0.747 #>  9 Offset    Female 55-59  0.171 #> 10 Offset    Female 60-64 -0.855 #> # ℹ 94 more rows  ## specify age groups labels <- poputils::age_labels(type = \"five\", min = 15, max = 60) components(LFP, age_labels = labels) #> # A tibble: 36 × 3 #>    component   age    value #>    <fct>       <chr>  <dbl> #>  1 Offset      15-19 -1.00  #>  2 Offset      20-24  0.737 #>  3 Offset      25-29  1.49  #>  4 Offset      30-34  1.64  #>  5 Offset      35-39  1.71  #>  6 Offset      40-44  1.74  #>  7 Offset      45-49  1.62  #>  8 Offset      50-54  1.28  #>  9 Offset      55-59  0.653 #> 10 Component 1 15-19 -0.279 #> # ℹ 26 more rows"},{"path":"https://bayesiandemography.github.io/bage/reference/computations.html","id":null,"dir":"Reference","previous_headings":"","what":"Information on Computations Performed Duration Model Fitting — computations","title":"Information on Computations Performed Duration Model Fitting — computations","text":"Get information computations performed function fit(). information includes total time used fitting, time used two particular tasks can slow: running optimizer stats::nlminb(), drawing multivariate normal returned TMB. also includes values returned optimizer: number iterations needed, messages convergence.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/computations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information on Computations Performed Duration Model Fitting — computations","text":"","code":"computations(object)"},{"path":"https://bayesiandemography.github.io/bage/reference/computations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information on Computations Performed Duration Model Fitting — computations","text":"object fitted object class \"bage_mod\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/computations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information on Computations Performed Duration Model Fitting — computations","text":"tibble following variables: time_total Seconds used whole fitting process. time_max Seconds used optimisiation. time_draw Seconds used function TMB::sdreport(). iter Number iterations required optimization. message Message convergence returned optimizer.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/computations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information on Computations Performed Duration Model Fitting — computations","text":"","code":"mod <- mod_pois(divorces ~ age + sex + time,                 data = nzl_divorces,                 exposure = population) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  computations(mod) #> # A tibble: 1 × 6 #>   time_total time_max time_draw  iter converged message                  #>        <dbl>    <dbl>     <dbl> <int> <lgl>     <chr>                    #> 1      0.167   0.0736    0.0691    13 TRUE      relative convergence (4)"},{"path":"https://bayesiandemography.github.io/bage/reference/datamods.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Models — datamods","title":"Data Models — datamods","text":"models rates, probabilities, means created functions mod_pois(), mod_binom(), mod_norm() can extended adding data models, also referred measurement error models. Data models can applied outcome variable, exposure variable (Poisson models), size variable (binomial models).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/datamods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data Models — datamods","text":"Data models outcome variable Data models exposure size variable None implemented yet","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a Model — fit.bage_mod","title":"Fit a Model — fit.bage_mod","text":"Derive posterior distribution model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a Model — fit.bage_mod","text":"","code":"# S3 method for class 'bage_mod' fit(   object,   method = c(\"standard\", \"inner-outer\"),   vars_inner = NULL,   optimizer = c(\"multi\", \"nlminb\", \"BFGS\", \"CG\"),   quiet = TRUE,   start_oldpar = FALSE,   ... )"},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a Model — fit.bage_mod","text":"object bage_mod object, created mod_pois(), mod_binom(), mod_norm(). method Estimation method. Current choices \"standard\" (default) \"inner-outer\". See details. vars_inner Names variables use inner model method \"inner-outer\". NULL(default)vars_inner` age, sex/gender, time variables. optimizer optimizer use. Current choices \"multi\", \"nlminb\", \"BFGS\", \"CG\". Default \"multi\". See details. quiet Whether suppress warnings progress messages optimizer. Default TRUE. start_oldpar Whether optimizer start previous estimates. Used fit() called fitted model. Default FALSE. ... currently used.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a Model — fit.bage_mod","text":"bage_mod object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"estimation-methods","dir":"Reference","previous_headings":"","what":"Estimation methods","title":"Fit a Model — fit.bage_mod","text":"method \"standard\" (default), parameters, lowest-level rates, probabilities, means jointly estimated within TMB. method \"inner-outer\", estimation carried multiple steps, , large models, can sometimes reduce computation times. Step 1, data aggregated across dimensions specified var_inner, model inner variables fitted data. Step 2, data aggregated across remaining variables, model outer variables fitted data. Step 3, values dispersion calculated. Parameter estimates steps 1, 2, 3 combined. \"inner-outer\" methods still experimental, may change future.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"optimizer","dir":"Reference","previous_headings":"","what":"Optimizer","title":"Fit a Model — fit.bage_mod","text":"choices optimizer argument : \"multi\" Try \"nlminb\", fails, restart parameter values \"nlminb\" stopped, using \"BFGS\". default. \"nlminb\" stats::nlminb() \"BFGS\" stats::optim() using method \"BFGS\". \"GC\" stats::optim() using method \"CG\" (conjugate gradient).","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/fit.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a Model — fit.bage_mod","text":"","code":"## specify model mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn)  ## examine unfitted model mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age + sex + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age    12         12 #>          sex NFix()     -     2          2 #>         year   RW()  year    19         19 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>   ## fit model mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## examine fitted model mod #>  #>     ------ Fitted Poisson model ------ #>  #>    injuries ~ age + sex + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age    12         12    0.76 #>          sex NFix()     -     2          2    0.72 #>         year   RW()  year    19         19    0.08 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     year     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        0.25     0.11      0.11   13      TRUE   relative convergence (4) #>   ## extract rates aug <- augment(mod) #> Drawing `.expected`... #> Drawing `.fitted`... aug #> # A tibble: 912 × 9 #>    age   sex    ethnicity  year injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <int> <int>     <dbl> #>  1 0-4   Female Maori      2000       12 35830 0.000335  #>  2 5-9   Female Maori      2000        6 35120 0.000171  #>  3 10-14 Female Maori      2000        3 32830 0.0000914 #>  4 15-19 Female Maori      2000        6 27130 0.000221  #>  5 20-24 Female Maori      2000        6 24380 0.000246  #>  6 25-29 Female Maori      2000        6 24160 0.000248  #>  7 30-34 Female Maori      2000       12 22560 0.000532  #>  8 35-39 Female Maori      2000        3 22230 0.000135  #>  9 40-44 Female Maori      2000        6 18130 0.000331  #> 10 45-49 Female Maori      2000        6 13770 0.000436  #> # ℹ 902 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>  ## extract hyper-parameters comp <- components(mod) comp #> # A tibble: 37 × 4 #>    term        component level                   .fitted #>    <chr>       <chr>     <chr>              <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -2.5 (-4.1, -0.83) #>  2 age         effect    0-4          -2.5 (-4.3, -0.93) #>  3 age         effect    5-9           -3.8 (-5.6, -2.2) #>  4 age         effect    10-14         -3.3 (-5.2, -1.7) #>  5 age         effect    15-19       -1.6 (-3.4, -0.076) #>  6 age         effect    20-24        -1.5 (-3.3, 0.099) #>  7 age         effect    25-29       -1.6 (-3.4, -0.053) #>  8 age         effect    30-34        -1.7 (-3.5, -0.12) #>  9 age         effect    35-39        -1.7 (-3.5, -0.12) #> 10 age         effect    40-44        -1.7 (-3.5, -0.14) #> # ℹ 27 more rows"},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Use a Model to Make a Forecast — forecast.bage_mod","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"Forecast rates, probabilities, means, model parameters.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"","code":"# S3 method for class 'bage_mod' forecast(   object,   newdata = NULL,   labels = NULL,   output = c(\"augment\", \"components\"),   include_estimates = FALSE,   ... )"},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"object bage_mod object, typically created mod_pois(), mod_binom(), mod_norm(). newdata Data frame data future periods. labels Labels future values. output Type output returned include_estimates Whether include historical estimates along forecasts. Default FALSE. ... currently used.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"tibble.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"how-the-forecasts-are-constructed","dir":"Reference","previous_headings":"","what":"How the forecasts are constructed","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"Internally, steps involved forecast : Forecast time-varying main effects interactions, e.g. time main effect, age-time interaction. Combine forecasts time-varying main effects interactions non-time-varying parameters, e.g. age effects dispersion. Use combined parameters generate values rates, probabilities means. Optionally, generate values outcome variable. forecast() generates values outcome variable , output \"augment\", value supplied newdata, newdata included value exposure, size, weights variable (except exposure = 1 weights = 1 original call mod_pois() mod_norm()). Mathematical Details gives details internal calculations forecasting.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"output-format","dir":"Reference","previous_headings":"","what":"Output format","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"output \"augment\" (default), return value forecast() looks like output function augment(). output \"components\", return value looks like output components(). include_estimates FALSE (default), output forecast() excludes values time-varying parameters period covered data. include_estimates TRUE, output includes values. Setting include_estimates TRUE can helpful creating graphs combine estimates forecasts.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"forecasting-with-covariates","dir":"Reference","previous_headings":"","what":"Forecasting with covariates","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"Models contain covariates can used forecasts, provided coefficients (\\(\\zeta_p\\)) estimated historical data via fit(), covariates (columns \\(\\pmb{Z}\\)) time-varying, future values covariates supplied via newdata argument.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"fitted-and-unfitted-models","dir":"Reference","previous_headings":"","what":"Fitted and unfitted models","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"forecast() typically used fitted model, .e. model parameter values estimated data. resulting forecasts reflect data priors. forecast() can, however, used unfitted model. case, forecasts based entirely priors. See example. Experimenting forecasts based entirely priors can helpful choosing appropriate model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"interface forecast() finalised.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/forecast.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use a Model to Make a Forecast — forecast.bage_mod","text":"","code":"## specify and fit model mod <- mod_pois(injuries ~ age * sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod #>  #>     ------ Fitted Poisson model ------ #>  #>    injuries ~ age * sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age    12         12    0.73 #>          sex NFix()     -     2          2    0.11 #>    ethnicity NFix()     -     2          2    0.45 #>         year   RW()  year    19         19    0.09 #>      age:sex   RW()   age    24         24    0.43 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     year     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        0.53     0.24      0.24   14      TRUE   relative convergence (4) #>   ## forecasts mod |>   forecast(labels = 2019:2024) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> # A tibble: 288 × 9 #>    age   sex    ethnicity  year injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <dbl> <int>     <dbl> #>  1 0-4   Female Maori      2019       NA    NA        NA #>  2 0-4   Female Maori      2020       NA    NA        NA #>  3 0-4   Female Maori      2021       NA    NA        NA #>  4 0-4   Female Maori      2022       NA    NA        NA #>  5 0-4   Female Maori      2023       NA    NA        NA #>  6 0-4   Female Maori      2024       NA    NA        NA #>  7 0-4   Female Non Maori  2019       NA    NA        NA #>  8 0-4   Female Non Maori  2020       NA    NA        NA #>  9 0-4   Female Non Maori  2021       NA    NA        NA #> 10 0-4   Female Non Maori  2022       NA    NA        NA #> # ℹ 278 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>  ## combined estimates and forecasts mod |>   forecast(labels = 2019:2024,            include_estimates = TRUE) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> `augment()` for past values... #> Drawing `.expected`... #> `augment()` for past values... #> Drawing `.fitted`... #> `augment()` for past values... #> # A tibble: 1,200 × 9 #>    age   sex    ethnicity  year injuries  popn .observed #>    <fct> <chr>  <chr>     <int>    <dbl> <int>     <dbl> #>  1 0-4   Female Maori      2000       12 35830 0.000335  #>  2 5-9   Female Maori      2000        6 35120 0.000171  #>  3 10-14 Female Maori      2000        3 32830 0.0000914 #>  4 15-19 Female Maori      2000        6 27130 0.000221  #>  5 20-24 Female Maori      2000        6 24380 0.000246  #>  6 25-29 Female Maori      2000        6 24160 0.000248  #>  7 30-34 Female Maori      2000       12 22560 0.000532  #>  8 35-39 Female Maori      2000        3 22230 0.000135  #>  9 40-44 Female Maori      2000        6 18130 0.000331  #> 10 45-49 Female Maori      2000        6 13770 0.000436  #> # ℹ 1,190 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>  ## hyper-parameters mod |>   forecast(labels = 2019:2024,            output = \"components\") #> `components()` for past values... #> `components()` for future values... #> # A tibble: 6 × 4 #>   term  component level            .fitted #>   <chr> <chr>     <chr>       <rdbl<1000>> #> 1 year  effect    2019  -2.1 (-3.9, -0.33) #> 2 year  effect    2020  -2.1 (-3.9, -0.35) #> 3 year  effect    2021  -2.1 (-3.9, -0.35) #> 4 year  effect    2022  -2.1 (-3.9, -0.35) #> 5 year  effect    2023    -2.1 (-4, -0.33) #> 6 year  effect    2024  -2.1 (-3.9, -0.34)  ## hold back some data and forecast library(dplyr, warn.conflicts = FALSE) data_historical <- nzl_injuries |>   filter(year <= 2015) data_forecast <- nzl_injuries |>   filter(year > 2015) |>   mutate(injuries = NA) mod_pois(injuries ~ age * sex + ethnicity + year,          data = data_historical,          exposure = popn) |>   fit() |>   forecast(newdata = data_forecast) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> # A tibble: 144 × 9 #>    age   sex    ethnicity  year     injuries  popn .observed #>    <fct> <chr>  <chr>     <int> <rdbl<1000>> <int>     <dbl> #>  1 0-4   Female Maori      2016    8 (3, 15) 41220        NA #>  2 5-9   Female Maori      2016     2 (0, 6) 43230        NA #>  3 10-14 Female Maori      2016     2 (0, 6) 37640        NA #>  4 15-19 Female Maori      2016   12 (5, 21) 36040        NA #>  5 20-24 Female Maori      2016   10 (4, 19) 33760        NA #>  6 25-29 Female Maori      2016    8 (3, 15) 30530        NA #>  7 30-34 Female Maori      2016    6 (2, 12) 24480        NA #>  8 35-39 Female Maori      2016    6 (1, 12) 23170        NA #>  9 40-44 Female Maori      2016    6 (2, 12) 23940        NA #> 10 45-49 Female Maori      2016    6 (2, 13) 23580        NA #> # ℹ 134 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>  ## forecast using GDP per capita in 2023 as a covariate mod_births <- mod_pois(births ~ age * region + time,                        data = kor_births,                        exposure = popn) |>   set_covariates(~ gdp_pc_2023) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... mod_births |>   forecast(labels = 2024:2025) #> `components()` for past values... #> `components()` for future values... #> `augment()` for future values... #> # A tibble: 288 × 10 #>    age   region             time births  popn gdp_pc_2023 dens_2020 .observed #>    <chr> <fct>             <int>  <dbl> <int>       <dbl> <chr>         <dbl> #>  1 10-14 Busan              2024     NA    NA        25.7 NA               NA #>  2 10-14 Busan              2025     NA    NA        25.7 NA               NA #>  3 10-14 Chungcheongbuk-do  2024     NA    NA        40.3 NA               NA #>  4 10-14 Chungcheongbuk-do  2025     NA    NA        40.3 NA               NA #>  5 10-14 Chungcheongnam-do  2024     NA    NA        50.4 NA               NA #>  6 10-14 Chungcheongnam-do  2025     NA    NA        50.4 NA               NA #>  7 10-14 Daegu              2024     NA    NA        22.3 NA               NA #>  8 10-14 Daegu              2025     NA    NA        22.3 NA               NA #>  9 10-14 Daejeon            2024     NA    NA        27.6 NA               NA #> 10 10-14 Daejeon            2025     NA    NA        27.6 NA               NA #> # ℹ 278 more rows #> # ℹ 2 more variables: .fitted <rdbl<1000>>, .expected <rdbl<1000>>"},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Values from Priors — generate.bage_prior_ar","title":"Generate Values from Priors — generate.bage_prior_ar","text":"Generate draws priors model terms.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Values from Priors — generate.bage_prior_ar","text":"","code":"# S3 method for class 'bage_prior_ar' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_known' generate(x, n_element = 20, n_draw = 25, ...)  # S3 method for class 'bage_prior_lin' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_linar' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_linex' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_norm' generate(x, n_element = 20, n_draw = 25, ...)  # S3 method for class 'bage_prior_normfixed' generate(x, n_element = 20, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwrandom' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwrandomseasfix' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwrandomseasvary' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwzero' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwzeroseasfix' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rwzeroseasvary' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2random' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2randomseasfix' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2randomseasvary' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2zero' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2zeroseasfix' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_rw2zeroseasvary' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_spline' generate(x, n_along = 20, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd' generate(x, n_element = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd_ar' generate(x, n_along = 5, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd_rwrandom' generate(x, n_along = 5, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd_rwzero' generate(x, n_along = 5, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd_rw2random' generate(x, n_along = 5, n_by = 1, n_draw = 25, ...)  # S3 method for class 'bage_prior_svd_rw2zero' generate(x, n_along = 5, n_by = 1, n_draw = 25, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Values from Priors — generate.bage_prior_ar","text":"x Object class \"bage_prior\" n_along Number elements 'along' dimension. Default 20. n_by Number combinations '' variables. Default 1. n_draw Number draws. Default 25. ... Unused. Included generic consistency . n_element Number elements term, priors distinguish 'along' '' dimensions. Default 20.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Values from Priors — generate.bage_prior_ar","text":"tibble","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Values from Priors — generate.bage_prior_ar","text":"priors distinguish 'along' '' dimensions, others : see priors complete list. Arguments n_along n_by used priors make distinction, argument n_element used priors .","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_prior_ar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Values from Priors — generate.bage_prior_ar","text":"","code":"## prior that distinguishes 'along' and 'by' x <- RW() generate(x, n_along = 10, n_by = 2) #> # A tibble: 500 × 4 #>    draw   by    along   value #>    <fct>  <fct> <int>   <dbl> #>  1 Draw 1 By 1      1  1.45   #>  2 Draw 1 By 1      2  2.22   #>  3 Draw 1 By 1      3  0.502  #>  4 Draw 1 By 1      4  0.199  #>  5 Draw 1 By 1      5  0.0183 #>  6 Draw 1 By 1      6  1.51   #>  7 Draw 1 By 1      7  0.730  #>  8 Draw 1 By 1      8 -0.517  #>  9 Draw 1 By 1      9 -1.63   #> 10 Draw 1 By 1     10 -1.02   #> # ℹ 490 more rows  ## prior that does not distinguish x <- N() generate(x, n_element = 20) #> # A tibble: 500 × 3 #>    draw   element   value #>    <fct>    <int>   <dbl> #>  1 Draw 1       1 -1.09   #>  2 Draw 1       2 -2.61   #>  3 Draw 1       3  0.627  #>  4 Draw 1       4  0.627  #>  5 Draw 1       5  1.74   #>  6 Draw 1       6 -1.84   #>  7 Draw 1       7 -0.691  #>  8 Draw 1       8  0.765  #>  9 Draw 1       9  0.257  #> 10 Draw 1      10  0.0829 #> # ℹ 490 more rows  ## SVD_AR(), SVD_RW(), and SVD_RW2() ## distinguish 'along' and 'by' x <- SVD_AR(HFD) generate(x, n_along = 5, n_by = 2) #> # A tibble: 11,000 × 5 #>    draw   by    along age    value #>    <fct>  <fct> <int> <fct>  <dbl> #>  1 Draw 1 By 1      1 12    -11.8  #>  2 Draw 1 By 1      1 13     -9.71 #>  3 Draw 1 By 1      1 14     -7.92 #>  4 Draw 1 By 1      1 15     -6.36 #>  5 Draw 1 By 1      1 16     -5.04 #>  6 Draw 1 By 1      1 17     -4.12 #>  7 Draw 1 By 1      1 18     -3.45 #>  8 Draw 1 By 1      1 19     -2.96 #>  9 Draw 1 By 1      1 20     -2.66 #> 10 Draw 1 By 1      1 21     -2.47 #> # ℹ 10,990 more rows  ## SVD() does not x <- SVD(HFD) generate(x, n_element = 10) #> # A tibble: 11,000 × 4 #>    draw   element age    value #>    <fct>    <int> <fct>  <dbl> #>  1 Draw 1       1 12    -11.1  #>  2 Draw 1       1 13     -9.03 #>  3 Draw 1       1 14     -7.13 #>  4 Draw 1       1 15     -5.61 #>  5 Draw 1       1 16     -4.39 #>  6 Draw 1       1 17     -3.54 #>  7 Draw 1       1 18     -2.94 #>  8 Draw 1       1 19     -2.52 #>  9 Draw 1       1 20     -2.28 #> 10 Draw 1       1 21     -2.14 #> # ℹ 10,990 more rows"},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"Generate random age age-sex profiles object class \"bage_ssvd\". object class \"bage_ssvd\" holds results SVD decomposition demographic data.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"","code":"# S3 method for class 'bage_ssvd' generate(x, n_draw = 20, n_comp = NULL, indep = NULL, age_labels = NULL, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"x object class \"bage_ssvd\". n_draw Number random draws generate. n_comp number components. default half total number components object. indep Whether use independent joint SVDs sex/gender. value supplied, SVD sex/gender dimension used. Note default different SVD(). age_labels Age labels desired age age-sex profile. labels supplied, detailed profile available used. ... Unused. Included generic consistency .","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"tibble","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":"scaled-svds-of-demographic-databases-in-bage","dir":"Reference","previous_headings":"","what":"Scaled SVDs of demographic databases in bage","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"HMD Mortality rates Human Mortality Database. HFD Fertility rates Human Fertility Database. LFP Labor forcce participation rates OECD.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/generate.bage_ssvd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Age or Age-Sex Profiles — generate.bage_ssvd","text":"","code":"## SVD for females and males combined generate(HMD) #> # A tibble: 2,220 × 3 #>    draw   age   value #>    <fct>  <fct> <dbl> #>  1 Draw 1 0     -3.63 #>  2 Draw 1 1     -5.58 #>  3 Draw 1 2     -6.09 #>  4 Draw 1 3     -6.37 #>  5 Draw 1 4     -6.56 #>  6 Draw 1 5     -6.69 #>  7 Draw 1 6     -6.80 #>  8 Draw 1 7     -6.89 #>  9 Draw 1 8     -6.97 #> 10 Draw 1 9     -7.03 #> # ℹ 2,210 more rows  ## separate SVDs for females and males generate(HMD, indep = TRUE)  #> # A tibble: 4,440 × 4 #>    draw   sexgender age   value #>    <fct>  <fct>     <fct> <dbl> #>  1 Draw 1 Female    0     -3.99 #>  2 Draw 1 Female    1     -6.49 #>  3 Draw 1 Female    2     -6.89 #>  4 Draw 1 Female    3     -7.02 #>  5 Draw 1 Female    4     -7.10 #>  6 Draw 1 Female    5     -7.17 #>  7 Draw 1 Female    6     -7.19 #>  8 Draw 1 Female    7     -7.20 #>  9 Draw 1 Female    8     -7.17 #> 10 Draw 1 Female    9     -7.22 #> # ℹ 4,430 more rows  ## specify age groups labels <- poputils::age_labels(type = \"lt\", max = 60) generate(HMD, age_labels = labels) #> # A tibble: 280 × 3 #>    draw   age   value #>    <fct>  <fct> <dbl> #>  1 Draw 1 0     -4.14 #>  2 Draw 1 1-4   -7.02 #>  3 Draw 1 5-9   -7.67 #>  4 Draw 1 10-14 -7.69 #>  5 Draw 1 15-19 -6.89 #>  6 Draw 1 20-24 -6.60 #>  7 Draw 1 25-29 -6.47 #>  8 Draw 1 30-34 -6.21 #>  9 Draw 1 35-39 -5.85 #> 10 Draw 1 40-44 -5.42 #> # ℹ 270 more rows"},{"path":"https://bayesiandemography.github.io/bage/reference/is_fitted.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Whether a Model has Been Fitted — is_fitted","title":"Test Whether a Model has Been Fitted — is_fitted","text":"Test whether fit() called model object.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/is_fitted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Whether a Model has Been Fitted — is_fitted","text":"","code":"is_fitted(x)"},{"path":"https://bayesiandemography.github.io/bage/reference/is_fitted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Whether a Model has Been Fitted — is_fitted","text":"x object class \"bage_mod\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/is_fitted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Whether a Model has Been Fitted — is_fitted","text":"TRUE FALSE","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/is_fitted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Whether a Model has Been Fitted — is_fitted","text":"","code":"mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn) is_fitted(mod) #> [1] FALSE mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... is_fitted(mod) #> [1] TRUE"},{"path":"https://bayesiandemography.github.io/bage/reference/isl_deaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Deaths in Iceland — isl_deaths","title":"Deaths in Iceland — isl_deaths","text":"Deaths mid-year populations Iceland, age, sex, calendar year.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/isl_deaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deaths in Iceland — isl_deaths","text":"","code":"isl_deaths"},{"path":"https://bayesiandemography.github.io/bage/reference/isl_deaths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deaths in Iceland — isl_deaths","text":"tibble 5,300 rows following columns: age Single year age, \"105+\" sex \"Female\" \"Male\" time Calendar year, 1998-2022 deaths Counts deaths popn Mid-year population","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/isl_deaths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deaths in Iceland — isl_deaths","text":"Tables \"Deaths municipalities, sex age 1981-2022\", \"Average annual population municipality, age sex 1998-2022 - Current municipalities\", Statistics Iceland website. Data downloaded 12 July 2023.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/kor_births.html","id":null,"dir":"Reference","previous_headings":"","what":"Births in South Korea — kor_births","title":"Births in South Korea — kor_births","text":"Births mid-year population age mother, region, calendar year, 2011-2023, plus regional data GDP per capita population density.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/kor_births.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Births in South Korea — kor_births","text":"","code":"kor_births"},{"path":"https://bayesiandemography.github.io/bage/reference/kor_births.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Births in South Korea — kor_births","text":"tibble 1,872 rows following columns: age Five-year age groups \"10-14\" \"50-54\"` region Administrative region time Calendar year, 2011-2023 births Counts births popn Mid-year population gdp_pc_2023 Regional GDP per capita 2023 dens_2020 Regional population density (people per km-squared) 2020","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/kor_births.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Births in South Korea — kor_births","text":"Tables \"Live Births Age Group Mother, Sex Birth Order Provinces\", \"Resident Population Five-Year Age Groups\", Korean Statistical Information Service website. Data downloaded 24 September 2024. Data GDP per capita population density Wikipedia https://w.wiki/DMFA, data downloaded 8 March 2025, https://w.wiki/DMF9, data downloaded 8 March 2025.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a Binomial Model — mod_binom","title":"Specify a Binomial Model — mod_binom","text":"Specify model outcome drawn binomial distribution.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a Binomial Model — mod_binom","text":"","code":"mod_binom(formula, data, size)"},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a Binomial Model — mod_binom","text":"formula R formula, specifying outcome predictors. data data frame containing outcome predictor variables, number trials. size Name variable giving number trials, formula.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a Binomial Model — mod_binom","text":"object class bage_mod.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a Binomial Model — mod_binom","text":"model hierarchical. probabilities binomial distribution described prior model formed dimensions age, sex, time. terms dimension models, described priors. priors defaults, depend type term (eg intercept, age main effect, age-time interaction.)","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"specifying-size","dir":"Reference","previous_headings":"","what":"Specifying size","title":"Specify a Binomial Model — mod_binom","text":"size argument can take two forms: name variable data, without quote marks, eg \"population\" population; formula, evaluated data environment (see example).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify a Binomial Model — mod_binom","text":"likelihood $$y_i \\sim \\text{binomial}(\\gamma_i; w_i)$$ subscript \\(\\) identifies combination classifying variables, age, sex, time; \\(y_i\\) count, number births, age, sex, region; \\(\\gamma_i\\) probability 'success'; \\(w_i\\) number trials. probabilities \\(\\gamma_i\\) assumed drawn beta distribution $$y_i \\sim \\text{Beta}(\\xi^{-1} \\mu_i, \\xi^{-1} (1 - \\mu_i))$$ \\(\\mu_i\\) expected value \\(\\gamma_i\\); \\(\\xi\\) governs dispersion (ie variance.) Expected value \\(\\mu_i\\) equals, logit scale, sum terms formed classifying variables, $$\\text{logit} \\mu_i = \\sum_{m=0}^{M} \\beta_{j_i^m}^{(m)}$$ \\(\\beta^{0}\\) intercept; \\(\\beta^{(m)}\\), \\(m = 1, \\dots, M\\), main effect interaction; \\(j_i^m\\) element \\(\\beta^{(m)}\\) associated cell \\(\\). \\(\\beta^{(m)}\\) given priors, described priors. \\(\\xi\\) exponential prior mean 1. Non-default values mean can specified  set_disp(). model \\(\\mu_i\\) can also include covariates, described set_covariates().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/mod_binom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a Binomial Model — mod_binom","text":"","code":"mod <- mod_binom(oneperson ~ age:region + age:year,                  data = nzl_households,                  size = total)  ## use formula to specify size mod <- mod_binom(ncases ~ agegp + tobgp + alcgp,                  data = esoph,                  size = ~ ncases + ncontrols)"},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a Normal Model — mod_norm","title":"Specify a Normal Model — mod_norm","text":"Specify model outcome drawn normal distribution.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a Normal Model — mod_norm","text":"","code":"mod_norm(formula, data, weights)"},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a Normal Model — mod_norm","text":"formula R formula, specifying outcome predictors. data data frame containing outcome, predictor, , optionally, weights variables. weights Name weights variable, 1, formula. See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a Normal Model — mod_norm","text":"object class bage_mod_norm.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a Normal Model — mod_norm","text":"model hierarchical. means normal distribution described prior model formed dimensions age, sex, time. terms dimension models, described priors. priors defaults, depend type term (eg intercept, age main effect, age-time interaction.)","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"scaling-of-outcome-and-weights","dir":"Reference","previous_headings":"","what":"Scaling of outcome and weights","title":"Specify a Normal Model — mod_norm","text":"Internally, mod_norm() scales outcome variable mean 0 standard deviation 1, scales weights mean 1. scaling allows mod_norm() use menu priors mod_pois() mod_binom(). augment() always returns values original scale, rather transformed scale. components() default returns values transformed scale. original_scale TRUE, returns types values original scale. See components() details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"specifying-weights","dir":"Reference","previous_headings":"","what":"Specifying weights","title":"Specify a Normal Model — mod_norm","text":"weights argument can take three forms: name variable data, without quote marks, eg \"wt\" wt; number 1, weights used; formula, evaluated data environment (see example).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify a Normal Model — mod_norm","text":"likelihood $$y_i \\sim \\text{N}(\\gamma_i, w_i^{-1} \\sigma^2)$$ subscript \\(\\) identifies combination classifying variables, age, sex, time, \\(y_i\\) value outcome variable, \\(w_i\\) weight. applications, \\(w_i\\) set 1 \\(\\). Internally, bage works standardized versions \\(\\gamma_i\\) \\(\\sigma^2\\): $$\\mu_i = (\\gamma_i - \\bar{y}) / s$$ $$\\xi^2 = \\sigma^2 / (\\bar{w} s^2)$$ $$\\bar{y} = \\sum_{=1}^n y_i / n$$ $$s = \\sqrt{\\sum_{=1}^n (y_i - \\bar{y})^2 / (n-1)}$$ $$\\bar{w} = \\sum_{=1}^n w_i / n$$ Mean parameter \\(\\mu_i\\) modelled sum terms formed classifying variables covariates, $$\\mu_i = \\sum_{m=0}^{M} \\beta_{j_i^m}^{(m)}$$ \\(\\beta^{0}\\) intercept; \\(\\beta^{(m)}\\), \\(m = 1, \\dots, M\\), main effect interaction; \\(j_i^m\\) element \\(\\beta^{(m)}\\) associated cell \\(\\), \\(\\beta^{(m)}\\) given priors, described priors. \\(\\xi\\) exponential prior mean 1. Non-default values mean can specified set_disp(). model \\(\\mu_i\\) can also include covariates, described set_covariates().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/mod_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a Normal Model — mod_norm","text":"","code":"mod <- mod_norm(value ~ diag:age + year,                 data = nld_expenditure,                 weights = 1)  ## use formula to specify weights mod <- mod_norm(value ~ diag:age + year,                 data = nld_expenditure,                 weights = ~sqrt(value))"},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a Poisson Model — mod_pois","title":"Specify a Poisson Model — mod_pois","text":"Specify model outcome drawn Poisson distribution.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a Poisson Model — mod_pois","text":"","code":"mod_pois(formula, data, exposure)"},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a Poisson Model — mod_pois","text":"formula R formula, specifying outcome predictors. data data frame containing outcome, predictor, , optionally, exposure variables. exposure Name exposure variable, 1, formula. See details.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a Poisson Model — mod_pois","text":"object class bage_mod_pois.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a Poisson Model — mod_pois","text":"model hierarchical. rates Poisson distribution described prior model formed dimensions age, sex, time. terms dimension models, described priors. priors defaults, depend type term (eg intercept, age main effect, age-time interaction.)","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"specifying-exposure","dir":"Reference","previous_headings":"","what":"Specifying exposure","title":"Specify a Poisson Model — mod_pois","text":"exposure argument can take three forms: name variable data, without quote marks, eg \"population\" population; number 1, case pure \"counts\" model exposure, produced; formula, evaluated data environment (see example).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify a Poisson Model — mod_pois","text":"likelihood $$y_i \\sim \\text{Poisson}(\\gamma_i w_i)$$ subscript \\(\\) identifies combination classifying variables, age, sex, time; \\(y_i\\) outcome, deaths; \\(\\gamma_i\\) rates; \\(w_i\\) exposure. applications, obvious population risk. cases, exposure \\(w_i\\) can set 1 \\(\\). rates \\(\\gamma_i\\) assumed drawn gamma distribution $$y_i \\sim \\text{Gamma}(\\xi^{-1}, (\\xi \\mu_i)^{-1})$$ \\(\\mu_i\\) expected value \\(\\gamma_i\\); \\(\\xi\\) governs dispersion (.e. variation), lower values implying less dispersion. Expected value \\(\\mu_i\\) equals, log scale, sum terms formed classifying variables, $$\\log \\mu_i = \\sum_{m=0}^{M} \\beta_{j_i^m}^{(m)}$$ \\(\\beta^{0}\\) intercept; \\(\\beta^{(m)}\\), \\(m = 1, \\dots, M\\), main effect interaction; \\(j_i^m\\) element \\(\\beta^{(m)}\\) associated cell \\(\\). \\(\\beta^{(m)}\\) given priors, described priors. \\(\\xi\\) exponential prior mean 1. Non-default values mean can specified  set_disp(). model \\(\\mu_i\\) can also include covariates, described set_covariates().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/mod_pois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a Poisson Model — mod_pois","text":"","code":"## specify a model with exposure mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn)  ## specify a model without exposure mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = 1)  ## use a formula to specify exposure mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = ~ pmax(popn, 1))"},{"path":"https://bayesiandemography.github.io/bage/reference/nld_expenditure.html","id":null,"dir":"Reference","previous_headings":"","what":"Per Capita Health Expenditure in the Netherlands, 2003-2011 — nld_expenditure","title":"Per Capita Health Expenditure in the Netherlands, 2003-2011 — nld_expenditure","text":"Per capita health expenditure, Euros, diagnostic group, age group, year, Netherlands.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nld_expenditure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Per Capita Health Expenditure in the Netherlands, 2003-2011 — nld_expenditure","text":"","code":"nld_expenditure"},{"path":"https://bayesiandemography.github.io/bage/reference/nld_expenditure.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Per Capita Health Expenditure in the Netherlands, 2003-2011 — nld_expenditure","text":"tibble 1,296 rows following columns: diag Diagnostic group age 5-year age groups, open age group 85+ year 2003, 2005, 2007, 2011","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nld_expenditure.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Per Capita Health Expenditure in the Netherlands, 2003-2011 — nld_expenditure","text":"Calculated data table \"Expenditure disease, age gender System Health Accounts (SHA) Framework : Current health spending age\" OECD database 'OECD.Stat' (downloaded 25 May 2016) table \"Historical population data projections (1950-2050)\" OECD database 'OECD.Stat' (downloaded 5 June 2016).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_divorces.html","id":null,"dir":"Reference","previous_headings":"","what":"Divorces in New Zealand — nzl_divorces","title":"Divorces in New Zealand — nzl_divorces","text":"Counts divorces population, age, sex, calendar year, New Zealand, 2011-2021.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_divorces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divorces in New Zealand — nzl_divorces","text":"","code":"nzl_divorces"},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_divorces.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Divorces in New Zealand — nzl_divorces","text":"tibble 242 rows following columns: age: 5-year age groups, \"15-19\" \"65+\" sex: \"Female\" \"Male\" time: Calendar year divorces: Numbers divorces year population: Person-years lived year","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_divorces.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Divorces in New Zealand — nzl_divorces","text":"Divorce counts data table \"Age divorces sex (marriages civil unions) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 22 March 2023. Population estimates derived data table \"Estimated Resident Population Age Sex (1991+) (Annual-Dec)\" online database Infoshare Statistics New Zealand website. Data downloaded 26 March 2023.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_households.html","id":null,"dir":"Reference","previous_headings":"","what":"People in One-Person Households in New Zealand — nzl_households","title":"People in One-Person Households in New Zealand — nzl_households","text":"Counts people one-person households, counts people living household, age, region, year.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_households.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"People in One-Person Households in New Zealand — nzl_households","text":"","code":"nzl_households"},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_households.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"People in One-Person Households in New Zealand — nzl_households","text":"tibble 528 rows following columns: age: 5-year age groups, open age group 65+ region: Region within New Zealand year: Calendar year oneperson: Count people living one-person households total: Count people living types household","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_households.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"People in One-Person Households in New Zealand — nzl_households","text":"Derived data table \"Household composition age group, people households occupied private dwellings, 2006, 2013, 2018 Censuses (RC, TA, DHB, SA2)\" online database NZ.Stat, Statistics New Zealand website. Data downloaded 3 January 2023.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Fatal Injuries in New Zealand — nzl_injuries","title":"Fatal Injuries in New Zealand — nzl_injuries","text":"Counts fatal injuries New Zealand, age, sex, ethnicity, year, plus estimates population risk.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fatal Injuries in New Zealand — nzl_injuries","text":"","code":"nzl_injuries"},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fatal Injuries in New Zealand — nzl_injuries","text":"tibble 912 rows following columns: age: 5-year age groups, age 55-59 sex: \"Female\" \"Male\" ethnicity: \"Maori\" \"Non Maori\" year: Calendar year injuries: Count injuries, randomly rounded base 3 popn: Population 30 June","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/nzl_injuries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fatal Injuries in New Zealand — nzl_injuries","text":"Derived data tables \"Estimated Resident Population Age Sex (1991+) (Annual-Jun)\" \"Maori Ethnic Group Estimated Resident Population Age Sex (1991+) (Annual-Jun)\" online database Infoshare, table \"Count fatal serious non-fatal injuries sex, age group, ethnicity, cause, severity injury, 2000-2021\" online database NZ.Stat, Statistics New Zealand website. Data downloaded 1 January 2023.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/print.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing a Model — print.bage_mod","title":"Printing a Model — print.bage_mod","text":"calling function mod_pois() set_prior() good practice print model object console, check model's structure. output print() following components: header giving class model noting whether model fitted. formula giving outcome variable terms model. table giving number parameters, (fitted models ) standard deviation across parameters, measure term's importance. See priors() tidy(). Values model settings. See set_disp(), set_var_age(), set_var_sexgender(), set_var_time(), set_n_draw() Details computations (fitted models ). See computations().","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/print.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing a Model — print.bage_mod","text":"","code":"# S3 method for class 'bage_mod' print(x, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/print.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing a Model — print.bage_mod","text":"x Object class \"bage_mod\", typically created mod_pois(), mod_binom(), mod_norm(). ... Unused. Included generic consistency .","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/print.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing a Model — print.bage_mod","text":"x, invisibly.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/print.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing a Model — print.bage_mod","text":"","code":"mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn)  ## print unfitted model mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age + sex + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age    12         12 #>          sex NFix()     -     2          2 #>         year   RW()  year    19         19 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>   mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## print fitted model mod #>  #>     ------ Fitted Poisson model ------ #>  #>    injuries ~ age + sex + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free std_dev #>  (Intercept) NFix()     -     1          1       - #>          age   RW()   age    12         12    0.76 #>          sex NFix()     -     2          2    0.72 #>         year   RW()  year    19         19    0.08 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender optimizer #>    1000     year     age           sex    nlminb #>  #>  time_total time_max time_draw iter converged                    message #>        0.25     0.11      0.11   13      TRUE   relative convergence (4) #>"},{"path":"https://bayesiandemography.github.io/bage/reference/priors.html","id":null,"dir":"Reference","previous_headings":"","what":"Priors for Intercept, Main Effects, Interactions — priors","title":"Priors for Intercept, Main Effects, Interactions — priors","text":"models created functions mod_pois(), mod_binom(), mod_norm() always include intercept, typically include main effects interactions formed variables input data. models, instance include age effect, many include interaction age sex/gender, age time. intercept, main effects, interactions prior models capture expected behavior term. Current choices priors summarised table . Priors 'forecast' yes can used forecasts time-varying terms age-time interactions. Priors 'along' yes distinguish 'along' '' dimensions.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/priors.html","id":"default-prior","dir":"Reference","previous_headings":"","what":"Default prior","title":"Priors for Intercept, Main Effects, Interactions — priors","text":"rule selecting default prior term : term less 3 elements, use NFix(); otherwise, term involves time, use RW(), time `along' dimension; otherwise, term involves age, use RW(), age `along' dimension; otherwise, use N().","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/prt_deaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Deaths in Portugal — prt_deaths","title":"Deaths in Portugal — prt_deaths","text":"Deaths exposure Portugal, age, sex, year.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/prt_deaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deaths in Portugal — prt_deaths","text":"","code":"prt_deaths"},{"path":"https://bayesiandemography.github.io/bage/reference/prt_deaths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Deaths in Portugal — prt_deaths","text":"tibble 3,168 rows following columns: age: Age groups \"0\", \"1-4\", \"5-9\", ..., \"95-99\", \"100+\" sex: \"Female\" \"Male\" time: Calendar year deaths: Count deaths exposure: Person-years lived population","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/prt_deaths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Deaths in Portugal — prt_deaths","text":"Human Mortality Database. University California, Berkeley (USA), Max Planck Institute Demographic Research (Germany). Available https://www.mortality.org. (data downloaded 17 July 2018).","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/prt_deaths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deaths in Portugal — prt_deaths","text":"data Human Mortality Database. Deaths rounded nearest integer.  recent versions, comprehensive description data, available HMD website.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, components, fit, forecast, generate, tidy","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Replicate Data — replicate_data","title":"Create Replicate Data — replicate_data","text":"Use fitted model create replicate datasets, typically way checking model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Replicate Data — replicate_data","text":"","code":"replicate_data(x, condition_on = NULL, n = 19)"},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Replicate Data — replicate_data","text":"x fitted model, typically created calling mod_pois(), mod_binom(), mod_norm(), fit(). condition_on Parameters condition . Either \"expected\" \"fitted\". See details. n Number replicate datasets create. Default 19.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Replicate Data — replicate_data","text":"tibble following structure:","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Replicate Data — replicate_data","text":"Use n draws posterior distribution model parameters generate n simulated datasets. model working well, simulated datasets look similar actual dataset.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"the-condition-on-argument","dir":"Reference","previous_headings":"","what":"The condition_on argument","title":"Create Replicate Data — replicate_data","text":"Poisson binomial models include dispersion terms (default), two options constructing replicate data. condition_on \"fitted\", replicate data created () drawing values posterior distribution rates probabilities (\\(\\gamma_i\\) defined mod_pois() mod_binom()), (ii)  conditional rates probabilities, drawing values outcome variable. condition_on \"expected\", replicate data created () drawing values hyper-parameters governing rates probabilities (\\(\\mu_i\\) \\(\\xi\\) defined mod_pois() mod_binom()), (ii) conditional hyper-parameters, drawing values rates probabilities, finally (iii) conditional rates probabilities, drawing values outcome variable. default condition_on \"expected\". \"expected\" option provides severe test model \"fitted\" option, since \"fitted\" values weighted averages \"expected\" values original data. described mod_norm(), normal models different structure Poisson binomial models, distinction \"fitted\" \"expected\" apply.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"data-models-for-outcomes","dir":"Reference","previous_headings":"","what":"Data models for outcomes","title":"Create Replicate Data — replicate_data","text":"data model provided outcome variable, creation replicate data include step errors added outcomes. instance, rr3 data model used, replicate_data() rounds outcomes base 3.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/replicate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Replicate Data — replicate_data","text":"","code":"mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = 1) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  rep_data <- mod |>   replicate_data() #> Drawing `.expected`... #> Drawing `.fitted`...  library(dplyr) rep_data |>   group_by(.replicate) |>   count(wt = injuries) #> # A tibble: 20 × 2 #> # Groups:   .replicate [20] #>    .replicate       n #>    <fct>        <dbl> #>  1 Original     21588 #>  2 Replicate 1  21780 #>  3 Replicate 2  20943 #>  4 Replicate 3  21292 #>  5 Replicate 4  20879 #>  6 Replicate 5  21275 #>  7 Replicate 6  22639 #>  8 Replicate 7  21125 #>  9 Replicate 8  21521 #> 10 Replicate 9  21185 #> 11 Replicate 10 20950 #> 12 Replicate 11 21565 #> 13 Replicate 12 21722 #> 14 Replicate 13 21050 #> 15 Replicate 14 21202 #> 16 Replicate 15 21560 #> 17 Replicate 16 20659 #> 18 Replicate 17 20952 #> 19 Replicate 18 21364 #> 20 Replicate 19 21656  ## when the overall model includes an rr3 data model, ## replicate data are rounded to base 3 mod_pois(injuries ~ age:sex + ethnicity + year,          data = nzl_injuries,          exposure = popn) |>   set_datamod_outcome_rr3() |>   fit() |>   replicate_data() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Drawing `.injuries`... #> # A tibble: 18,240 × 7 #>    .replicate age   sex    ethnicity  year injuries  popn #>    <fct>      <fct> <chr>  <chr>     <int>    <dbl> <int> #>  1 Original   0-4   Female Maori      2000       12 35830 #>  2 Original   5-9   Female Maori      2000        6 35120 #>  3 Original   10-14 Female Maori      2000        3 32830 #>  4 Original   15-19 Female Maori      2000        6 27130 #>  5 Original   20-24 Female Maori      2000        6 24380 #>  6 Original   25-29 Female Maori      2000        6 24160 #>  7 Original   30-34 Female Maori      2000       12 22560 #>  8 Original   35-39 Female Maori      2000        3 22230 #>  9 Original   40-44 Female Maori      2000        6 18130 #> 10 Original   45-49 Female Maori      2000        6 13770 #> # ℹ 18,230 more rows"},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation Study of a Model — report_sim","title":"Simulation Study of a Model — report_sim","text":"Use simulated data assess performance estimation model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation Study of a Model — report_sim","text":"","code":"report_sim(   mod_est,   mod_sim = NULL,   method = c(\"standard\", \"inner-outer\"),   vars_inner = NULL,   n_sim = 100,   point_est_fun = c(\"median\", \"mean\"),   widths = c(0.5, 0.95),   report_type = c(\"short\", \"long\", \"full\"),   n_core = 1 )"},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation Study of a Model — report_sim","text":"mod_est model whose performance assessed. object class bage_mod. mod_sim model used generate simulated data. value supplied, mod_est used. method Estimation method used mod_est. See fit(). vars_inner Variables used inner model \"inner-outer\"estimation method. See fit(). n_sim Number sets simulated data use. Default 100. point_est_fun Name function use calculate point estimates. options \"mean\" \"median\". default \"mean\". widths Widths credible intervals. vector values interval (0, 1]. Default c(0.5, 0.95). report_type Amount detail return value. Options \"short\" \"long\". Default \"short\". n_core Number cores use parallel processing. n_core 1 (default), parallel processing done.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation Study of a Model — report_sim","text":"named list tibble called \"components\" tibble called \"augment\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Simulation Study of a Model — report_sim","text":"interface report_sim() still development may change future.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/report_sim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation Study of a Model — report_sim","text":"","code":"## results random, so set seed set.seed(0)  ## make data - outcome variable (deaths here) ## needs to be present, but is not used data <- data.frame(region = c(\"A\", \"B\", \"C\", \"D\", \"E\"),                    population = c(100, 200, 300, 400, 500),                    deaths = NA)  ## simulation with estimation model same as ## data-generating model mod_est <- mod_pois(deaths ~ region,                     data = data,                     exposure = population) |>   set_prior(`(Intercept)` ~ Known(0)) report_sim(mod_est = mod_est,            n_sim = 10) ## in practice should use larger value #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> $components #> # A tibble: 4 × 7 #>   term        component  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>       <chr>       <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 (Intercept) effect     0           1         1         0           0    #> 2 region      effect    -0.0348      0.62      0.98      0.995       2.92 #> 3 region      hyper      0.0360      0.4       0.9       0.582       1.94 #> 4 disp        disp       0.0496      0.5       0.9       0.765       2.84 #>  #> $augment #> # A tibble: 2 × 7 #>   .var      .observed  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>         <dbl>   <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 .fitted        4.41 -0.0102      0.6       0.96      0.115      0.340 #> 2 .expected      4.41 -0.545       0.62      0.98      2.92      15.4   #>   ## simulation with estimation model different ## from data-generating model mod_sim <- mod_est |>   set_prior(region ~ N(s = 2)) report_sim(mod_est = mod_est,            mod_sim = mod_sim,            n_sim = 10) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... #> Drawing `.expected`... #> Drawing `.fitted`... #> $components #> # A tibble: 4 × 7 #>   term        component  .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>       <chr>       <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 (Intercept) effect     0            1        1         0           0    #> 2 region      effect     0.0944       0.6      0.98      1.16        3.35 #> 3 region      hyper     -0.479        0.2      0.8       0.644       2.11 #> 4 disp        disp       0.109        0.5      0.8       0.977       4.46 #>  #> $augment #> # A tibble: 2 × 7 #>   .var      .observed .error .cover_50 .cover_95 .length_50 .length_95 #>   <chr>         <dbl>  <dbl>     <dbl>     <dbl>      <dbl>      <dbl> #> 1 .fitted        157.  0.200      0.58      0.96      0.382       1.10 #> 2 .expected      157. -1.27       0.6       0.98    146.        685.   #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Covariates — set_covariates","title":"Specify Covariates — set_covariates","text":"Add covariates model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Covariates — set_covariates","text":"","code":"set_covariates(mod, formula)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Covariates — set_covariates","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). formula one-sided R formula, specifying covariates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Covariates — set_covariates","text":"modified version mod","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Covariates — set_covariates","text":"set_covariates() applied model already covariates, set_covariates() deletes existing covariates. set_covariates() applied fitted model, set_covariates() unfits model, deleting existing estimates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"covariate-data","dir":"Reference","previous_headings":"","what":"Covariate data","title":"Specify Covariates — set_covariates","text":"variables contained formula argument set_covariates() dataset supplied original call mod_pois(), mod_binom(), mod_norm(). set_covariates() processes covariate data adding model: numeric variables standardized, using x <- scale(x). Categorical variables converted sets indicator variables, using treatment contrasts. instance, variable x categories \"high\", \"medium\", \"low\", converted two indicator variables, one called xmedium one called xlow.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"mathematical-details","dir":"Reference","previous_headings":"","what":"Mathematical details","title":"Specify Covariates — set_covariates","text":"model includes covariates, quantity $$\\pmb{Z} \\pmb{\\zeta}$$ added linear predictor, \\(\\pmb{Z}\\) matrix standardized covariates, \\(\\pmb{\\zeta}\\) vector coefficients. elements \\(\\pmb{\\zeta}\\) prior $$\\zeta_p \\sim \\text{N}(0, 1)$$.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_covariates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Covariates — set_covariates","text":"","code":"## create a COVID covariate library(dplyr, warn.conflicts = FALSE) births <- kor_births |>   mutate(is_covid = time %in% 2020:2022) mod <- mod_pois(births ~ age * region + time,                 data = births,                 exposure = popn) |>   set_covariates(~ is_covid) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    births ~ age * region + time #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age     9          9 #>       region    N()     -    16         16 #>         time   RW()  time    13         13 #>   age:region   RW()   age   144        144 #>  #>  covariates: ~is_covid #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age #>    1000     time     age #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify RR3 Data Model — set_datamod_outcome_rr3","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"Specify data model outcome variable randomly rounded base 3.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"","code":"set_datamod_outcome_rr3(mod)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm().","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"modified version mod.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"set_datamod_outcome_rr3() can used Poisson binomial models (created mod_pois() mod_binom().) Random rounding base 3 (RR3) confidentialization technique sometimes applied statistical agencies. RR3 applied integer data. procedure rounding value \\(n\\) follows: \\(n\\) divisible 3, leave unchanged dividing \\(n\\) 3 leaves remainder 1, round (subtract 1) probability 2/3, round (add 2) probability 1/3. dividing \\(n\\) 3 leaves remainder 1, round (subtract 2) probability 1/3, round (add 1) probability 2/3. set_datamod_outcome_rr3() applied fitted model, set_datamod_outcome_rr3() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_datamod_outcome_rr3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify RR3 Data Model — set_datamod_outcome_rr3","text":"","code":"## 'injuries' variable in 'nzl_injuries' dataset ## has been randomly rounded to base 3 mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn) |>   set_datamod_outcome_rr3() |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters..."},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Prior for Dispersion or Standard Deviation — set_disp","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"Specify mean prior dispersion parameter (Poisson binomial models) standard deviation parameter (normal models.)","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"","code":"set_disp(mod, mean = 1)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). mean Mean value exponential prior. Poisson binomial models, can set 0. Default 1.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"bage_mod object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"dispersion mean parameter exponential distribution mean \\(\\mu\\), $$p(\\xi) = \\frac{1}{\\mu}\\exp\\left(\\frac{-\\xi}{\\mu}\\right).$$ default \\(\\mu\\) equals 1. Poisson binomial models, mean can set 0, implying dispersion term also 0. normal models, mean must non-negative. set_disp() applied fitted model, set_disp() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_disp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Prior for Dispersion or Standard Deviation — set_disp","text":"","code":"mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>    ethnicity NFix()     -     2          2 #>         year   RW()  year    19         19 #>      age:sex   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>  mod |> set_disp(mean = 0.1) #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>    ethnicity NFix()     -     2          2 #>         year   RW()  year    19         19 #>      age:sex   RW()   age    24         24 #>  #>  disp: mean = 0.1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>  mod |> set_disp(mean = 0) #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>    ethnicity NFix()     -     2          2 #>         year   RW()  year    19         19 #>      age:sex   RW()   age    24         24 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"Specify number draws posterior distribution used model output. newly-created bage_mod object n_draw value 1000. Higher values may appropriate characterizing tails distributions, publication-quality graphics summaries.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"","code":"set_n_draw(mod, n_draw = 1000L)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). n_draw Number draws.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"bage_mod object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"new value n_draw greater old value, model already fitted, model unfitted, function fit() may need called .","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_n_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Number of Draws from Prior or Posterior Distribution — set_n_draw","text":"","code":"mod <- mod_pois(injuries ~ age:sex + ethnicity + year,                 data = nzl_injuries,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>    ethnicity NFix()     -     2          2 #>         year   RW()  year    19         19 #>      age:sex   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    1000     year     age           sex #>   mod |>   set_n_draw(n_draw = 5000) #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age:sex + ethnicity + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>    ethnicity NFix()     -     2          2 #>         year   RW()  year    19         19 #>      age:sex   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age var_sexgender #>    5000     year     age           sex #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Prior for Model Term — set_prior","title":"Specify Prior for Model Term — set_prior","text":"Specify prior distribution intercept, main effect, interaction.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Prior for Model Term — set_prior","text":"","code":"set_prior(mod, formula)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Prior for Model Term — set_prior","text":"mod bage_mod object, created mod_pois(), mod_binom(), mod_norm(). formula formula giving term function creating prior.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Prior for Model Term — set_prior","text":"modified bage_mod object.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Prior for Model Term — set_prior","text":"set_prior() applied fitted model, set_prior() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Prior for Model Term — set_prior","text":"","code":"mod <- mod_pois(injuries ~ age + year,                 data = nzl_injuries,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age   RW()   age    12         12 #>         year   RW()  year    19         19 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age #>    1000     year     age #>  mod |> set_prior(age ~ RW2()) #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age + year #>  #>   exposure = popn #>  #>         term  prior along n_par n_par_free #>  (Intercept) NFix()     -     1          1 #>          age  RW2()   age    12         12 #>         year   RW()  year    19         19 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age #>    1000     year     age #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset Random Seeds in Model Object — set_seeds","title":"Reset Random Seeds in Model Object — set_seeds","text":"Reset random seeds stored model object. new_seeds NULL (default), new seeds generated randomly; otherwise taken new_seeds.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset Random Seeds in Model Object — set_seeds","text":"","code":"set_seeds(mod, new_seeds = NULL)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset Random Seeds in Model Object — set_seeds","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). new_seeds NULL (default) list integers names \"seed_components\" \"seed_augment\", \"seed_forecast_components\", \"seed_forecast_augment\".","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset Random Seeds in Model Object — set_seeds","text":"modified version mod.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reset Random Seeds in Model Object — set_seeds","text":"object class \"bage_mod\" first created, values generated four four random seeds: seed_components seed_augment seed_forecast_components seed_forecast_augment fit(), components(), augment(), forecast() called model object, seeds used internally ensure inputs generate outputs, even outputs involve random draws. End users unlikely call set_seeds() data analysis, though may occasionally useful building simulation scratch.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_seeds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset Random Seeds in Model Object — set_seeds","text":"","code":"## fit model mod <- mod_pois(injuries ~ age,                 data = nzl_injuries,                 exposure = popn) |>   fit() #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## call 'components()' components(mod) #> # A tibble: 15 × 4 #>    term        component level                  .fitted #>    <chr>       <chr>     <chr>             <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -2.4 (-5.1, 0.11) #>  2 age         effect    0-4         -2.5 (-5.3, 0.092) #>  3 age         effect    5-9            -4 (-6.6, -1.5) #>  4 age         effect    10-14        -4.9 (-7.8, -1.7) #>  5 age         effect    15-19          -5 (-7.9, -2.1) #>  6 age         effect    20-24          -5.2 (-8, -2.4) #>  7 age         effect    25-29        -5.4 (-8.3, -2.5) #>  8 age         effect    30-34        -5.4 (-8.3, -2.4) #>  9 age         effect    35-39        -5.4 (-8.5, -2.4) #> 10 age         effect    40-44        -5.4 (-8.4, -2.4) #> 11 age         effect    45-49        -5.4 (-8.5, -2.1) #> 12 age         effect    50-54        -5.5 (-8.4, -2.2) #> 13 age         effect    55-59        -5.4 (-8.5, -2.3) #> 14 age         hyper     sd            0.93 (0.28, 2.7) #> 15 disp        disp      disp              1.3 (0.4, 4)  ## call 'components()' again - same results components(mod) #> # A tibble: 15 × 4 #>    term        component level                  .fitted #>    <chr>       <chr>     <chr>             <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)  -2.4 (-5.1, 0.11) #>  2 age         effect    0-4         -2.5 (-5.3, 0.092) #>  3 age         effect    5-9            -4 (-6.6, -1.5) #>  4 age         effect    10-14        -4.9 (-7.8, -1.7) #>  5 age         effect    15-19          -5 (-7.9, -2.1) #>  6 age         effect    20-24          -5.2 (-8, -2.4) #>  7 age         effect    25-29        -5.4 (-8.3, -2.5) #>  8 age         effect    30-34        -5.4 (-8.3, -2.4) #>  9 age         effect    35-39        -5.4 (-8.5, -2.4) #> 10 age         effect    40-44        -5.4 (-8.4, -2.4) #> 11 age         effect    45-49        -5.4 (-8.5, -2.1) #> 12 age         effect    50-54        -5.5 (-8.4, -2.2) #> 13 age         effect    55-59        -5.4 (-8.5, -2.3) #> 14 age         hyper     sd            0.93 (0.28, 2.7) #> 15 disp        disp      disp              1.3 (0.4, 4)  ## reset seeds mod <- set_seeds(mod)  ## calling 'set_seeds' unfits the model is_fitted(mod) #> [1] FALSE  ## so we fit it again mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters...  ## when we call components, we get ## different results from earlier components(mod) #> # A tibble: 15 × 4 #>    term        component level                 .fitted #>    <chr>       <chr>     <chr>            <rdbl<1000>> #>  1 (Intercept) effect    (Intercept)   -2.3 (-5, 0.38) #>  2 age         effect    0-4         -2.4 (-4.8, 0.37) #>  3 age         effect    5-9         -3.9 (-6.5, -1.5) #>  4 age         effect    10-14       -4.8 (-7.8, -1.9) #>  5 age         effect    15-19         -5.1 (-8, -2.3) #>  6 age         effect    20-24       -5.3 (-8.2, -2.3) #>  7 age         effect    25-29       -5.4 (-8.2, -2.4) #>  8 age         effect    30-34       -5.4 (-8.6, -2.4) #>  9 age         effect    35-39       -5.4 (-8.7, -2.5) #> 10 age         effect    40-44       -5.5 (-8.6, -2.3) #> 11 age         effect    45-49       -5.5 (-8.5, -2.4) #> 12 age         effect    50-54       -5.5 (-8.6, -2.4) #> 13 age         effect    55-59       -5.5 (-8.7, -2.4) #> 14 age         hyper     sd           0.96 (0.31, 2.9) #> 15 disp        disp      disp          1.3 (0.43, 4.2)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Age Variable — set_var_age","title":"Specify Age Variable — set_var_age","text":"Specify variable () represents age. Functions mod_pois(), mod_binom(), mod_norm() try infer age variable variable names, always get right.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Age Variable — set_var_age","text":"","code":"set_var_age(mod, name)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Age Variable — set_var_age","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). name name age variable.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Age Variable — set_var_age","text":"bage_mod object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Age Variable — set_var_age","text":"R formula, 'variable' different 'term'. instance, ~ age + region + age:region contains variables age region, terms age, region, age:region. default, bage gives term involving age (RW()) prior. Changing age variable via set_var_age() can change priors: see example. set_var_age() applied fitted model, set_var_age() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Age Variable — set_var_age","text":"","code":"## rename 'age' variable to something unusual injuries2 <- nzl_injuries injuries2$age_last_birthday <- injuries2$age  ## mod_pois does not recognize age variable mod <- mod_pois(injuries ~ age_last_birthday * ethnicity + year,                 data = injuries2,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age_last_birthday * ethnicity + year #>  #>   exposure = popn #>  #>                         term  prior along n_par n_par_free #>                  (Intercept) NFix()     -     1          1 #>            age_last_birthday    N()     -    12         12 #>                    ethnicity NFix()     -     2          2 #>                         year   RW()  year    19         19 #>  age_last_birthday:ethnicity    N()     -    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time #>    1000     year #>   ## so we set the age variable explicitly ## (which, as a side effect, changes the prior on ## the age main effect) mod |>   set_var_age(name = \"age_last_birthday\") #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age_last_birthday * ethnicity + year #>  #>   exposure = popn #>  #>                         term  prior             along n_par n_par_free #>                  (Intercept) NFix()                 -     1          1 #>            age_last_birthday   RW() age_last_birthday    12         12 #>                    ethnicity NFix()                 -     2          2 #>                         year   RW()              year    19         19 #>  age_last_birthday:ethnicity    N()                 -    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time           var_age #>    1000     year age_last_birthday #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Sex or Gender Variable — set_var_sexgender","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"Specify variable () represents sex gender. Functions mod_pois(), mod_binom(), mod_norm() try infer sex/gender variable variable names, always get right.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"","code":"set_var_sexgender(mod, name)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). name name sex gender variable.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"\"bage_mod\" object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"R formula, 'variable' different 'term'. instance, ~ gender + region + gender:region contains variables gender region, terms gender, region, gender:region. set_var_sexgender() applied fitted model, set_var_sexgender() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_sexgender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Sex or Gender Variable — set_var_sexgender","text":"","code":"## rename 'sex' variable to something unexpected injuries2 <- nzl_injuries injuries2$biological_sex <- injuries2$sex  ## mod_pois does not recognize sex variable mod <- mod_pois(injuries ~ age * biological_sex + year,                 data = injuries2,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age * biological_sex + year #>  #>   exposure = popn #>  #>                term  prior along n_par n_par_free #>         (Intercept) NFix()     -     1          1 #>                 age   RW()   age    12         12 #>      biological_sex NFix()     -     2          2 #>                year   RW()  year    19         19 #>  age:biological_sex   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age #>    1000     year     age #>   ## so we set the sex variable explicitly mod |>   set_var_sexgender(name = \"biological_sex\") #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age * biological_sex + year #>  #>   exposure = popn #>  #>                term  prior along n_par n_par_free #>         (Intercept) NFix()     -     1          1 #>                 age   RW()   age    12         12 #>      biological_sex NFix()     -     2          2 #>                year   RW()  year    19         19 #>  age:biological_sex   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_time var_age  var_sexgender #>    1000     year     age biological_sex #>"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Time Variable — set_var_time","title":"Specify Time Variable — set_var_time","text":"Specify variable () represents time. Functions mod_pois(), mod_binom(), mod_norm() try infer time variable variable names, always get right.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Time Variable — set_var_time","text":"","code":"set_var_time(mod, name)"},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Time Variable — set_var_time","text":"mod object class \"bage_mod\", created mod_pois(), mod_binom(), mod_norm(). name name time variable.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Time Variable — set_var_time","text":"bage_mod object","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify Time Variable — set_var_time","text":"R formula, 'variable' different 'term'. instance, ~ time + region + time:region contains variables time region, terms time, region, time:region. default, bage gives term involving time (RW()) prior. Changing time variable via set_var_time() can change priors: see example. set_var_time() applied fitted model, set_var_time() unfits model, deleting existing estimates.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/set_var_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify Time Variable — set_var_time","text":"","code":"## rename time variable to something unusual injuries2 <- nzl_injuries injuries2$calendar_year <- injuries2$year  ## mod_pois does not recognize time variable mod <- mod_pois(injuries ~ age * ethnicity + calendar_year,                 data = injuries2,                 exposure = popn) mod #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age * ethnicity + calendar_year #>  #>   exposure = popn #>  #>           term  prior along n_par n_par_free #>    (Intercept) NFix()     -     1          1 #>            age   RW()   age    12         12 #>      ethnicity NFix()     -     2          2 #>  calendar_year    N()     -    19         19 #>  age:ethnicity   RW()   age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw var_age #>    1000     age #>   ## so we set the time variable explicitly ## (which, as a side effect, changes the prior on ## the time main effect) mod |>   set_var_time(name = \"calendar_year\") #>  #>     ------ Unfitted Poisson model ------ #>  #>    injuries ~ age * ethnicity + calendar_year #>  #>   exposure = popn #>  #>           term  prior         along n_par n_par_free #>    (Intercept) NFix()             -     1          1 #>            age   RW()           age    12         12 #>      ethnicity NFix()             -     2          2 #>  calendar_year   RW() calendar_year    19         19 #>  age:ethnicity   RW()           age    24         24 #>  #>  disp: mean = 1 #>  #>  n_draw      var_time var_age #>    1000 calendar_year     age #>"},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":null,"dir":"Reference","previous_headings":"","what":"Infant Mortality in Sweden — swe_infant","title":"Infant Mortality in Sweden — swe_infant","text":"Counts births infant deaths Sweden county year, 1995-2015","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infant Mortality in Sweden — swe_infant","text":"","code":"swe_infant"},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Infant Mortality in Sweden — swe_infant","text":"tibble 441 rows following columns: county: factor 21 levels, levels ordered number births, \"Stockholm\" \"Gotland\" `time: Calendar year births: Count births deaths: Count infant deaths","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Infant Mortality in Sweden — swe_infant","text":"Database \"Live births region, mother's age child's sex. Year 1968 - 2017\" database \"Deaths region, age (year) sex. Year 1968 - 2017\" Statistics Sweden website. Downloaded 13 July 2018.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Infant Mortality in Sweden — swe_infant","text":"Dataset used Chapter 11 book Bayesian Demographic Estimation Forecasting.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/swe_infant.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Infant Mortality in Sweden — swe_infant","text":"Bryant J Zhang J. 2018. Bayesian Demographic Estimation Forecasting. CRC Press.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Terms from a Fitted Model — tidy.bage_mod","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"Summarize intercept, main effects, interactions fitted model.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"","code":"# S3 method for class 'bage_mod' tidy(x, ...)"},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"x Object class \"bage_mod\", typically created mod_pois(), mod_binom(), mod_norm(). ... Unused. Included generic consistency .","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"tibble","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"tibble returned tidy() contains following columns: term Name intercept, main effect, interaction prior Specification prior n_par Number parameters n_par_free Number free parameters std_dev Standard deviation point estimates. priors, number free parameters less number parameters term. instance, SVD() prior might use three vectors represent 101 age groups number parameters 101, number free parameters 3. std_dev standard deviation across elements term, based point estimates elements. instance, point estimates term three elements 0.3, 0.5, 0.1,  value std_dev   std_dev measure contribution term variation outcome variable.","code":"sd(c(0.3, 0.5, 0.1))"},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"std_dev modified Gelman et al. (2014) Bayesian Data Analysis. Third Edition. pp396–397.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/tidy.bage_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Terms from a Fitted Model — tidy.bage_mod","text":"","code":"mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn) mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... tidy(mod) #> # A tibble: 4 × 6 #>   term        prior  along n_par n_par_free std_dev #>   <chr>       <chr>  <chr> <int>      <int>   <dbl> #> 1 (Intercept) NFix() NA        1          1 NA      #> 2 age         RW()   age      12         12  0.756  #> 3 sex         NFix() NA        2          2  0.716  #> 4 year        RW()   year     19         19  0.0808"},{"path":"https://bayesiandemography.github.io/bage/reference/unfit.html","id":null,"dir":"Reference","previous_headings":"","what":"Unfit a Model — unfit","title":"Unfit a Model — unfit","text":"Reset model, deleting estimates.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/unfit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unfit a Model — unfit","text":"","code":"unfit(mod)"},{"path":"https://bayesiandemography.github.io/bage/reference/unfit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unfit a Model — unfit","text":"mod fitted object class \"bage_mod\", object, created call mod_pois(), mod_binom(), mod_norm().","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/unfit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unfit a Model — unfit","text":"unfitted version mod.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/reference/unfit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unfit a Model — unfit","text":"","code":"## create a model, which starts out unfitted mod <- mod_pois(injuries ~ age + sex + year,                 data = nzl_injuries,                 exposure = popn) is_fitted(mod) #> [1] FALSE  ## calling 'fit' produces a fitted version mod <- fit(mod) #> Building log-posterior function... #> Finding maximum... #> Drawing values for hyper-parameters... is_fitted(mod) #> [1] TRUE  ## calling 'unfit' resets the model mod <- unfit(mod) is_fitted(mod) #> [1] FALSE"},{"path":"https://bayesiandemography.github.io/bage/reference/usa_deaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Accidental Deaths in the USA — usa_deaths","title":"Accidental Deaths in the USA — usa_deaths","text":"Counts accidental deaths USA, month, 1973-1978.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/usa_deaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accidental Deaths in the USA — usa_deaths","text":"","code":"usa_deaths"},{"path":"https://bayesiandemography.github.io/bage/reference/usa_deaths.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Accidental Deaths in the USA — usa_deaths","text":"tibble 72 rows following columns: month: Year month. deaths: Count deaths.","code":""},{"path":"https://bayesiandemography.github.io/bage/reference/usa_deaths.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Accidental Deaths in the USA — usa_deaths","text":"Reformatted version datasets::USAccDeaths.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"interface-0-9-4","dir":"Changelog","previous_headings":"","what":"Interface","title":"bage 0.9.4","text":"Modified help mod_pois(), mod_binom(), mod_norm() clarify prior dispersion. Added default value (1) set_disp(). affect behaviour, bit clearer users. (#94) set_covariates(), added paragraph online documentation note calling set_covariates() model already covariates deletes existing covariates. Also added warning message set_covariates() covariates overwritten. (#95). mod_pois() emits message (warning) one rates suspiciously high (often sympton inaccurate exposures.) (#96)","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fix-0-9-4","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"bage 0.9.4","text":"Fixed bug set_n_draw(), failing thin covariate coefficient draws. (#97)","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"interface-0-9-3","dir":"Changelog","previous_headings":"","what":"Interface","title":"bage 0.9.3","text":"online help mod_norm() Mathematical Details vignette (vignette 2), give new parameterisation mod_norm() model, expressed original scale, transformed scale (closer paramterisation used mod_pois() mod_binom().)","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fix-0-9-3","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"bage 0.9.3","text":"Modify bage_mod_norm method replicate_data() returns results original scale. Modify bage_mod_norm methods helper functions augment() properly incorporate weights.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"interface-0-9-2","dir":"Changelog","previous_headings":"","what":"Interface","title":"bage 0.9.2","text":"Added original_scale argument components(), used normal models. Also added message remining users , normal models, components log scale (#88) Added information progress. Tidied printing model objects. Added new checks outcome variable: NaN Inf permitted.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.9.2","text":"Fixed bug introducted fit_default() refactored 0.9.1. Bug meant optimizer switched nlminb() optim() non-convergence, optim() starting old parameter values.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"documentation-0-9-2","dir":"Changelog","previous_headings":"","what":"Documentation","title":"bage 0.9.2","text":"Added entry RW2_Infant() priors table. Hat-tip Luke Morris noticing entry missing. (#87)","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-9-1","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.9.1","text":"Added function set_covariates(). Models can now include covariates. Covariates predictors cross-classifying dimensions age, sex, time – though covariates can formed dimensions. Added variables gdp_pc_2023 dens_2020 dataset kor_births. Added prt_deaths dataset. Added set_seeds() function, allowing users reset random seeds (though uncommon normal use.)","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-documentation-0-9-1","dir":"Changelog","previous_headings":"","what":"Changes to documentation","title":"bage 0.9.1","text":"Added covariates vignette.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-internal-calculations-0-9-1","dir":"Changelog","previous_headings":"","what":"Changes to internal calculations","title":"bage 0.9.1","text":"careful handling NAs offset predictor variables.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bage-090","dir":"Changelog","previous_headings":"","what":"bage 0.9.0","title":"bage 0.9.0","text":"CRAN release: 2025-01-08 0.9.0 onwards use formal deprecation make breaking changes Tweaks printing \"bage_mod\" objects Started vignette replicating analyses book Bayesian Demographic Estimation Forecasting","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-8-6","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.8.6","text":"Added \"multi\" option optimizer argument fit(). \"multi\", fit() function first tries nlminb() fails switches optim() method \"BFGS\". Added warning calculations converge Modified printout \"bage_mod\" objects show time spent TMB::sdreport rather time spent drawing multivariate normal (, since bage started using sparseMVN, short). Finished vignette 1. Added covariates Added gdp_pc_2023 dens_2020 variables kor_births","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-internal-calculations-0-8-5","dir":"Changelog","previous_headings":"","what":"Changes to internal calculations","title":"bage 0.8.5","text":"report_sim() excludes comparisons \"hyper\" parameters (eg standard deviations) simulation model estimation model use different priors different classes term. instance simulation model uses RW() prior age estimation model uses RW2() prior age, report_sim() report standard deviation parameter age. Added warning documentation report_sim() stating interface still development.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-8-4","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.8.4","text":"Changed zero_sum argument con (short “constraint”). con   = \"none\" corresponds zero_sum = FALSE, con = \"\" corresponds zero_sum = TRUE. Additional options added future.  Loosened restrictions AR() Lin_AR() priors coefficients longer need consistent stationarity. Stan user guide recommends building stationarity: https://mc-stan.org/docs/stan-users-guide/time-series.html#autoregressive.section Also, testing stationarity often causes numerical problems.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-internal-calculations-0-8-3","dir":"Changelog","previous_headings":"","what":"Changes to internal calculations","title":"bage 0.8.3","text":"Corrected bug forecasting AR() Lin_AR() priors. Modified prior coefficients AR() Lin_AR() priors, partical autocorrelation function (PACF), rather AR coefficients , restricted (-1, 1). Restricting PACF (-1,1) ensures stationarity.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-8-2","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.8.2","text":"Check see model object created using current version ‘bage’. Added optimizer argument fit(), giving choice three ways optimizing Modifed behaviour quiet argument fit() TRUE, trace output optimizer shown. Added start_oldpar argument fit(), allow calculations restarted model already fitted. Modified printing \"bage_mod\" object.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-8-1","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.8.1","text":"Modified construction computations part models works models fitted using “inner-outer” method. Extended print() method \"bage_mod\" shows extra output models fitted using \"inner-outer\" method.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-8-0","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.8.0","text":"Added ‘along’ column tidy print methods \"bage_mod\" objects. (Thank Andrew Taylor suggesting .) Allow s = 0 Lin() priors Added zero_sum argument priors along dimension. zero_sum TRUE, values combination variable along variable constrained sum zero. can allow better identification higher-level terms complicated models. can also slow computations, virtually effect estimates lowest-level rates, probabilities, means. Removed post-estimation standardization. now rely explicit constraints instead give interpretable values main effects interactions. Added RW2_Infant() prior modelling age-patterns mortality rates. s_seas parameter RW_Seas() RW2_Seas() now defaults 0, rather 1, seasonal effects default fixed time rather varying. Using varying seasonal effects can greatly increase computation times. Moved rvec Imports Depends, loads bage loaded. Manipulating results bage models without rvec loaded can lead strange errors. Added information computations printout fitted model objects. Added function computations(), can used extract information fitted model objects. Added quiet argument fit(). quiet TRUE (default), warnings generated nlminb() suppressed. (warnings virtually always NAs early optimization process nothing worry .)","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-internal-calculations-0-8-0","dir":"Changelog","previous_headings":"","what":"Changes to internal calculations","title":"bage 0.8.0","text":"Removed unnecessary coercion sparse matrices dense matrices (sometimes cause memory problems) Added extra constraints priors - eg first element random walks now zero. often (always) helps make raw estimates main effects interactions interpretable, can speed computations slightly. normal model, now rescale weights mean 1. allows us use default prior dispersion (exponential prior mean 1), regardless original weights. rescaling weights affects estimated value dispersion, affect estimates parameters. Generation posterior sample now using fast methods package sparseMVN possible.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"datasets-0-7-8","dir":"Changelog","previous_headings":"","what":"Datasets","title":"bage 0.7.8","text":"Added HFD, scaled SVD object holding data Human Fertiltiy Database deaths –> isl_deaths expenditure –> nld_expenditure divorces –> nzl_divorces injuries –> nzl_injuries us_acc_deaths –> usa_deaths Added new data object kor_births, births South Korea","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-7-7","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.7.7","text":"report_sim() now works fitted models. Thank Ollie Pike pointing previously . Removed redundant levels age variable divorces.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-internal-calculations-0-7-7","dir":"Changelog","previous_headings":"","what":"Changes to internal calculations","title":"bage 0.7.7","text":"Removed internal bage function rr3(). Call poputils function rr3() instead.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-7-6","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.7.6","text":"Added newdata argument forecast(). Added minimum version numbers rvec poputils.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-7-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.7.5.1","text":"Fixed bug code simulating Lin() Lin_AR() priors.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-7-5","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.7.5","text":"Added arguments method vars_inner fit(). method \"standard\" (default) fit() uses existing calculation methods. method \"inner-outer\", fit() uses new, somewhat experimental calculation method involves fitting inner model using subset variables, outer model using remaining variables. big datasets, \"inner-outer\" can faster, use less memory, give similar results. Added information numbers parameters, standard deviations output print. Thank Duncan Elliot suggesting printing numbers parameters.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-calculations-0-7-5","dir":"Changelog","previous_headings":"","what":"Changes to calculations","title":"bage 0.7.5","text":"fit() now internally aggregates input data fitting, cells combinations predictor variables combined. increases speed reduces memory usage.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-documentation-0-7-5","dir":"Changelog","previous_headings":"","what":"Changes to documentation","title":"bage 0.7.5","text":"Added help print.bage_mod","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bage-074","dir":"Changelog","previous_headings":"","what":"bage 0.7.4","title":"bage 0.7.4","text":"CRAN release: 2024-08-28","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-7-4","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.7.4","text":"Function ssvd() longer exported. export package bssvd matures. bage released CRAN","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-data-and-examples-0-7-3","dir":"Changelog","previous_headings":"","what":"Changes to data and examples","title":"bage 0.7.3","text":"Modified example augment() runs faster Reduced size divorces dataset","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-7-2","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.7.2","text":"Added first data model. New function set_datamod_outcome_rr3(), deals case outcome variable randomly rounded base 3. augment() now creates new version outcome variable () outcome variable NAs, (ii) data model applied outcome variable. name new variable created added . start name outcome variable. help page summarising available data models","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-7-1","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.7.1","text":"now three choices standardization argument: \"terms\", \"anova\", \"none\". \"terms\", effects, plus assoicated SVD coefficients, trend, cyclical, seasonal terms, centered independently. \"anova\", type standardization descibed Section 15.6 Gelman et al (2014) Bayesian Data Analysis, applied effects.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-calculations-0-7-0","dir":"Changelog","previous_headings":"","what":"Changes to calculations","title":"bage 0.7.0","text":"simplification standardization, likely future split two types standardization: one gives ANOVA-style decomposition effects, one helps understanding dynamics term.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-infrastructure-0-7-0","dir":"Changelog","previous_headings":"","what":"Changes to infrastructure","title":"bage 0.7.0","text":"Added Makevars file.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-documentation-0-7-0","dir":"Changelog","previous_headings":"","what":"Changes to documentation","title":"bage 0.7.0","text":"Stopped referring second-order walks equivalent random walks drift. (second-order random walk differs random walk implied drift term second-order random walk can vary time.)","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-calculations-0-6-3","dir":"Changelog","previous_headings":"","what":"Changes to calculations","title":"bage 0.6.3","text":"Changed standardization forecasts forecasts standardized along ‘along’ dimension choosing values makes consistent time trends estimation period, standardizing within value along dimensions.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-6-2","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.6.2","text":"Removed SVDS(), SVDS_AR(), SVDS_AR1(), SVDS_RW(), SVDS_RW2() priors. Added indep argument corresponding SVD priors. SVD priors now choose ‘total’, ‘independent’ ‘joint’ models based (1) value indep argument, (2) value var_sexgender name term.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-data-0-6-2","dir":"Changelog","previous_headings":"","what":"Changes to data","title":"bage 0.6.2","text":"Object HMD now contains 5 components, rather 10.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-calculations-0-6-1","dir":"Changelog","previous_headings":"","what":"Changes to calculations","title":"bage 0.6.1","text":"Fixed problems standardization forecast Added intercept term Lin() LinAR() priors","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"issues-0-6-0","dir":"Changelog","previous_headings":"","what":"Issues","title":"bage 0.6.0","text":"Standardization forecasts working correctly.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-6-0","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.6.0","text":"Added priors SVD_AR(), SVDS_AR(), SVD_AR1(), SVDS_AR1(), SVD_RW(), SVDS_RW(), SVD_RW2(), SVDS_RW2()","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"internal-calculations-0-6-0","dir":"Changelog","previous_headings":"","what":"Internal calculations","title":"bage 0.6.0","text":"Changed values stored object: removed draws_linpred, added draws_effectfree, draws_spline, draws_svd. Modified/added downstream functions. Calculation ‘along_by’ ‘agesex’ matrices pushed downwards lower-level functions.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-5-1","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.5.1","text":"Moved HMD code package bssvd.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-5-0","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.5.0","text":"Combined interaction (eg ELin) main effect (eg Lin) versions priors Removed function compose_time() Added priors RWSeas RW2Seas Improved report_sim()","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-4-2","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.4.2","text":"Tidying online help (yet complete).","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"new-functions-0-4-1","dir":"Changelog","previous_headings":"","what":"New functions","title":"bage 0.4.1","text":"Added ‘bage_ssvd’ method components().","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-interface-0-4-1","dir":"Changelog","previous_headings":"","what":"Changes to interface","title":"bage 0.4.1","text":"augment() method bage_mod objects now calculated value .fitted cases outcome exposure/size NA, rather setting value .fitted NA.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"internal-calculations-0-4-1","dir":"Changelog","previous_headings":"","what":"Internal calculations","title":"bage 0.4.1","text":"Standardization effects done components() called. augment() uses linear predictor (need standardization.) Internally, draws linear predictor, hyper-parameters (included model) disp stored, rather full standardized components. Standardization algorithm repeats 100 times, residuals less 0.0001. new configuration, calculations large matrices previously failed error message “Internal error: Final residual 0” now running.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"simulations-0-4-1","dir":"Changelog","previous_headings":"","what":"Simulations","title":"bage 0.4.1","text":"drawing prior, intercept always set 0. Terms SVD Known priors touched. terms centered.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"changes-to-back-end-for-svd-priors-0-4-0","dir":"Changelog","previous_headings":"","what":"Changes to back-end for SVD priors","title":"bage 0.4.0","text":"Move functions creating ‘bage_ssvd’ objects package ‘bssvd’.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.4.0","text":"Corrected error calculation logit ssvd_comp().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"new-functions-0-3-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"bage 0.3.2","text":"forecast.bage_mod() Forecasting. Interface yet finalised.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.3.2","text":"Corrected error C++ template Lin ELin priors (due use integer arithmetic.)","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"new-functions-0-2-2","dir":"Changelog","previous_headings":"","what":"New functions","title":"bage 0.2.2","text":"generate.bage_ssvd() Generate random age-sex profiles SVD.","code":""},{"path":"https://bayesiandemography.github.io/bage/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"bage 0.2.2","text":"Internal function draw_vals_effect_mod() malfunctioning models contained SVD priors.","code":""}]
