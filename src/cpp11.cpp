// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// posterior.cpp
doubles make_age_effect(list terms, integers dim, list mappings, doubles b, cpp11::doubles_matrix<> X);
extern "C" SEXP _bage_make_age_effect(SEXP terms, SEXP dim, SEXP mappings, SEXP b, SEXP X) {
  BEGIN_CPP11
    return cpp11::as_sexp(make_age_effect(cpp11::as_cpp<cpp11::decay_t<list>>(terms), cpp11::as_cpp<cpp11::decay_t<integers>>(dim), cpp11::as_cpp<cpp11::decay_t<list>>(mappings), cpp11::as_cpp<cpp11::decay_t<doubles>>(b), cpp11::as_cpp<cpp11::decay_t<cpp11::doubles_matrix<>>>(X)));
  END_CPP11
}
// posterior.cpp
doubles make_linear_pred(list terms, integers dim, list mappings);
extern "C" SEXP _bage_make_linear_pred(SEXP terms, SEXP dim, SEXP mappings) {
  BEGIN_CPP11
    return cpp11::as_sexp(make_linear_pred(cpp11::as_cpp<cpp11::decay_t<list>>(terms), cpp11::as_cpp<cpp11::decay_t<integers>>(dim), cpp11::as_cpp<cpp11::decay_t<list>>(mappings)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_bage_make_age_effect",  (DL_FUNC) &_bage_make_age_effect,  5},
    {"_bage_make_linear_pred", (DL_FUNC) &_bage_make_linear_pred, 3},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_bage(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
